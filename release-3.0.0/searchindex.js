Search.setIndex({"docnames": ["README", "api/pwem/modules", "api/pwem/pwem", "api/pwem/pwem.bibtex", "api/pwem/pwem.constants", "api/pwem/pwem.convert", "api/pwem/pwem.convert.atom_struct", "api/pwem/pwem.convert.headers", "api/pwem/pwem.convert.sequence", "api/pwem/pwem.convert.symmetry", "api/pwem/pwem.convert.transformations", "api/pwem/pwem.convert.utils", "api/pwem/pwem.emlib", "api/pwem/pwem.emlib.image", "api/pwem/pwem.emlib.image.image_handler", "api/pwem/pwem.emlib.lib", "api/pwem/pwem.emlib.metadata", "api/pwem/pwem.emlib.metadata.utils", "api/pwem/pwem.objects", "api/pwem/pwem.objects.data", "api/pwem/pwem.objects.data_tiltpairs", "api/pwem/pwem.protocols", "api/pwem/pwem.protocols.parallel", "api/pwem/pwem.protocols.protocol", "api/pwem/pwem.protocols.protocol_2d", "api/pwem/pwem.protocols.protocol_3d", "api/pwem/pwem.protocols.protocol_align_movies", "api/pwem/pwem.protocols.protocol_alignment_assign", "api/pwem/pwem.protocols.protocol_alignment_invertHand", "api/pwem/pwem.protocols.protocol_batch", "api/pwem/pwem.protocols.protocol_boxsize_parameters", "api/pwem/pwem.protocols.protocol_classes_selector", "api/pwem/pwem.protocols.protocol_create_stream_data", "api/pwem/pwem.protocols.protocol_ctf_assign", "api/pwem/pwem.protocols.protocol_export", "api/pwem/pwem.protocols.protocol_export.protocol_export_DB", "api/pwem/pwem.protocols.protocol_extract_coordinates", "api/pwem/pwem.protocols.protocol_import", "api/pwem/pwem.protocols.protocol_import.base", "api/pwem/pwem.protocols.protocol_import.coordinates", "api/pwem/pwem.protocols.protocol_import.ctfs", "api/pwem/pwem.protocols.protocol_import.dataimport", "api/pwem/pwem.protocols.protocol_import.images", "api/pwem/pwem.protocols.protocol_import.masks", "api/pwem/pwem.protocols.protocol_import.micrographs", "api/pwem/pwem.protocols.protocol_import.particles", "api/pwem/pwem.protocols.protocol_import.sequence", "api/pwem/pwem.protocols.protocol_import.volumes", "api/pwem/pwem.protocols.protocol_mathematical_operator", "api/pwem/pwem.protocols.protocol_micrographs", "api/pwem/pwem.protocols.protocol_movie_eraser", "api/pwem/pwem.protocols.protocol_movies", "api/pwem/pwem.protocols.protocol_origin_sampling_volume", "api/pwem/pwem.protocols.protocol_particles", "api/pwem/pwem.protocols.protocol_particles_picking", "api/pwem/pwem.protocols.protocol_pdf_report", "api/pwem/pwem.protocols.protocol_set_editor", "api/pwem/pwem.protocols.protocol_set_filter", "api/pwem/pwem.protocols.protocol_sets", "api/pwem/pwem.protocols.protocol_tests", "api/pwem/pwem.protocols.protocol_tiltpairs", "api/pwem/pwem.protocols.protocol_tools", "api/pwem/pwem.utils", "api/pwem/pwem.viewers", "api/pwem/pwem.viewers.filehandlers", "api/pwem/pwem.viewers.plotter", "api/pwem/pwem.viewers.showj", "api/pwem/pwem.viewers.viewer_base", "api/pwem/pwem.viewers.viewer_chimera", "api/pwem/pwem.viewers.viewer_fsc", "api/pwem/pwem.viewers.viewer_localres", "api/pwem/pwem.viewers.viewer_pdf", "api/pwem/pwem.viewers.viewer_sequence", "api/pwem/pwem.viewers.viewer_vmd", "api/pwem/pwem.viewers.viewer_volumes", "api/pwem/pwem.viewers.viewers_data", "api/pwem/pwem.viewers.viewers_protocols", "api/pwem/pwem.viewers.views", "api/pwem/pwem.wizards", "api/pwem/pwem.wizards.wizard", "api/pwem/pwem.wizards.wizards", "api/pwem/pwem.wizards.wizards_3d", "api/pwem/pwem.wizards.wizards_3d.callbacks", "api/pwem/pwem.wizards.wizards_3d.mask_structure_wizard", "api/pwem/pwem.wizards.wizards_3d.mask_volume_wizard", "api/pwem/setup", "api/pyworkflow/modules", "api/pyworkflow/pyworkflow", "api/pyworkflow/pyworkflow.apps", "api/pyworkflow/pyworkflow.apps.pw_manager", "api/pyworkflow/pyworkflow.apps.pw_plot", "api/pyworkflow/pyworkflow.apps.pw_project", "api/pyworkflow/pyworkflow.apps.pw_protocol_list", "api/pyworkflow/pyworkflow.apps.pw_protocol_mpirun", "api/pyworkflow/pyworkflow.apps.pw_protocol_remote", "api/pyworkflow/pyworkflow.apps.pw_protocol_run", "api/pyworkflow/pyworkflow.apps.pw_run_tests", "api/pyworkflow/pyworkflow.apps.pw_schedule_run", "api/pyworkflow/pyworkflow.apps.pw_sleep", "api/pyworkflow/pyworkflow.apps.pw_sync_data", "api/pyworkflow/pyworkflow.apps.pw_viewer", "api/pyworkflow/pyworkflow.config", "api/pyworkflow/pyworkflow.constants", "api/pyworkflow/pyworkflow.exceptions", "api/pyworkflow/pyworkflow.gui", "api/pyworkflow/pyworkflow.gui.browser", "api/pyworkflow/pyworkflow.gui.canvas", "api/pyworkflow/pyworkflow.gui.dialog", "api/pyworkflow/pyworkflow.gui.form", "api/pyworkflow/pyworkflow.gui.graph", "api/pyworkflow/pyworkflow.gui.graph_layout", "api/pyworkflow/pyworkflow.gui.gui", "api/pyworkflow/pyworkflow.gui.matplotlib_image", "api/pyworkflow/pyworkflow.gui.plotter", "api/pyworkflow/pyworkflow.gui.project", "api/pyworkflow/pyworkflow.gui.project.base", "api/pyworkflow/pyworkflow.gui.project.constants", "api/pyworkflow/pyworkflow.gui.project.labels", "api/pyworkflow/pyworkflow.gui.project.project", "api/pyworkflow/pyworkflow.gui.project.searchprotocol", "api/pyworkflow/pyworkflow.gui.project.searchrun", "api/pyworkflow/pyworkflow.gui.project.steps", "api/pyworkflow/pyworkflow.gui.project.utils", "api/pyworkflow/pyworkflow.gui.project.viewdata", "api/pyworkflow/pyworkflow.gui.project.viewprojects", "api/pyworkflow/pyworkflow.gui.project.viewprotocols", "api/pyworkflow/pyworkflow.gui.project.viewprotocols_extra", "api/pyworkflow/pyworkflow.gui.text", "api/pyworkflow/pyworkflow.gui.tooltip", "api/pyworkflow/pyworkflow.gui.tree", "api/pyworkflow/pyworkflow.gui.widgets", "api/pyworkflow/pyworkflow.mapper", "api/pyworkflow/pyworkflow.mapper.mapper", "api/pyworkflow/pyworkflow.mapper.sqlite", "api/pyworkflow/pyworkflow.mapper.sqlite_db", "api/pyworkflow/pyworkflow.mapper.xmlmapper", "api/pyworkflow/pyworkflow.object", "api/pyworkflow/pyworkflow.plugin", "api/pyworkflow/pyworkflow.project", "api/pyworkflow/pyworkflow.project.config", "api/pyworkflow/pyworkflow.project.manager", "api/pyworkflow/pyworkflow.project.project", "api/pyworkflow/pyworkflow.protocol", "api/pyworkflow/pyworkflow.protocol.bibtex", "api/pyworkflow/pyworkflow.protocol.constants", "api/pyworkflow/pyworkflow.protocol.executor", "api/pyworkflow/pyworkflow.protocol.hosts", "api/pyworkflow/pyworkflow.protocol.launch", "api/pyworkflow/pyworkflow.protocol.package", "api/pyworkflow/pyworkflow.protocol.params", "api/pyworkflow/pyworkflow.protocol.protocol", "api/pyworkflow/pyworkflow.template", "api/pyworkflow/pyworkflow.tests", "api/pyworkflow/pyworkflow.tests.test_utils", "api/pyworkflow/pyworkflow.tests.tests", "api/pyworkflow/pyworkflow.utils", "api/pyworkflow/pyworkflow.utils.dataset", "api/pyworkflow/pyworkflow.utils.echo", "api/pyworkflow/pyworkflow.utils.graph", "api/pyworkflow/pyworkflow.utils.log", "api/pyworkflow/pyworkflow.utils.mpi", "api/pyworkflow/pyworkflow.utils.path", "api/pyworkflow/pyworkflow.utils.process", "api/pyworkflow/pyworkflow.utils.profiler", "api/pyworkflow/pyworkflow.utils.progressbar", "api/pyworkflow/pyworkflow.utils.properties", "api/pyworkflow/pyworkflow.utils.reflection", "api/pyworkflow/pyworkflow.utils.utils", "api/pyworkflow/pyworkflow.utils.which", "api/pyworkflow/pyworkflow.viewer", "api/pyworkflow/pyworkflow.webservices", "api/pyworkflow/pyworkflow.webservices.config", "api/pyworkflow/pyworkflow.webservices.notifier", "api/pyworkflow/pyworkflow.webservices.repository", "api/pyworkflow/pyworkflow.wizard", "api/pyworkflow/setup", "api/scipion/modules", "api/scipion/scipion", "api/scipion/scipion.constants", "api/scipion/scipion.guiplugin", "api/scipion/scipion.install", "api/scipion/scipion.install.change_rpath", "api/scipion/scipion.install.clean", "api/scipion/scipion.install.find_deps", "api/scipion/scipion.install.funcs", "api/scipion/scipion.install.inspect_plugins", "api/scipion/scipion.install.install_plugin", "api/scipion/scipion.install.plugin_funcs", "api/scipion/scipion.install.plugin_manager", "api/scipion/scipion.install.update_manager", "api/scipion/scipion.scripts", "api/scipion/scipion.scripts.config", "api/scipion/scipion.scripts.fontbrowser", "api/scipion/scipion.scripts.kickoff", "api/scipion/scipion.scripts.tutorial", "api/scipion/scipion.utils", "api/scipion/setup", "api/xmipp3/modules", "api/xmipp3/setup", "api/xmipp3/xmipp3", "api/xmipp3/xmipp3.base", "api/xmipp3/xmipp3.bibtex", "api/xmipp3/xmipp3.constants", "api/xmipp3/xmipp3.convert", "api/xmipp3/xmipp3.convert.convert", "api/xmipp3/xmipp3.convert.dataimport", "api/xmipp3/xmipp3.convert.io_coordinates", "api/xmipp3/xmipp3.programs", "api/xmipp3/xmipp3.protocols", "api/xmipp3/xmipp3.protocols.protocol_align_volume", "api/xmipp3/xmipp3.protocols.protocol_align_volume_and_particles", "api/xmipp3/xmipp3.protocols.protocol_analyze_local_ctf", "api/xmipp3/xmipp3.protocols.protocol_angular_graph_consistency", "api/xmipp3/xmipp3.protocols.protocol_apply_alignment", "api/xmipp3/xmipp3.protocols.protocol_apply_deformation_zernike3d", "api/xmipp3/xmipp3.protocols.protocol_apply_transformation_matrix", "api/xmipp3/xmipp3.protocols.protocol_apply_zernike3d", "api/xmipp3/xmipp3.protocols.protocol_assignment_tilt_pair", "api/xmipp3/xmipp3.protocols.protocol_break_symmetry", "api/xmipp3/xmipp3.protocols.protocol_center_particles", "api/xmipp3/xmipp3.protocols.protocol_cl2d", "api/xmipp3/xmipp3.protocols.protocol_cl2d_align", "api/xmipp3/xmipp3.protocols.protocol_classes_2d_mapping", "api/xmipp3/xmipp3.protocols.protocol_classification_gpuCorr", "api/xmipp3/xmipp3.protocols.protocol_classification_gpuCorr_full", "api/xmipp3/xmipp3.protocols.protocol_classification_gpuCorr_semi", "api/xmipp3/xmipp3.protocols.protocol_classify_kmeans2d", "api/xmipp3/xmipp3.protocols.protocol_compare_angles", "api/xmipp3/xmipp3.protocols.protocol_compare_reprojections", "api/xmipp3/xmipp3.protocols.protocol_consensus_classes3D", "api/xmipp3/xmipp3.protocols.protocol_consensus_local_ctf", "api/xmipp3/xmipp3.protocols.protocol_convert_pdb", "api/xmipp3/xmipp3.protocols.protocol_core_analysis", "api/xmipp3/xmipp3.protocols.protocol_create_gallery", "api/xmipp3/xmipp3.protocols.protocol_ctf_consensus", "api/xmipp3/xmipp3.protocols.protocol_ctf_correct_wiener2d", "api/xmipp3/xmipp3.protocols.protocol_ctf_defocus_group", "api/xmipp3/xmipp3.protocols.protocol_ctf_micrographs", "api/xmipp3/xmipp3.protocols.protocol_deep_align", "api/xmipp3/xmipp3.protocols.protocol_deep_denoising", "api/xmipp3/xmipp3.protocols.protocol_deep_hand", "api/xmipp3/xmipp3.protocols.protocol_deep_micrograph_screen", "api/xmipp3/xmipp3.protocols.protocol_denoise_particles", "api/xmipp3/xmipp3.protocols.protocol_eliminate_empty_images", "api/xmipp3/xmipp3.protocols.protocol_enrich", "api/xmipp3/xmipp3.protocols.protocol_extract_asymmetric_unit", "api/xmipp3/xmipp3.protocols.protocol_extract_particles", "api/xmipp3/xmipp3.protocols.protocol_extract_particles_movies", "api/xmipp3/xmipp3.protocols.protocol_extract_particles_pairs", "api/xmipp3/xmipp3.protocols.protocol_flexalign", "api/xmipp3/xmipp3.protocols.protocol_generate_reprojections", "api/xmipp3/xmipp3.protocols.protocol_helical_parameters", "api/xmipp3/xmipp3.protocols.protocol_kerdensom", "api/xmipp3/xmipp3.protocols.protocol_kmeans_clustering", "api/xmipp3/xmipp3.protocols.protocol_local_ctf", "api/xmipp3/xmipp3.protocols.protocol_metaprotocol_create_output", "api/xmipp3/xmipp3.protocols.protocol_metaprotocol_create_subset", "api/xmipp3/xmipp3.protocols.protocol_metaprotocol_discrete_heterogeneity_scheduler", "api/xmipp3/xmipp3.protocols.protocol_metaprotocol_golden_highres", "api/xmipp3/xmipp3.protocols.protocol_ml2d", "api/xmipp3/xmipp3.protocols.protocol_movie_average", "api/xmipp3/xmipp3.protocols.protocol_movie_gain", "api/xmipp3/xmipp3.protocols.protocol_movie_max_shift", "api/xmipp3/xmipp3.protocols.protocol_movie_opticalflow", "api/xmipp3/xmipp3.protocols.protocol_movie_split_frames", "api/xmipp3/xmipp3.protocols.protocol_multiple_fscs", "api/xmipp3/xmipp3.protocols.protocol_multireference_alignability", "api/xmipp3/xmipp3.protocols.protocol_normalize_strain", "api/xmipp3/xmipp3.protocols.protocol_particle_boxsize", "api/xmipp3/xmipp3.protocols.protocol_particle_pick", "api/xmipp3/xmipp3.protocols.protocol_particle_pick_automatic", "api/xmipp3/xmipp3.protocols.protocol_particle_pick_consensus", "api/xmipp3/xmipp3.protocols.protocol_particle_pick_pairs", "api/xmipp3/xmipp3.protocols.protocol_particle_pick_remove_duplicates", "api/xmipp3/xmipp3.protocols.protocol_phantom_create", "api/xmipp3/xmipp3.protocols.protocol_pick_noise", "api/xmipp3/xmipp3.protocols.protocol_postProcessing_deepPostProcessing", "api/xmipp3/xmipp3.protocols.protocol_preprocess", "api/xmipp3/xmipp3.protocols.protocol_preprocess.geometrical_mask", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_add_noise", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_create_mask2d", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_create_mask3d", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_crop_resize", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_filter", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_image_operate", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_mask", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_movie_resize", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_preprocess", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_process", "api/xmipp3/xmipp3.protocols.protocol_preprocess_micrographs", "api/xmipp3/xmipp3.protocols.protocol_projmatch", "api/xmipp3/xmipp3.protocols.protocol_projmatch.projmatch_form", "api/xmipp3/xmipp3.protocols.protocol_projmatch.projmatch_initialize", "api/xmipp3/xmipp3.protocols.protocol_projmatch.projmatch_steps", "api/xmipp3/xmipp3.protocols.protocol_projmatch.protocol_projmatch", "api/xmipp3/xmipp3.protocols.protocol_random_conical_tilt", "api/xmipp3/xmipp3.protocols.protocol_ransac", "api/xmipp3/xmipp3.protocols.protocol_reconstruct_fourier", "api/xmipp3/xmipp3.protocols.protocol_reconstruct_heterogeneous", "api/xmipp3/xmipp3.protocols.protocol_reconstruct_highres", "api/xmipp3/xmipp3.protocols.protocol_reconstruct_significant", "api/xmipp3/xmipp3.protocols.protocol_reconstruct_swarm", "api/xmipp3/xmipp3.protocols.protocol_resolution3d", "api/xmipp3/xmipp3.protocols.protocol_resolution_bfactor", "api/xmipp3/xmipp3.protocols.protocol_resolution_deepres", "api/xmipp3/xmipp3.protocols.protocol_resolution_directional", "api/xmipp3/xmipp3.protocols.protocol_resolution_fso", "api/xmipp3/xmipp3.protocols.protocol_resolution_monogenic_signal", "api/xmipp3/xmipp3.protocols.protocol_rotate_volume", "api/xmipp3/xmipp3.protocols.protocol_rotational_spectra", "api/xmipp3/xmipp3.protocols.protocol_rotational_symmetry", "api/xmipp3/xmipp3.protocols.protocol_screen_deepConsensus", "api/xmipp3/xmipp3.protocols.protocol_screen_deeplearning", "api/xmipp3/xmipp3.protocols.protocol_screen_particles", "api/xmipp3/xmipp3.protocols.protocol_shift_particles", "api/xmipp3/xmipp3.protocols.protocol_shift_volume", "api/xmipp3/xmipp3.protocols.protocol_simulate_ctf", "api/xmipp3/xmipp3.protocols.protocol_solid_angles", "api/xmipp3/xmipp3.protocols.protocol_split_volume", "api/xmipp3/xmipp3.protocols.protocol_split_volume_hierarchical_cluster", "api/xmipp3/xmipp3.protocols.protocol_structure_map", "api/xmipp3/xmipp3.protocols.protocol_structure_map_zernike3d", "api/xmipp3/xmipp3.protocols.protocol_subtract_projection", "api/xmipp3/xmipp3.protocols.protocol_tilt_analysis", "api/xmipp3/xmipp3.protocols.protocol_trigger_data", "api/xmipp3/xmipp3.protocols.protocol_validate_fscq", "api/xmipp3/xmipp3.protocols.protocol_validate_nontilt", "api/xmipp3/xmipp3.protocols.protocol_validate_overfitting", "api/xmipp3/xmipp3.protocols.protocol_volume_adjust_sub", "api/xmipp3/xmipp3.protocols.protocol_volume_consensus", "api/xmipp3/xmipp3.protocols.protocol_volume_deform_zernike3d", "api/xmipp3/xmipp3.protocols.protocol_volume_local_sharpening", "api/xmipp3/xmipp3.protocols.protocol_volume_strain", "api/xmipp3/xmipp3.protocols.protocol_write_testC", "api/xmipp3/xmipp3.protocols.protocol_write_testP", "api/xmipp3/xmipp3.utils", "api/xmipp3/xmipp3.viewers", "api/xmipp3/xmipp3.viewers.plotter", "api/xmipp3/xmipp3.viewers.viewer", "api/xmipp3/xmipp3.viewers.viewer_analyze_local_ctf", "api/xmipp3/xmipp3.viewers.viewer_cl2d", "api/xmipp3/xmipp3.viewers.viewer_classes3D", "api/xmipp3/xmipp3.viewers.viewer_consensus_classes3D", "api/xmipp3/xmipp3.viewers.viewer_ctf_consensus", "api/xmipp3/xmipp3.viewers.viewer_deepEMHancer", "api/xmipp3/xmipp3.viewers.viewer_deep_align", "api/xmipp3/xmipp3.viewers.viewer_deep_consensus", "api/xmipp3/xmipp3.viewers.viewer_deep_micrograph_cleaner", "api/xmipp3/xmipp3.viewers.viewer_eliminate_empty_images", "api/xmipp3/xmipp3.viewers.viewer_extract_asymmetric_unit", "api/xmipp3/xmipp3.viewers.viewer_local_sharpening", "api/xmipp3/xmipp3.viewers.viewer_metaprotocol_golden_highres", "api/xmipp3/xmipp3.viewers.viewer_ml2d", "api/xmipp3/xmipp3.viewers.viewer_movie_alignment", "api/xmipp3/xmipp3.viewers.viewer_normalize_strain", "api/xmipp3/xmipp3.viewers.viewer_pdb_deform_zernike3d", "api/xmipp3/xmipp3.viewers.viewer_projmatch", "api/xmipp3/xmipp3.viewers.viewer_ransac", "api/xmipp3/xmipp3.viewers.viewer_reconstruct_highres", "api/xmipp3/xmipp3.viewers.viewer_resolution3d", "api/xmipp3/xmipp3.viewers.viewer_resolution_bfactor", "api/xmipp3/xmipp3.viewers.viewer_resolution_deepres", "api/xmipp3/xmipp3.viewers.viewer_resolution_directional", "api/xmipp3/xmipp3.viewers.viewer_resolution_fso", "api/xmipp3/xmipp3.viewers.viewer_resolution_monogenic_signal", "api/xmipp3/xmipp3.viewers.viewer_solid_angles", "api/xmipp3/xmipp3.viewers.viewer_split_volume", "api/xmipp3/xmipp3.viewers.viewer_structure_map", "api/xmipp3/xmipp3.viewers.viewer_swarm", "api/xmipp3/xmipp3.viewers.viewer_validate_fscq", "api/xmipp3/xmipp3.viewers.viewer_validate_nontilt", "api/xmipp3/xmipp3.viewers.viewer_validate_overfitting", "api/xmipp3/xmipp3.viewers.viewer_volume_consensus", "api/xmipp3/xmipp3.viewers.viewer_volume_deform_zernike3d", "api/xmipp3/xmipp3.viewers.viewer_volume_strain", "api/xmipp3/xmipp3.viewers.viewer_volume_subtraction", "api/xmipp3/xmipp3.wizards", "docs/api/plugins-API", "docs/api/scipion-API", "docs/api/xmipp-API", "docs/developer/Servidores-remotos-para-procesar-con-Scipion-desde-el-CNB", "docs/developer/aditional-information", "docs/developer/advanced-topics", "docs/developer/architecture", "docs/developer/artwork", "docs/developer/aws-instance-types-for-starcluster", "docs/developer/buildbot", "docs/developer/building-scipion-docs", "docs/developer/collecting-statistics", "docs/developer/conventions", "docs/developer/creating-a-new-webtool", "docs/developer/creating-a-plugin", "docs/developer/creating-a-protocol", "docs/developer/creating-a-viewer", "docs/developer/creating-a-wizard", "docs/developer/dataset-dev", "docs/developer/developers", "docs/developer/eclipse", "docs/developer/general-style", "docs/developer/gpu-params-standardization", "docs/developer/how-to-git", "docs/developer/introduction-to-scipion-developers", "docs/developer/legacy-release-notes", "docs/developer/linear-picking", "docs/developer/object-model", "docs/developer/parallelization", "docs/developer/project-definition", "docs/developer/pycharm", "docs/developer/pycharm-profiling", "docs/developer/python-style-guide", "docs/developer/release-notes", "docs/developer/road-map", "docs/developer/rotations", "docs/developer/running-tests", "docs/developer/scipion-Cloud-for-training", "docs/developer/scipion-HPC-clusters-on-AWS", "docs/developer/scipion-commands", "docs/developer/scipion-deployments-on-the-cloud", "docs/developer/scipion-deployments-on-the-egi-federated-cloud", "docs/developer/scipion-em-classes", "docs/developer/scipion-hpc-cluster-on-aws", "docs/developer/scipion-infrastructure-cloud-usage", "docs/developer/scipion-installation-system", "docs/developer/scipion-java", "docs/developer/scipion-on-the-cloud", "docs/developer/scipion-on-the-egi-federated-cloud", "docs/developer/scipionCloud-AMI-manual", "docs/developer/scipionCloud-images-manual", "docs/developer/scipionCloud-on-amazon-web-services-ec2", "docs/developer/setting-a-production-environment", "docs/developer/sqlite-flat-mapper", "docs/developer/sqlite-mapper", "docs/developer/symmetries", "docs/developer/tutorials/course_day2", "docs/developer/tutorials/creating-a-basic-plugin-from-template", "docs/developer/tutorials/creating-a-monitor", "docs/developer/tutorials/creating-a-workflow-template", "docs/developer/tutorials/creating-streaming-protocol", "docs/developer/tutorials/creating-tests-for-template-calculator", "docs/developer/tutorials/debugging-scipion", "docs/developer/tutorials/dev-tutorials", "docs/developer/tutorials/introduction-to-template-plugin", "docs/developer/tutorials/understanding-plugin-class", "docs/developer/using-sets", "docs/developer/valgrind-suite-tools-introduction", "docs/developer/vtune-profiler", "docs/developer/web-developers-page", "docs/developer/writing-tests", "docs/facilities/customize-report", "docs/facilities/customize-report-grafana", "docs/facilities/customize-report-html", "docs/facilities/facilities", "docs/facilities/facilities-API-demo", "docs/facilities/facilities-workflows", "docs/facilities/simulate-streaming-processing", "docs/misc/Scipion-demo-for-the-course-of-International-School-of-Crystallography", "docs/misc/contact-us", "docs/misc/events", "docs/scipion-modes/configMPI", "docs/scipion-modes/dependencies", "docs/scipion-modes/host-configuration", "docs/scipion-modes/how-to-install", "docs/scipion-modes/install-plugins-command-line", "docs/scipion-modes/linking-existing-software", "docs/scipion-modes/scipion-configuration", "docs/scipion-modes/verify-installation", "docs/user/create2DMask", "docs/user/dataset", "docs/user/denoising_mbSegmentation_pysegDirPicking/tomosegmemTV-pySeg-workflow", "docs/user/faq", "docs/user/importingData", "docs/user/labels", "docs/user/license", "docs/user/picker", "docs/user/plugin-manager", "docs/user/protUserSubSet", "docs/user/relion-in-scipion", "docs/user/scipion-gui", "docs/user/showJ", "docs/user/single-particle-tutorials", "docs/user/tomography-tutorials", "docs/user/troubleshooting", "docs/user/tutorials/modelBuilding/Alphafold/005-versionhistory", "docs/user/tutorials/modelBuilding/Alphafold/007-requirements", "docs/user/tutorials/modelBuilding/Alphafold/010-introduction", "docs/user/tutorials/modelBuilding/Alphafold/011-problem2solve", "docs/user/tutorials/modelBuilding/Alphafold/012-generalWorflow", "docs/user/tutorials/modelBuilding/Alphafold/020-initialModel", "docs/user/tutorials/modelBuilding/Alphafold/030-processModel", "docs/user/tutorials/modelBuilding/Alphafold/040-dockModel", "docs/user/tutorials/modelBuilding/Alphafold/050-rebuildModel", "docs/user/tutorials/modelBuilding/Alphafold/060-dockAndRebuildModel", "docs/user/tutorials/modelBuilding/Alphafold/a010-alphafoldPredictionProtocol", "docs/user/tutorials/modelBuilding/Alphafold/a020-processPredictedProtocol", "docs/user/tutorials/modelBuilding/Alphafold/a030-dockPredictedModelProtocol", "docs/user/tutorials/modelBuilding/Alphafold/a040-rebuildPredictedModelProtocol", "docs/user/tutorials/modelBuilding/Alphafold/a050-dockAndRebuildProtocol", "docs/user/tutorials/modelBuilding/Alphafold/ainitialModel", "docs/user/tutorials/modelBuilding/Alphafold/index", "docs/user/tutorials/modelBuilding/Homology/005-versionhistory", "docs/user/tutorials/modelBuilding/Homology/007-requirements", "docs/user/tutorials/modelBuilding/Homology/010-introduction", "docs/user/tutorials/modelBuilding/Homology/020-problem2solve", "docs/user/tutorials/modelBuilding/Homology/030-inputDataDescription", "docs/user/tutorials/modelBuilding/Homology/040-importInputData", "docs/user/tutorials/modelBuilding/Homology/050-volumeScenario", "docs/user/tutorials/modelBuilding/Homology/060-sequenceScenario", "docs/user/tutorials/modelBuilding/Homology/070-movingFromSequence", "docs/user/tutorials/modelBuilding/Homology/080-rigidFit", "docs/user/tutorials/modelBuilding/Homology/090-flexibleFit", "docs/user/tutorials/modelBuilding/Homology/100-validation", "docs/user/tutorials/modelBuilding/Homology/110-unitcell", "docs/user/tutorials/modelBuilding/Homology/120-macromolecule", "docs/user/tutorials/modelBuilding/Homology/121-submissionResults", "docs/user/tutorials/modelBuilding/Homology/130-install", "docs/user/tutorials/modelBuilding/Homology/131-problems", "docs/user/tutorials/modelBuilding/Homology/140-todo", "docs/user/tutorials/modelBuilding/Homology/a010-answers", "docs/user/tutorials/modelBuilding/Homology/a011-atomStructUtilsOperatorProtocol", "docs/user/tutorials/modelBuilding/Homology/a012-chimeraContacts", "docs/user/tutorials/modelBuilding/Homology/a013-chimeraMapSubtraction", "docs/user/tutorials/modelBuilding/Homology/a020-chimeraOperate", "docs/user/tutorials/modelBuilding/Homology/a030-chimeraRestoreSession", "docs/user/tutorials/modelBuilding/Homology/a040-chimeraRigidFit", "docs/user/tutorials/modelBuilding/Homology/a050-ccp4CootRefinement", "docs/user/tutorials/modelBuilding/Homology/a060-ccp4Refmac", "docs/user/tutorials/modelBuilding/Homology/a061-create3DMask", "docs/user/tutorials/modelBuilding/Homology/a062-deepEMhancerSharpening", "docs/user/tutorials/modelBuilding/Homology/a070-extractUnitCell", "docs/user/tutorials/modelBuilding/Homology/a080-importAtomicStructure", "docs/user/tutorials/modelBuilding/Homology/a090-importSequence", "docs/user/tutorials/modelBuilding/Homology/a091-importMask", "docs/user/tutorials/modelBuilding/Homology/a100-importvolume", "docs/user/tutorials/modelBuilding/Homology/a101-localDeblurSharpening", "docs/user/tutorials/modelBuilding/Homology/a102-localMonoRes", "docs/user/tutorials/modelBuilding/Homology/a110-modelFromTemplate", "docs/user/tutorials/modelBuilding/Homology/a120-emRingerProtocol", "docs/user/tutorials/modelBuilding/Homology/a130-molprobityProtocol", "docs/user/tutorials/modelBuilding/Homology/a131-valCryoEMProtocol", "docs/user/tutorials/modelBuilding/Homology/a140-realSpaceRefineProtocol", "docs/user/tutorials/modelBuilding/Homology/a150-superposePdbsProtocol", "docs/user/tutorials/modelBuilding/Homology/a160-dockInMapProtocol", "docs/user/tutorials/modelBuilding/Homology/a161-searcFitProtocol", "docs/user/tutorials/modelBuilding/Homology/a162-asignOrigAndSampling", "docs/user/tutorials/modelBuilding/Homology/a170-exportToEMDB", "docs/user/tutorials/modelBuilding/Homology/index", "docs/user/tutorials/modelBuilding/Homology/z010-references", "docs/user/tutorials/tomo/Picking_tutorial/tutorial-picking", "docs/user/tutorials/tomo/Picking_tutorial_lite/dynamo-tutorial-picking-lite", "docs/user/tutorials/tomo/devel_mode_installation", "docs/user/user-documentation", "index"], "filenames": ["README.rst", "api/pwem/modules.rst", "api/pwem/pwem.rst", "api/pwem/pwem.bibtex.rst", "api/pwem/pwem.constants.rst", "api/pwem/pwem.convert.rst", "api/pwem/pwem.convert.atom_struct.rst", "api/pwem/pwem.convert.headers.rst", "api/pwem/pwem.convert.sequence.rst", "api/pwem/pwem.convert.symmetry.rst", "api/pwem/pwem.convert.transformations.rst", "api/pwem/pwem.convert.utils.rst", "api/pwem/pwem.emlib.rst", "api/pwem/pwem.emlib.image.rst", "api/pwem/pwem.emlib.image.image_handler.rst", "api/pwem/pwem.emlib.lib.rst", "api/pwem/pwem.emlib.metadata.rst", "api/pwem/pwem.emlib.metadata.utils.rst", "api/pwem/pwem.objects.rst", "api/pwem/pwem.objects.data.rst", "api/pwem/pwem.objects.data_tiltpairs.rst", "api/pwem/pwem.protocols.rst", "api/pwem/pwem.protocols.parallel.rst", "api/pwem/pwem.protocols.protocol.rst", "api/pwem/pwem.protocols.protocol_2d.rst", "api/pwem/pwem.protocols.protocol_3d.rst", "api/pwem/pwem.protocols.protocol_align_movies.rst", "api/pwem/pwem.protocols.protocol_alignment_assign.rst", "api/pwem/pwem.protocols.protocol_alignment_invertHand.rst", "api/pwem/pwem.protocols.protocol_batch.rst", "api/pwem/pwem.protocols.protocol_boxsize_parameters.rst", "api/pwem/pwem.protocols.protocol_classes_selector.rst", "api/pwem/pwem.protocols.protocol_create_stream_data.rst", "api/pwem/pwem.protocols.protocol_ctf_assign.rst", "api/pwem/pwem.protocols.protocol_export.rst", "api/pwem/pwem.protocols.protocol_export.protocol_export_DB.rst", "api/pwem/pwem.protocols.protocol_extract_coordinates.rst", "api/pwem/pwem.protocols.protocol_import.rst", "api/pwem/pwem.protocols.protocol_import.base.rst", "api/pwem/pwem.protocols.protocol_import.coordinates.rst", "api/pwem/pwem.protocols.protocol_import.ctfs.rst", "api/pwem/pwem.protocols.protocol_import.dataimport.rst", "api/pwem/pwem.protocols.protocol_import.images.rst", "api/pwem/pwem.protocols.protocol_import.masks.rst", "api/pwem/pwem.protocols.protocol_import.micrographs.rst", "api/pwem/pwem.protocols.protocol_import.particles.rst", "api/pwem/pwem.protocols.protocol_import.sequence.rst", "api/pwem/pwem.protocols.protocol_import.volumes.rst", "api/pwem/pwem.protocols.protocol_mathematical_operator.rst", "api/pwem/pwem.protocols.protocol_micrographs.rst", "api/pwem/pwem.protocols.protocol_movie_eraser.rst", "api/pwem/pwem.protocols.protocol_movies.rst", "api/pwem/pwem.protocols.protocol_origin_sampling_volume.rst", "api/pwem/pwem.protocols.protocol_particles.rst", "api/pwem/pwem.protocols.protocol_particles_picking.rst", "api/pwem/pwem.protocols.protocol_pdf_report.rst", "api/pwem/pwem.protocols.protocol_set_editor.rst", "api/pwem/pwem.protocols.protocol_set_filter.rst", "api/pwem/pwem.protocols.protocol_sets.rst", "api/pwem/pwem.protocols.protocol_tests.rst", "api/pwem/pwem.protocols.protocol_tiltpairs.rst", "api/pwem/pwem.protocols.protocol_tools.rst", "api/pwem/pwem.utils.rst", "api/pwem/pwem.viewers.rst", "api/pwem/pwem.viewers.filehandlers.rst", "api/pwem/pwem.viewers.plotter.rst", "api/pwem/pwem.viewers.showj.rst", "api/pwem/pwem.viewers.viewer_base.rst", "api/pwem/pwem.viewers.viewer_chimera.rst", "api/pwem/pwem.viewers.viewer_fsc.rst", "api/pwem/pwem.viewers.viewer_localres.rst", "api/pwem/pwem.viewers.viewer_pdf.rst", "api/pwem/pwem.viewers.viewer_sequence.rst", "api/pwem/pwem.viewers.viewer_vmd.rst", "api/pwem/pwem.viewers.viewer_volumes.rst", "api/pwem/pwem.viewers.viewers_data.rst", "api/pwem/pwem.viewers.viewers_protocols.rst", "api/pwem/pwem.viewers.views.rst", "api/pwem/pwem.wizards.rst", "api/pwem/pwem.wizards.wizard.rst", "api/pwem/pwem.wizards.wizards.rst", "api/pwem/pwem.wizards.wizards_3d.rst", "api/pwem/pwem.wizards.wizards_3d.callbacks.rst", "api/pwem/pwem.wizards.wizards_3d.mask_structure_wizard.rst", "api/pwem/pwem.wizards.wizards_3d.mask_volume_wizard.rst", "api/pwem/setup.rst", "api/pyworkflow/modules.rst", "api/pyworkflow/pyworkflow.rst", "api/pyworkflow/pyworkflow.apps.rst", "api/pyworkflow/pyworkflow.apps.pw_manager.rst", "api/pyworkflow/pyworkflow.apps.pw_plot.rst", "api/pyworkflow/pyworkflow.apps.pw_project.rst", "api/pyworkflow/pyworkflow.apps.pw_protocol_list.rst", "api/pyworkflow/pyworkflow.apps.pw_protocol_mpirun.rst", "api/pyworkflow/pyworkflow.apps.pw_protocol_remote.rst", "api/pyworkflow/pyworkflow.apps.pw_protocol_run.rst", "api/pyworkflow/pyworkflow.apps.pw_run_tests.rst", "api/pyworkflow/pyworkflow.apps.pw_schedule_run.rst", "api/pyworkflow/pyworkflow.apps.pw_sleep.rst", "api/pyworkflow/pyworkflow.apps.pw_sync_data.rst", "api/pyworkflow/pyworkflow.apps.pw_viewer.rst", "api/pyworkflow/pyworkflow.config.rst", "api/pyworkflow/pyworkflow.constants.rst", "api/pyworkflow/pyworkflow.exceptions.rst", "api/pyworkflow/pyworkflow.gui.rst", "api/pyworkflow/pyworkflow.gui.browser.rst", "api/pyworkflow/pyworkflow.gui.canvas.rst", "api/pyworkflow/pyworkflow.gui.dialog.rst", "api/pyworkflow/pyworkflow.gui.form.rst", "api/pyworkflow/pyworkflow.gui.graph.rst", "api/pyworkflow/pyworkflow.gui.graph_layout.rst", "api/pyworkflow/pyworkflow.gui.gui.rst", "api/pyworkflow/pyworkflow.gui.matplotlib_image.rst", "api/pyworkflow/pyworkflow.gui.plotter.rst", "api/pyworkflow/pyworkflow.gui.project.rst", "api/pyworkflow/pyworkflow.gui.project.base.rst", "api/pyworkflow/pyworkflow.gui.project.constants.rst", "api/pyworkflow/pyworkflow.gui.project.labels.rst", "api/pyworkflow/pyworkflow.gui.project.project.rst", "api/pyworkflow/pyworkflow.gui.project.searchprotocol.rst", "api/pyworkflow/pyworkflow.gui.project.searchrun.rst", "api/pyworkflow/pyworkflow.gui.project.steps.rst", "api/pyworkflow/pyworkflow.gui.project.utils.rst", "api/pyworkflow/pyworkflow.gui.project.viewdata.rst", "api/pyworkflow/pyworkflow.gui.project.viewprojects.rst", "api/pyworkflow/pyworkflow.gui.project.viewprotocols.rst", "api/pyworkflow/pyworkflow.gui.project.viewprotocols_extra.rst", "api/pyworkflow/pyworkflow.gui.text.rst", "api/pyworkflow/pyworkflow.gui.tooltip.rst", "api/pyworkflow/pyworkflow.gui.tree.rst", "api/pyworkflow/pyworkflow.gui.widgets.rst", "api/pyworkflow/pyworkflow.mapper.rst", "api/pyworkflow/pyworkflow.mapper.mapper.rst", "api/pyworkflow/pyworkflow.mapper.sqlite.rst", "api/pyworkflow/pyworkflow.mapper.sqlite_db.rst", "api/pyworkflow/pyworkflow.mapper.xmlmapper.rst", "api/pyworkflow/pyworkflow.object.rst", "api/pyworkflow/pyworkflow.plugin.rst", "api/pyworkflow/pyworkflow.project.rst", "api/pyworkflow/pyworkflow.project.config.rst", "api/pyworkflow/pyworkflow.project.manager.rst", "api/pyworkflow/pyworkflow.project.project.rst", "api/pyworkflow/pyworkflow.protocol.rst", "api/pyworkflow/pyworkflow.protocol.bibtex.rst", "api/pyworkflow/pyworkflow.protocol.constants.rst", "api/pyworkflow/pyworkflow.protocol.executor.rst", "api/pyworkflow/pyworkflow.protocol.hosts.rst", "api/pyworkflow/pyworkflow.protocol.launch.rst", "api/pyworkflow/pyworkflow.protocol.package.rst", "api/pyworkflow/pyworkflow.protocol.params.rst", "api/pyworkflow/pyworkflow.protocol.protocol.rst", "api/pyworkflow/pyworkflow.template.rst", "api/pyworkflow/pyworkflow.tests.rst", "api/pyworkflow/pyworkflow.tests.test_utils.rst", "api/pyworkflow/pyworkflow.tests.tests.rst", "api/pyworkflow/pyworkflow.utils.rst", "api/pyworkflow/pyworkflow.utils.dataset.rst", "api/pyworkflow/pyworkflow.utils.echo.rst", "api/pyworkflow/pyworkflow.utils.graph.rst", "api/pyworkflow/pyworkflow.utils.log.rst", "api/pyworkflow/pyworkflow.utils.mpi.rst", "api/pyworkflow/pyworkflow.utils.path.rst", "api/pyworkflow/pyworkflow.utils.process.rst", "api/pyworkflow/pyworkflow.utils.profiler.rst", "api/pyworkflow/pyworkflow.utils.progressbar.rst", "api/pyworkflow/pyworkflow.utils.properties.rst", "api/pyworkflow/pyworkflow.utils.reflection.rst", "api/pyworkflow/pyworkflow.utils.utils.rst", "api/pyworkflow/pyworkflow.utils.which.rst", "api/pyworkflow/pyworkflow.viewer.rst", "api/pyworkflow/pyworkflow.webservices.rst", "api/pyworkflow/pyworkflow.webservices.config.rst", "api/pyworkflow/pyworkflow.webservices.notifier.rst", "api/pyworkflow/pyworkflow.webservices.repository.rst", "api/pyworkflow/pyworkflow.wizard.rst", "api/pyworkflow/setup.rst", "api/scipion/modules.rst", "api/scipion/scipion.rst", "api/scipion/scipion.constants.rst", "api/scipion/scipion.guiplugin.rst", "api/scipion/scipion.install.rst", "api/scipion/scipion.install.change_rpath.rst", "api/scipion/scipion.install.clean.rst", "api/scipion/scipion.install.find_deps.rst", "api/scipion/scipion.install.funcs.rst", "api/scipion/scipion.install.inspect_plugins.rst", "api/scipion/scipion.install.install_plugin.rst", "api/scipion/scipion.install.plugin_funcs.rst", "api/scipion/scipion.install.plugin_manager.rst", "api/scipion/scipion.install.update_manager.rst", "api/scipion/scipion.scripts.rst", "api/scipion/scipion.scripts.config.rst", "api/scipion/scipion.scripts.fontbrowser.rst", "api/scipion/scipion.scripts.kickoff.rst", "api/scipion/scipion.scripts.tutorial.rst", "api/scipion/scipion.utils.rst", "api/scipion/setup.rst", "api/xmipp3/modules.rst", "api/xmipp3/setup.rst", "api/xmipp3/xmipp3.rst", "api/xmipp3/xmipp3.base.rst", "api/xmipp3/xmipp3.bibtex.rst", "api/xmipp3/xmipp3.constants.rst", "api/xmipp3/xmipp3.convert.rst", "api/xmipp3/xmipp3.convert.convert.rst", "api/xmipp3/xmipp3.convert.dataimport.rst", "api/xmipp3/xmipp3.convert.io_coordinates.rst", "api/xmipp3/xmipp3.programs.rst", "api/xmipp3/xmipp3.protocols.rst", "api/xmipp3/xmipp3.protocols.protocol_align_volume.rst", "api/xmipp3/xmipp3.protocols.protocol_align_volume_and_particles.rst", "api/xmipp3/xmipp3.protocols.protocol_analyze_local_ctf.rst", "api/xmipp3/xmipp3.protocols.protocol_angular_graph_consistency.rst", "api/xmipp3/xmipp3.protocols.protocol_apply_alignment.rst", "api/xmipp3/xmipp3.protocols.protocol_apply_deformation_zernike3d.rst", "api/xmipp3/xmipp3.protocols.protocol_apply_transformation_matrix.rst", "api/xmipp3/xmipp3.protocols.protocol_apply_zernike3d.rst", "api/xmipp3/xmipp3.protocols.protocol_assignment_tilt_pair.rst", "api/xmipp3/xmipp3.protocols.protocol_break_symmetry.rst", "api/xmipp3/xmipp3.protocols.protocol_center_particles.rst", "api/xmipp3/xmipp3.protocols.protocol_cl2d.rst", "api/xmipp3/xmipp3.protocols.protocol_cl2d_align.rst", "api/xmipp3/xmipp3.protocols.protocol_classes_2d_mapping.rst", "api/xmipp3/xmipp3.protocols.protocol_classification_gpuCorr.rst", "api/xmipp3/xmipp3.protocols.protocol_classification_gpuCorr_full.rst", "api/xmipp3/xmipp3.protocols.protocol_classification_gpuCorr_semi.rst", "api/xmipp3/xmipp3.protocols.protocol_classify_kmeans2d.rst", "api/xmipp3/xmipp3.protocols.protocol_compare_angles.rst", "api/xmipp3/xmipp3.protocols.protocol_compare_reprojections.rst", "api/xmipp3/xmipp3.protocols.protocol_consensus_classes3D.rst", "api/xmipp3/xmipp3.protocols.protocol_consensus_local_ctf.rst", "api/xmipp3/xmipp3.protocols.protocol_convert_pdb.rst", "api/xmipp3/xmipp3.protocols.protocol_core_analysis.rst", "api/xmipp3/xmipp3.protocols.protocol_create_gallery.rst", "api/xmipp3/xmipp3.protocols.protocol_ctf_consensus.rst", "api/xmipp3/xmipp3.protocols.protocol_ctf_correct_wiener2d.rst", "api/xmipp3/xmipp3.protocols.protocol_ctf_defocus_group.rst", "api/xmipp3/xmipp3.protocols.protocol_ctf_micrographs.rst", "api/xmipp3/xmipp3.protocols.protocol_deep_align.rst", "api/xmipp3/xmipp3.protocols.protocol_deep_denoising.rst", "api/xmipp3/xmipp3.protocols.protocol_deep_hand.rst", "api/xmipp3/xmipp3.protocols.protocol_deep_micrograph_screen.rst", "api/xmipp3/xmipp3.protocols.protocol_denoise_particles.rst", "api/xmipp3/xmipp3.protocols.protocol_eliminate_empty_images.rst", "api/xmipp3/xmipp3.protocols.protocol_enrich.rst", "api/xmipp3/xmipp3.protocols.protocol_extract_asymmetric_unit.rst", "api/xmipp3/xmipp3.protocols.protocol_extract_particles.rst", "api/xmipp3/xmipp3.protocols.protocol_extract_particles_movies.rst", "api/xmipp3/xmipp3.protocols.protocol_extract_particles_pairs.rst", "api/xmipp3/xmipp3.protocols.protocol_flexalign.rst", "api/xmipp3/xmipp3.protocols.protocol_generate_reprojections.rst", "api/xmipp3/xmipp3.protocols.protocol_helical_parameters.rst", "api/xmipp3/xmipp3.protocols.protocol_kerdensom.rst", "api/xmipp3/xmipp3.protocols.protocol_kmeans_clustering.rst", "api/xmipp3/xmipp3.protocols.protocol_local_ctf.rst", "api/xmipp3/xmipp3.protocols.protocol_metaprotocol_create_output.rst", "api/xmipp3/xmipp3.protocols.protocol_metaprotocol_create_subset.rst", "api/xmipp3/xmipp3.protocols.protocol_metaprotocol_discrete_heterogeneity_scheduler.rst", "api/xmipp3/xmipp3.protocols.protocol_metaprotocol_golden_highres.rst", "api/xmipp3/xmipp3.protocols.protocol_ml2d.rst", "api/xmipp3/xmipp3.protocols.protocol_movie_average.rst", "api/xmipp3/xmipp3.protocols.protocol_movie_gain.rst", "api/xmipp3/xmipp3.protocols.protocol_movie_max_shift.rst", "api/xmipp3/xmipp3.protocols.protocol_movie_opticalflow.rst", "api/xmipp3/xmipp3.protocols.protocol_movie_split_frames.rst", "api/xmipp3/xmipp3.protocols.protocol_multiple_fscs.rst", "api/xmipp3/xmipp3.protocols.protocol_multireference_alignability.rst", "api/xmipp3/xmipp3.protocols.protocol_normalize_strain.rst", "api/xmipp3/xmipp3.protocols.protocol_particle_boxsize.rst", "api/xmipp3/xmipp3.protocols.protocol_particle_pick.rst", "api/xmipp3/xmipp3.protocols.protocol_particle_pick_automatic.rst", "api/xmipp3/xmipp3.protocols.protocol_particle_pick_consensus.rst", "api/xmipp3/xmipp3.protocols.protocol_particle_pick_pairs.rst", "api/xmipp3/xmipp3.protocols.protocol_particle_pick_remove_duplicates.rst", "api/xmipp3/xmipp3.protocols.protocol_phantom_create.rst", "api/xmipp3/xmipp3.protocols.protocol_pick_noise.rst", "api/xmipp3/xmipp3.protocols.protocol_postProcessing_deepPostProcessing.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess.geometrical_mask.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_add_noise.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_create_mask2d.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_create_mask3d.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_crop_resize.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_filter.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_image_operate.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_mask.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_movie_resize.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_preprocess.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess.protocol_process.rst", "api/xmipp3/xmipp3.protocols.protocol_preprocess_micrographs.rst", "api/xmipp3/xmipp3.protocols.protocol_projmatch.rst", "api/xmipp3/xmipp3.protocols.protocol_projmatch.projmatch_form.rst", "api/xmipp3/xmipp3.protocols.protocol_projmatch.projmatch_initialize.rst", "api/xmipp3/xmipp3.protocols.protocol_projmatch.projmatch_steps.rst", "api/xmipp3/xmipp3.protocols.protocol_projmatch.protocol_projmatch.rst", "api/xmipp3/xmipp3.protocols.protocol_random_conical_tilt.rst", "api/xmipp3/xmipp3.protocols.protocol_ransac.rst", "api/xmipp3/xmipp3.protocols.protocol_reconstruct_fourier.rst", "api/xmipp3/xmipp3.protocols.protocol_reconstruct_heterogeneous.rst", "api/xmipp3/xmipp3.protocols.protocol_reconstruct_highres.rst", "api/xmipp3/xmipp3.protocols.protocol_reconstruct_significant.rst", "api/xmipp3/xmipp3.protocols.protocol_reconstruct_swarm.rst", "api/xmipp3/xmipp3.protocols.protocol_resolution3d.rst", "api/xmipp3/xmipp3.protocols.protocol_resolution_bfactor.rst", "api/xmipp3/xmipp3.protocols.protocol_resolution_deepres.rst", "api/xmipp3/xmipp3.protocols.protocol_resolution_directional.rst", "api/xmipp3/xmipp3.protocols.protocol_resolution_fso.rst", "api/xmipp3/xmipp3.protocols.protocol_resolution_monogenic_signal.rst", "api/xmipp3/xmipp3.protocols.protocol_rotate_volume.rst", "api/xmipp3/xmipp3.protocols.protocol_rotational_spectra.rst", "api/xmipp3/xmipp3.protocols.protocol_rotational_symmetry.rst", "api/xmipp3/xmipp3.protocols.protocol_screen_deepConsensus.rst", "api/xmipp3/xmipp3.protocols.protocol_screen_deeplearning.rst", "api/xmipp3/xmipp3.protocols.protocol_screen_particles.rst", "api/xmipp3/xmipp3.protocols.protocol_shift_particles.rst", "api/xmipp3/xmipp3.protocols.protocol_shift_volume.rst", "api/xmipp3/xmipp3.protocols.protocol_simulate_ctf.rst", "api/xmipp3/xmipp3.protocols.protocol_solid_angles.rst", "api/xmipp3/xmipp3.protocols.protocol_split_volume.rst", "api/xmipp3/xmipp3.protocols.protocol_split_volume_hierarchical_cluster.rst", "api/xmipp3/xmipp3.protocols.protocol_structure_map.rst", "api/xmipp3/xmipp3.protocols.protocol_structure_map_zernike3d.rst", "api/xmipp3/xmipp3.protocols.protocol_subtract_projection.rst", "api/xmipp3/xmipp3.protocols.protocol_tilt_analysis.rst", "api/xmipp3/xmipp3.protocols.protocol_trigger_data.rst", "api/xmipp3/xmipp3.protocols.protocol_validate_fscq.rst", "api/xmipp3/xmipp3.protocols.protocol_validate_nontilt.rst", "api/xmipp3/xmipp3.protocols.protocol_validate_overfitting.rst", "api/xmipp3/xmipp3.protocols.protocol_volume_adjust_sub.rst", "api/xmipp3/xmipp3.protocols.protocol_volume_consensus.rst", "api/xmipp3/xmipp3.protocols.protocol_volume_deform_zernike3d.rst", "api/xmipp3/xmipp3.protocols.protocol_volume_local_sharpening.rst", "api/xmipp3/xmipp3.protocols.protocol_volume_strain.rst", "api/xmipp3/xmipp3.protocols.protocol_write_testC.rst", "api/xmipp3/xmipp3.protocols.protocol_write_testP.rst", "api/xmipp3/xmipp3.utils.rst", "api/xmipp3/xmipp3.viewers.rst", "api/xmipp3/xmipp3.viewers.plotter.rst", "api/xmipp3/xmipp3.viewers.viewer.rst", "api/xmipp3/xmipp3.viewers.viewer_analyze_local_ctf.rst", "api/xmipp3/xmipp3.viewers.viewer_cl2d.rst", "api/xmipp3/xmipp3.viewers.viewer_classes3D.rst", "api/xmipp3/xmipp3.viewers.viewer_consensus_classes3D.rst", "api/xmipp3/xmipp3.viewers.viewer_ctf_consensus.rst", "api/xmipp3/xmipp3.viewers.viewer_deepEMHancer.rst", "api/xmipp3/xmipp3.viewers.viewer_deep_align.rst", "api/xmipp3/xmipp3.viewers.viewer_deep_consensus.rst", "api/xmipp3/xmipp3.viewers.viewer_deep_micrograph_cleaner.rst", "api/xmipp3/xmipp3.viewers.viewer_eliminate_empty_images.rst", "api/xmipp3/xmipp3.viewers.viewer_extract_asymmetric_unit.rst", "api/xmipp3/xmipp3.viewers.viewer_local_sharpening.rst", "api/xmipp3/xmipp3.viewers.viewer_metaprotocol_golden_highres.rst", "api/xmipp3/xmipp3.viewers.viewer_ml2d.rst", "api/xmipp3/xmipp3.viewers.viewer_movie_alignment.rst", "api/xmipp3/xmipp3.viewers.viewer_normalize_strain.rst", "api/xmipp3/xmipp3.viewers.viewer_pdb_deform_zernike3d.rst", "api/xmipp3/xmipp3.viewers.viewer_projmatch.rst", "api/xmipp3/xmipp3.viewers.viewer_ransac.rst", "api/xmipp3/xmipp3.viewers.viewer_reconstruct_highres.rst", "api/xmipp3/xmipp3.viewers.viewer_resolution3d.rst", "api/xmipp3/xmipp3.viewers.viewer_resolution_bfactor.rst", "api/xmipp3/xmipp3.viewers.viewer_resolution_deepres.rst", "api/xmipp3/xmipp3.viewers.viewer_resolution_directional.rst", "api/xmipp3/xmipp3.viewers.viewer_resolution_fso.rst", "api/xmipp3/xmipp3.viewers.viewer_resolution_monogenic_signal.rst", "api/xmipp3/xmipp3.viewers.viewer_solid_angles.rst", "api/xmipp3/xmipp3.viewers.viewer_split_volume.rst", "api/xmipp3/xmipp3.viewers.viewer_structure_map.rst", "api/xmipp3/xmipp3.viewers.viewer_swarm.rst", "api/xmipp3/xmipp3.viewers.viewer_validate_fscq.rst", "api/xmipp3/xmipp3.viewers.viewer_validate_nontilt.rst", "api/xmipp3/xmipp3.viewers.viewer_validate_overfitting.rst", "api/xmipp3/xmipp3.viewers.viewer_volume_consensus.rst", "api/xmipp3/xmipp3.viewers.viewer_volume_deform_zernike3d.rst", "api/xmipp3/xmipp3.viewers.viewer_volume_strain.rst", "api/xmipp3/xmipp3.viewers.viewer_volume_subtraction.rst", "api/xmipp3/xmipp3.wizards.rst", "docs/api/plugins-API.rst", "docs/api/scipion-API.rst", "docs/api/xmipp-API.rst", "docs/developer/Servidores-remotos-para-procesar-con-Scipion-desde-el-CNB.rst", "docs/developer/aditional-information.rst", "docs/developer/advanced-topics.rst", "docs/developer/architecture.rst", "docs/developer/artwork.rst", "docs/developer/aws-instance-types-for-starcluster.rst", "docs/developer/buildbot.rst", "docs/developer/building-scipion-docs.rst", "docs/developer/collecting-statistics.rst", "docs/developer/conventions.rst", "docs/developer/creating-a-new-webtool.rst", "docs/developer/creating-a-plugin.rst", "docs/developer/creating-a-protocol.rst", "docs/developer/creating-a-viewer.rst", "docs/developer/creating-a-wizard.rst", "docs/developer/dataset-dev.rst", "docs/developer/developers.rst", "docs/developer/eclipse.rst", "docs/developer/general-style.rst", "docs/developer/gpu-params-standardization.rst", "docs/developer/how-to-git.rst", "docs/developer/introduction-to-scipion-developers.rst", "docs/developer/legacy-release-notes.rst", "docs/developer/linear-picking.rst", "docs/developer/object-model.rst", "docs/developer/parallelization.rst", "docs/developer/project-definition.rst", "docs/developer/pycharm.rst", "docs/developer/pycharm-profiling.rst", "docs/developer/python-style-guide.rst", "docs/developer/release-notes.rst", "docs/developer/road-map.rst", "docs/developer/rotations.rst", "docs/developer/running-tests.rst", "docs/developer/scipion-Cloud-for-training.rst", "docs/developer/scipion-HPC-clusters-on-AWS.rst", "docs/developer/scipion-commands.rst", "docs/developer/scipion-deployments-on-the-cloud.rst", "docs/developer/scipion-deployments-on-the-egi-federated-cloud.rst", "docs/developer/scipion-em-classes.rst", "docs/developer/scipion-hpc-cluster-on-aws.rst", "docs/developer/scipion-infrastructure-cloud-usage.rst", "docs/developer/scipion-installation-system.rst", "docs/developer/scipion-java.rst", "docs/developer/scipion-on-the-cloud.rst", "docs/developer/scipion-on-the-egi-federated-cloud.rst", "docs/developer/scipionCloud-AMI-manual.rst", "docs/developer/scipionCloud-images-manual.rst", "docs/developer/scipionCloud-on-amazon-web-services-ec2.rst", "docs/developer/setting-a-production-environment.rst", "docs/developer/sqlite-flat-mapper.rst", "docs/developer/sqlite-mapper.rst", "docs/developer/symmetries.rst", "docs/developer/tutorials/course_day2.rst", "docs/developer/tutorials/creating-a-basic-plugin-from-template.rst", "docs/developer/tutorials/creating-a-monitor.rst", "docs/developer/tutorials/creating-a-workflow-template.rst", "docs/developer/tutorials/creating-streaming-protocol.rst", "docs/developer/tutorials/creating-tests-for-template-calculator.rst", "docs/developer/tutorials/debugging-scipion.rst", "docs/developer/tutorials/dev-tutorials.rst", "docs/developer/tutorials/introduction-to-template-plugin.rst", "docs/developer/tutorials/understanding-plugin-class.rst", "docs/developer/using-sets.rst", "docs/developer/valgrind-suite-tools-introduction.rst", "docs/developer/vtune-profiler.rst", "docs/developer/web-developers-page.rst", "docs/developer/writing-tests.rst", "docs/facilities/customize-report.rst", "docs/facilities/customize-report-grafana.rst", "docs/facilities/customize-report-html.rst", "docs/facilities/facilities.rst", "docs/facilities/facilities-API-demo.rst", "docs/facilities/facilities-workflows.rst", "docs/facilities/simulate-streaming-processing.rst", "docs/misc/Scipion-demo-for-the-course-of-International-School-of-Crystallography.rst", "docs/misc/contact-us.rst", "docs/misc/events.rst", "docs/scipion-modes/configMPI.rst", "docs/scipion-modes/dependencies.rst", "docs/scipion-modes/host-configuration.rst", "docs/scipion-modes/how-to-install.rst", "docs/scipion-modes/install-plugins-command-line.rst", "docs/scipion-modes/linking-existing-software.rst", "docs/scipion-modes/scipion-configuration.rst", "docs/scipion-modes/verify-installation.rst", "docs/user/create2DMask.rst", "docs/user/dataset.rst", "docs/user/denoising_mbSegmentation_pysegDirPicking/tomosegmemTV-pySeg-workflow.rst", "docs/user/faq.rst", "docs/user/importingData.rst", "docs/user/labels.rst", "docs/user/license.rst", "docs/user/picker.rst", "docs/user/plugin-manager.rst", "docs/user/protUserSubSet.rst", "docs/user/relion-in-scipion.rst", "docs/user/scipion-gui.rst", "docs/user/showJ.rst", "docs/user/single-particle-tutorials.rst", "docs/user/tomography-tutorials.rst", "docs/user/troubleshooting.rst", "docs/user/tutorials/modelBuilding/Alphafold/005-versionhistory.rst", "docs/user/tutorials/modelBuilding/Alphafold/007-requirements.rst", "docs/user/tutorials/modelBuilding/Alphafold/010-introduction.rst", "docs/user/tutorials/modelBuilding/Alphafold/011-problem2solve.rst", "docs/user/tutorials/modelBuilding/Alphafold/012-generalWorflow.rst", "docs/user/tutorials/modelBuilding/Alphafold/020-initialModel.rst", "docs/user/tutorials/modelBuilding/Alphafold/030-processModel.rst", "docs/user/tutorials/modelBuilding/Alphafold/040-dockModel.rst", "docs/user/tutorials/modelBuilding/Alphafold/050-rebuildModel.rst", "docs/user/tutorials/modelBuilding/Alphafold/060-dockAndRebuildModel.rst", "docs/user/tutorials/modelBuilding/Alphafold/a010-alphafoldPredictionProtocol.rst", "docs/user/tutorials/modelBuilding/Alphafold/a020-processPredictedProtocol.rst", "docs/user/tutorials/modelBuilding/Alphafold/a030-dockPredictedModelProtocol.rst", "docs/user/tutorials/modelBuilding/Alphafold/a040-rebuildPredictedModelProtocol.rst", "docs/user/tutorials/modelBuilding/Alphafold/a050-dockAndRebuildProtocol.rst", "docs/user/tutorials/modelBuilding/Alphafold/ainitialModel.rst", "docs/user/tutorials/modelBuilding/Alphafold/index.rst", "docs/user/tutorials/modelBuilding/Homology/005-versionhistory.rst", "docs/user/tutorials/modelBuilding/Homology/007-requirements.rst", "docs/user/tutorials/modelBuilding/Homology/010-introduction.rst", "docs/user/tutorials/modelBuilding/Homology/020-problem2solve.rst", "docs/user/tutorials/modelBuilding/Homology/030-inputDataDescription.rst", "docs/user/tutorials/modelBuilding/Homology/040-importInputData.rst", "docs/user/tutorials/modelBuilding/Homology/050-volumeScenario.rst", "docs/user/tutorials/modelBuilding/Homology/060-sequenceScenario.rst", "docs/user/tutorials/modelBuilding/Homology/070-movingFromSequence.rst", "docs/user/tutorials/modelBuilding/Homology/080-rigidFit.rst", "docs/user/tutorials/modelBuilding/Homology/090-flexibleFit.rst", "docs/user/tutorials/modelBuilding/Homology/100-validation.rst", "docs/user/tutorials/modelBuilding/Homology/110-unitcell.rst", "docs/user/tutorials/modelBuilding/Homology/120-macromolecule.rst", "docs/user/tutorials/modelBuilding/Homology/121-submissionResults.rst", "docs/user/tutorials/modelBuilding/Homology/130-install.rst", "docs/user/tutorials/modelBuilding/Homology/131-problems.rst", "docs/user/tutorials/modelBuilding/Homology/140-todo.rst", "docs/user/tutorials/modelBuilding/Homology/a010-answers.rst", "docs/user/tutorials/modelBuilding/Homology/a011-atomStructUtilsOperatorProtocol.rst", "docs/user/tutorials/modelBuilding/Homology/a012-chimeraContacts.rst", "docs/user/tutorials/modelBuilding/Homology/a013-chimeraMapSubtraction.rst", "docs/user/tutorials/modelBuilding/Homology/a020-chimeraOperate.rst", "docs/user/tutorials/modelBuilding/Homology/a030-chimeraRestoreSession.rst", "docs/user/tutorials/modelBuilding/Homology/a040-chimeraRigidFit.rst", "docs/user/tutorials/modelBuilding/Homology/a050-ccp4CootRefinement.rst", "docs/user/tutorials/modelBuilding/Homology/a060-ccp4Refmac.rst", "docs/user/tutorials/modelBuilding/Homology/a061-create3DMask.rst", "docs/user/tutorials/modelBuilding/Homology/a062-deepEMhancerSharpening.rst", "docs/user/tutorials/modelBuilding/Homology/a070-extractUnitCell.rst", "docs/user/tutorials/modelBuilding/Homology/a080-importAtomicStructure.rst", "docs/user/tutorials/modelBuilding/Homology/a090-importSequence.rst", "docs/user/tutorials/modelBuilding/Homology/a091-importMask.rst", "docs/user/tutorials/modelBuilding/Homology/a100-importvolume.rst", "docs/user/tutorials/modelBuilding/Homology/a101-localDeblurSharpening.rst", "docs/user/tutorials/modelBuilding/Homology/a102-localMonoRes.rst", "docs/user/tutorials/modelBuilding/Homology/a110-modelFromTemplate.rst", "docs/user/tutorials/modelBuilding/Homology/a120-emRingerProtocol.rst", "docs/user/tutorials/modelBuilding/Homology/a130-molprobityProtocol.rst", "docs/user/tutorials/modelBuilding/Homology/a131-valCryoEMProtocol.rst", "docs/user/tutorials/modelBuilding/Homology/a140-realSpaceRefineProtocol.rst", "docs/user/tutorials/modelBuilding/Homology/a150-superposePdbsProtocol.rst", "docs/user/tutorials/modelBuilding/Homology/a160-dockInMapProtocol.rst", "docs/user/tutorials/modelBuilding/Homology/a161-searcFitProtocol.rst", "docs/user/tutorials/modelBuilding/Homology/a162-asignOrigAndSampling.rst", "docs/user/tutorials/modelBuilding/Homology/a170-exportToEMDB.rst", "docs/user/tutorials/modelBuilding/Homology/index.rst", "docs/user/tutorials/modelBuilding/Homology/z010-references.rst", "docs/user/tutorials/tomo/Picking_tutorial/tutorial-picking.rst", "docs/user/tutorials/tomo/Picking_tutorial_lite/dynamo-tutorial-picking-lite.rst", "docs/user/tutorials/tomo/devel_mode_installation.rst", "docs/user/user-documentation.rst", "index.rst"], "titles": ["Welcome to Scipion\u2019s documentation!", "scipion-em", "pwem package", "pwem.bibtex module", "pwem.constants module", "pwem.convert package", "pwem.convert.atom_struct module", "pwem.convert.headers module", "pwem.convert.sequence module", "pwem.convert.symmetry module", "pwem.convert.transformations module", "pwem.convert.utils module", "pwem.emlib package", "pwem.emlib.image package", "pwem.emlib.image.image_handler module", "pwem.emlib.lib module", "pwem.emlib.metadata package", "pwem.emlib.metadata.utils module", "pwem.objects package", "pwem.objects.data module", "pwem.objects.data_tiltpairs module", "pwem.protocols package", "pwem.protocols.parallel module", "pwem.protocols.protocol module", "pwem.protocols.protocol_2d module", "pwem.protocols.protocol_3d module", "pwem.protocols.protocol_align_movies module", "pwem.protocols.protocol_alignment_assign module", "pwem.protocols.protocol_alignment_invertHand module", "pwem.protocols.protocol_batch module", "pwem.protocols.protocol_boxsize_parameters module", "pwem.protocols.protocol_classes_selector module", "pwem.protocols.protocol_create_stream_data module", "pwem.protocols.protocol_ctf_assign module", "pwem.protocols.protocol_export package", "pwem.protocols.protocol_export.protocol_export_DB module", "pwem.protocols.protocol_extract_coordinates module", "pwem.protocols.protocol_import package", "pwem.protocols.protocol_import.base module", "pwem.protocols.protocol_import.coordinates module", "pwem.protocols.protocol_import.ctfs module", "pwem.protocols.protocol_import.dataimport module", "pwem.protocols.protocol_import.images module", "pwem.protocols.protocol_import.masks module", "pwem.protocols.protocol_import.micrographs module", "pwem.protocols.protocol_import.particles module", "pwem.protocols.protocol_import.sequence module", "pwem.protocols.protocol_import.volumes module", "pwem.protocols.protocol_mathematical_operator module", "pwem.protocols.protocol_micrographs module", "pwem.protocols.protocol_movie_eraser module", "pwem.protocols.protocol_movies module", "pwem.protocols.protocol_origin_sampling_volume module", "pwem.protocols.protocol_particles module", "pwem.protocols.protocol_particles_picking module", "pwem.protocols.protocol_pdf_report module", "pwem.protocols.protocol_set_editor module", "pwem.protocols.protocol_set_filter module", "pwem.protocols.protocol_sets module", "pwem.protocols.protocol_tests module", "pwem.protocols.protocol_tiltpairs module", "pwem.protocols.protocol_tools module", "pwem.utils module", "pwem.viewers package", "pwem.viewers.filehandlers module", "pwem.viewers.plotter module", "pwem.viewers.showj module", "pwem.viewers.viewer_base module", "pwem.viewers.viewer_chimera module", "pwem.viewers.viewer_fsc module", "pwem.viewers.viewer_localres module", "pwem.viewers.viewer_pdf module", "pwem.viewers.viewer_sequence module", "pwem.viewers.viewer_vmd module", "pwem.viewers.viewer_volumes module", "pwem.viewers.viewers_data module", "pwem.viewers.viewers_protocols module", "pwem.viewers.views module", "pwem.wizards package", "pwem.wizards.wizard module", "pwem.wizards.wizards module", "pwem.wizards.wizards_3d package", "pwem.wizards.wizards_3d.callbacks module", "pwem.wizards.wizards_3d.mask_structure_wizard module", "pwem.wizards.wizards_3d.mask_volume_wizard module", "setup module", "scipion-pyworkflow", "pyworkflow package", "pyworkflow.apps package", "pyworkflow.apps.pw_manager module", "pyworkflow.apps.pw_plot module", "pyworkflow.apps.pw_project module", "pyworkflow.apps.pw_protocol_list module", "pyworkflow.apps.pw_protocol_mpirun module", "pyworkflow.apps.pw_protocol_remote module", "pyworkflow.apps.pw_protocol_run module", "pyworkflow.apps.pw_run_tests module", "pyworkflow.apps.pw_schedule_run module", "pyworkflow.apps.pw_sleep module", "pyworkflow.apps.pw_sync_data module", "pyworkflow.apps.pw_viewer module", "pyworkflow.config module", "pyworkflow.constants module", "pyworkflow.exceptions module", "pyworkflow.gui package", "pyworkflow.gui.browser module", "pyworkflow.gui.canvas module", "pyworkflow.gui.dialog module", "pyworkflow.gui.form module", "pyworkflow.gui.graph module", "pyworkflow.gui.graph_layout module", "pyworkflow.gui.gui module", "pyworkflow.gui.matplotlib_image module", "pyworkflow.gui.plotter module", "pyworkflow.gui.project package", "pyworkflow.gui.project.base module", "pyworkflow.gui.project.constants module", "pyworkflow.gui.project.labels module", "pyworkflow.gui.project.project module", "pyworkflow.gui.project.searchprotocol module", "pyworkflow.gui.project.searchrun module", "pyworkflow.gui.project.steps module", "pyworkflow.gui.project.utils module", "pyworkflow.gui.project.viewdata module", "pyworkflow.gui.project.viewprojects module", "pyworkflow.gui.project.viewprotocols module", "pyworkflow.gui.project.viewprotocols_extra module", "pyworkflow.gui.text module", "pyworkflow.gui.tooltip module", "pyworkflow.gui.tree module", "pyworkflow.gui.widgets module", "pyworkflow.mapper package", "pyworkflow.mapper.mapper module", "pyworkflow.mapper.sqlite module", "pyworkflow.mapper.sqlite_db module", "pyworkflow.mapper.xmlmapper module", "pyworkflow.object module", "pyworkflow.plugin module", "pyworkflow.project package", "pyworkflow.project.config module", "pyworkflow.project.manager module", "pyworkflow.project.project module", "pyworkflow.protocol package", "pyworkflow.protocol.bibtex module", "pyworkflow.protocol.constants module", "pyworkflow.protocol.executor module", "pyworkflow.protocol.hosts module", "pyworkflow.protocol.launch module", "pyworkflow.protocol.package module", "pyworkflow.protocol.params module", "pyworkflow.protocol.protocol module", "pyworkflow.template module", "pyworkflow.tests package", "pyworkflow.tests.test_utils module", "pyworkflow.tests.tests module", "pyworkflow.utils package", "pyworkflow.utils.dataset module", "pyworkflow.utils.echo module", "pyworkflow.utils.graph module", "pyworkflow.utils.log module", "pyworkflow.utils.mpi module", "pyworkflow.utils.path module", "pyworkflow.utils.process module", "pyworkflow.utils.profiler module", "pyworkflow.utils.progressbar module", "pyworkflow.utils.properties module", "pyworkflow.utils.reflection module", "pyworkflow.utils.utils module", "pyworkflow.utils.which module", "pyworkflow.viewer module", "pyworkflow.webservices package", "pyworkflow.webservices.config module", "pyworkflow.webservices.notifier module", "pyworkflow.webservices.repository module", "pyworkflow.wizard module", "setup module", "scipion-app", "scipion package", "scipion.constants module", "scipion.guiplugin module", "scipion.install package", "scipion.install.change_rpath module", "scipion.install.clean module", "scipion.install.find_deps module", "scipion.install.funcs module", "scipion.install.inspect_plugins module", "scipion.install.install_plugin module", "scipion.install.plugin_funcs module", "scipion.install.plugin_manager module", "scipion.install.update_manager module", "scipion.scripts package", "scipion.scripts.config module", "scipion.scripts.fontbrowser module", "scipion.scripts.kickoff module", "scipion.scripts.tutorial module", "scipion.utils module", "setup module", "scipion-em-xmipp", "setup module", "xmipp3 package", "xmipp3.base module", "xmipp3.bibtex module", "xmipp3.constants module", "xmipp3.convert package", "xmipp3.convert.convert module", "xmipp3.convert.dataimport module", "xmipp3.convert.io_coordinates module", "xmipp3.programs module", "xmipp3.protocols package", "xmipp3.protocols.protocol_align_volume module", "xmipp3.protocols.protocol_align_volume_and_particles module", "xmipp3.protocols.protocol_analyze_local_ctf module", "xmipp3.protocols.protocol_angular_graph_consistency module", "xmipp3.protocols.protocol_apply_alignment module", "xmipp3.protocols.protocol_apply_deformation_zernike3d module", "xmipp3.protocols.protocol_apply_transformation_matrix module", "xmipp3.protocols.protocol_apply_zernike3d module", "xmipp3.protocols.protocol_assignment_tilt_pair module", "xmipp3.protocols.protocol_break_symmetry module", "xmipp3.protocols.protocol_center_particles module", "xmipp3.protocols.protocol_cl2d module", "xmipp3.protocols.protocol_cl2d_align module", "xmipp3.protocols.protocol_classes_2d_mapping module", "xmipp3.protocols.protocol_classification_gpuCorr module", "xmipp3.protocols.protocol_classification_gpuCorr_full module", "xmipp3.protocols.protocol_classification_gpuCorr_semi module", "xmipp3.protocols.protocol_classify_kmeans2d module", "xmipp3.protocols.protocol_compare_angles module", "xmipp3.protocols.protocol_compare_reprojections module", "xmipp3.protocols.protocol_consensus_classes3D module", "xmipp3.protocols.protocol_consensus_local_ctf module", "xmipp3.protocols.protocol_convert_pdb module", "xmipp3.protocols.protocol_core_analysis module", "xmipp3.protocols.protocol_create_gallery module", "xmipp3.protocols.protocol_ctf_consensus module", "xmipp3.protocols.protocol_ctf_correct_wiener2d module", "xmipp3.protocols.protocol_ctf_defocus_group module", "xmipp3.protocols.protocol_ctf_micrographs module", "xmipp3.protocols.protocol_deep_align module", "xmipp3.protocols.protocol_deep_denoising module", "xmipp3.protocols.protocol_deep_hand module", "xmipp3.protocols.protocol_deep_micrograph_screen module", "xmipp3.protocols.protocol_denoise_particles module", "xmipp3.protocols.protocol_eliminate_empty_images module", "xmipp3.protocols.protocol_enrich module", "xmipp3.protocols.protocol_extract_asymmetric_unit module", "xmipp3.protocols.protocol_extract_particles module", "xmipp3.protocols.protocol_extract_particles_movies module", "xmipp3.protocols.protocol_extract_particles_pairs module", "xmipp3.protocols.protocol_flexalign module", "xmipp3.protocols.protocol_generate_reprojections module", "xmipp3.protocols.protocol_helical_parameters module", "xmipp3.protocols.protocol_kerdensom module", "xmipp3.protocols.protocol_kmeans_clustering module", "xmipp3.protocols.protocol_local_ctf module", "xmipp3.protocols.protocol_metaprotocol_create_output module", "xmipp3.protocols.protocol_metaprotocol_create_subset module", "xmipp3.protocols.protocol_metaprotocol_discrete_heterogeneity_scheduler module", "xmipp3.protocols.protocol_metaprotocol_golden_highres module", "xmipp3.protocols.protocol_ml2d module", "xmipp3.protocols.protocol_movie_average module", "xmipp3.protocols.protocol_movie_gain module", "xmipp3.protocols.protocol_movie_max_shift module", "xmipp3.protocols.protocol_movie_opticalflow module", "xmipp3.protocols.protocol_movie_split_frames module", "xmipp3.protocols.protocol_multiple_fscs module", "xmipp3.protocols.protocol_multireference_alignability module", "xmipp3.protocols.protocol_normalize_strain module", "xmipp3.protocols.protocol_particle_boxsize module", "xmipp3.protocols.protocol_particle_pick module", "xmipp3.protocols.protocol_particle_pick_automatic module", "xmipp3.protocols.protocol_particle_pick_consensus module", "xmipp3.protocols.protocol_particle_pick_pairs module", "xmipp3.protocols.protocol_particle_pick_remove_duplicates module", "xmipp3.protocols.protocol_phantom_create module", "xmipp3.protocols.protocol_pick_noise module", "xmipp3.protocols.protocol_postProcessing_deepPostProcessing module", "xmipp3.protocols.protocol_preprocess package", "xmipp3.protocols.protocol_preprocess.geometrical_mask module", "xmipp3.protocols.protocol_preprocess.protocol_add_noise module", "xmipp3.protocols.protocol_preprocess.protocol_create_mask2d module", "xmipp3.protocols.protocol_preprocess.protocol_create_mask3d module", "xmipp3.protocols.protocol_preprocess.protocol_crop_resize module", "xmipp3.protocols.protocol_preprocess.protocol_filter module", "xmipp3.protocols.protocol_preprocess.protocol_image_operate module", "xmipp3.protocols.protocol_preprocess.protocol_mask module", "xmipp3.protocols.protocol_preprocess.protocol_movie_resize module", "xmipp3.protocols.protocol_preprocess.protocol_preprocess module", "xmipp3.protocols.protocol_preprocess.protocol_process module", "xmipp3.protocols.protocol_preprocess_micrographs module", "xmipp3.protocols.protocol_projmatch package", "xmipp3.protocols.protocol_projmatch.projmatch_form module", "xmipp3.protocols.protocol_projmatch.projmatch_initialize module", "xmipp3.protocols.protocol_projmatch.projmatch_steps module", "xmipp3.protocols.protocol_projmatch.protocol_projmatch module", "xmipp3.protocols.protocol_random_conical_tilt module", "xmipp3.protocols.protocol_ransac module", "xmipp3.protocols.protocol_reconstruct_fourier module", "xmipp3.protocols.protocol_reconstruct_heterogeneous module", "xmipp3.protocols.protocol_reconstruct_highres module", "xmipp3.protocols.protocol_reconstruct_significant module", "xmipp3.protocols.protocol_reconstruct_swarm module", "xmipp3.protocols.protocol_resolution3d module", "xmipp3.protocols.protocol_resolution_bfactor module", "xmipp3.protocols.protocol_resolution_deepres module", "xmipp3.protocols.protocol_resolution_directional module", "xmipp3.protocols.protocol_resolution_fso module", "xmipp3.protocols.protocol_resolution_monogenic_signal module", "xmipp3.protocols.protocol_rotate_volume module", "xmipp3.protocols.protocol_rotational_spectra module", "xmipp3.protocols.protocol_rotational_symmetry module", "xmipp3.protocols.protocol_screen_deepConsensus module", "xmipp3.protocols.protocol_screen_deeplearning module", "xmipp3.protocols.protocol_screen_particles module", "xmipp3.protocols.protocol_shift_particles module", "xmipp3.protocols.protocol_shift_volume module", "xmipp3.protocols.protocol_simulate_ctf module", "xmipp3.protocols.protocol_solid_angles module", "xmipp3.protocols.protocol_split_volume module", "xmipp3.protocols.protocol_split_volume_hierarchical_cluster module", "xmipp3.protocols.protocol_structure_map module", "xmipp3.protocols.protocol_structure_map_zernike3d module", "xmipp3.protocols.protocol_subtract_projection module", "xmipp3.protocols.protocol_tilt_analysis module", "xmipp3.protocols.protocol_trigger_data module", "xmipp3.protocols.protocol_validate_fscq module", "xmipp3.protocols.protocol_validate_nontilt module", "xmipp3.protocols.protocol_validate_overfitting module", "xmipp3.protocols.protocol_volume_adjust_sub module", "xmipp3.protocols.protocol_volume_consensus module", "xmipp3.protocols.protocol_volume_deform_zernike3d module", "xmipp3.protocols.protocol_volume_local_sharpening module", "xmipp3.protocols.protocol_volume_strain module", "xmipp3.protocols.protocol_write_testC module", "xmipp3.protocols.protocol_write_testP module", "xmipp3.utils module", "xmipp3.viewers package", "xmipp3.viewers.plotter module", "xmipp3.viewers.viewer module", "xmipp3.viewers.viewer_analyze_local_ctf module", "xmipp3.viewers.viewer_cl2d module", "xmipp3.viewers.viewer_classes3D module", "xmipp3.viewers.viewer_consensus_classes3D module", "xmipp3.viewers.viewer_ctf_consensus module", "xmipp3.viewers.viewer_deepEMHancer module", "xmipp3.viewers.viewer_deep_align module", "xmipp3.viewers.viewer_deep_consensus module", "xmipp3.viewers.viewer_deep_micrograph_cleaner module", "xmipp3.viewers.viewer_eliminate_empty_images module", "xmipp3.viewers.viewer_extract_asymmetric_unit module", "xmipp3.viewers.viewer_local_sharpening module", "xmipp3.viewers.viewer_metaprotocol_golden_highres module", "xmipp3.viewers.viewer_ml2d module", "xmipp3.viewers.viewer_movie_alignment module", "xmipp3.viewers.viewer_normalize_strain module", "xmipp3.viewers.viewer_pdb_deform_zernike3d module", "xmipp3.viewers.viewer_projmatch module", "xmipp3.viewers.viewer_ransac module", "xmipp3.viewers.viewer_reconstruct_highres module", "xmipp3.viewers.viewer_resolution3d module", "xmipp3.viewers.viewer_resolution_bfactor module", "xmipp3.viewers.viewer_resolution_deepres module", "xmipp3.viewers.viewer_resolution_directional module", "xmipp3.viewers.viewer_resolution_fso module", "xmipp3.viewers.viewer_resolution_monogenic_signal module", "xmipp3.viewers.viewer_solid_angles module", "xmipp3.viewers.viewer_split_volume module", "xmipp3.viewers.viewer_structure_map module", "xmipp3.viewers.viewer_swarm module", "xmipp3.viewers.viewer_validate_fscq module", "xmipp3.viewers.viewer_validate_nontilt module", "xmipp3.viewers.viewer_validate_overfitting module", "xmipp3.viewers.viewer_volume_consensus module", "xmipp3.viewers.viewer_volume_deform_zernike3d module", "xmipp3.viewers.viewer_volume_strain module", "xmipp3.viewers.viewer_volume_subtraction module", "xmipp3.wizards module", "Plugins API", "Scipion API", "Xmipp API", "Servidores remotos para procesar con Scipion desde el CNB", "Additional information", "Advanced Development Topics", "Architecture", "ArtWork", "Starcluster instance types (AWS)", "Buildbot", "Building Scipion docs", "Collecting statistics", "Conventions", "Creating a new webtool", "Creating a plugin", "Creating a protocol", "TODO Creating a viewer", "TODO Creating a wizard", "DataSets", "Developers Page", "IDE Eclipse Standard", "General Style", "GPU parameters standardization in Scipion protocols", "How to GIT", "Introduction to Scipion Developer", "Legacy release notes", "Linear picking", "Object model", "Parallelization", "Project definition", "PyCharm IDE", "Out of the box profiling", "Python Style Guide", "Release-notes", "Scipion roadmap 2018", "Rotations, shifts and projections", "Running Tests", "Scipion Cloud for training", "Scipion HPC clusters on AWS", "Scipion commands", "Scipion deployments on the Cloud", "Scipion deployments on the EGI Federated Cloud", "Scipion EM Classes", "Deploying an HPC cluster on AWS", "Scipion infrastructure in the EOSC", "Scipion installation system for developers", "Scipion Java", "Scipion in the cloud", "Scipion in the EOSC", "ScipionCloud AMI manual", "ScipionCloud images manual", "ScipionCloud on Amazon Web Services EC2", "Scipion web production setup", "SqliteFlatMapper", "Sqlite mapper", "Symmetries", "Protocols and Viewers", "Creating a basic calculator plugin from scipion-em-template", "Creating the monitor", "Creating a workflow template", "Creating a Streaming Protocol", "Creating tests for the calculator plugin", "Debugging Scipion with PyCharm", "Tutorials for developers", "Introduction to template plugin", "Understanding the Plugin class", "TODO: USING SETS", "Valgrind suite tools introduction", "Intel VTune profiler", "Web developers page", "Writing Tests", "Summary Reports", "Grafana, InfluxDB report customization", "HTML report customization", "On-the-fly processing", "API workflows", "Streaming workflows", "Simulate streaming processing", "Scipion demo for the course of International School of Crystallography", "Contact Us", "Events", "&lt;no title&gt;", "Dependencies", "Host configuration", "Installing Scipion", "Installing plugins from the command line", "Linking existing software", "Scipion configuration", "Verify installation", "How to create 2D masks", "DataSets", "Tutorial - Denoising, Membrane Segmentation and Annotation and Directional Picking", "Frequently Asked Questions", "Importing Data", "Labels and graph visualization improvements", "Licenses", "Xmipp Picker", "Plugin manager", "Subset Creation", "Relion in Scipion", "Scipion GUI", "ShowJ", "Introduction to Scipion", "Tomogram Reconstruction", "Troubleshooting", "<span class=\"section-number\">1. </span>Revision History", "<span class=\"section-number\">2. </span>Prelude", "<span class=\"section-number\">3. </span>Introduction to Model building with AlphaFold", "<span class=\"section-number\">4. </span>Problem to solve: Human ion channel TACAN isoform induced by tumor necrosis factor alpha", "<span class=\"section-number\">5. </span>General workflow followed in this tutorial to predict and fit Alphafold2 structures", "<span class=\"section-number\">6. </span>Get the initial model with AlphaFold2", "<span class=\"section-number\">7. </span>Remove low-confidence residues of the model and break it into compact domains", "<span class=\"section-number\">8. </span>Dock the domains obtained into your cryo-EM  map or unit cell", "<span class=\"section-number\">9. </span>Morph the predicted model onto the docked fragments and rebuild the missing parts of the model in the map density", "<span class=\"section-number\">10. </span>Three in one: Processing, docking and rebuilding the model in the map density", "<span class=\"section-number\">1. </span>AlphaFold2 Initial Model Prediction protocol", "<span class=\"section-number\">2. </span>Phenix Process Predicted Model protocol", "<span class=\"section-number\">3. </span>Phenix Dock Predicted Model protocol", "<span class=\"section-number\">4. </span>Phenix Rebuild Predicted Model protocol", "<span class=\"section-number\">5. </span>Phenix Dock and Rebuild protocol", "Chimera-alphafold", "Predicting initial models with AlphaFold", "<span class=\"section-number\">1. </span>Revision History", "<span class=\"section-number\">2. </span>Prelude", "<span class=\"section-number\">3. </span>Introduction to Model building", "<span class=\"section-number\">4. </span>Problem to solve: Haemoglobin", "<span class=\"section-number\">5. </span>Input data description", "<span class=\"section-number\">6. </span>Import Input data", "<span class=\"section-number\">7. </span>3D Map preprocessing", "<span class=\"section-number\">8. </span>Structure Prediction by Sequence Homology. Searching for Homologues", "<span class=\"section-number\">9. </span>Moving from sequence to atomic structure scenario", "<span class=\"section-number\">10. </span>Merging 3D Maps and Atomic Structures: Rigid Fitting", "<span class=\"section-number\">11. </span>Refinement: Flexible fitting", "<span class=\"section-number\">12. </span>Structure validation and comparison", "<span class=\"section-number\">13. </span>Building the asymmetric unit", "<span class=\"section-number\">14. </span>The whole macromolecule", "<span class=\"section-number\">15. </span>Summary of results and submission", "<span class=\"section-number\">16. </span>A Note on Software Installation", "<span class=\"section-number\">17. </span>How to solve some problems that you can find during the execution of the modeling workflow", "<span class=\"section-number\">18. </span>TODO", "<span class=\"section-number\">1. </span>Answers to Questions", "<span class=\"section-number\">2. </span>Atomic Structure Chain Operator protocol", "<span class=\"section-number\">3. </span>ChimeraX Contacts protocol", "<span class=\"section-number\">4. </span>ChimeraX Map Subtraction protocol", "<span class=\"section-number\">5. </span>ChimeraX Operate protocol", "<span class=\"section-number\">6. </span>ChimeraX Restore Session protocol", "<span class=\"section-number\">7. </span>ChimeraX Rigid Fit protocol", "<span class=\"section-number\">8. </span>CCP4 Coot Refinement protocol", "<span class=\"section-number\">9. </span>CCP4 Refmac protocol", "<span class=\"section-number\">10. </span>Create 3D Mask protocol", "<span class=\"section-number\">11. </span>DeepEMhancer Sharpening protocol", "<span class=\"section-number\">12. </span>Extract asymmetric unit protocol", "<span class=\"section-number\">13. </span>Import atomic structure protocol", "<span class=\"section-number\">14. </span>Import sequence protocol", "<span class=\"section-number\">15. </span>Import mask protocol", "<span class=\"section-number\">16. </span>Import volume protocol", "<span class=\"section-number\">17. </span>Local Deblur Sharpening protocol", "<span class=\"section-number\">18. </span>Local MonoRes protocol", "<span class=\"section-number\">19. </span>Model from Template protocol", "<span class=\"section-number\">20. </span>Phenix EMRinger protocol", "<span class=\"section-number\">21. </span>Phenix MolProbity protocol", "<span class=\"section-number\">22. </span>Phenix Validation CryoEM protocol", "<span class=\"section-number\">23. </span>Phenix Real Space Refine protocol", "<span class=\"section-number\">24. </span>Phenix Superpose PDBs protocol", "<span class=\"section-number\">25. </span>Phenix Dock in Map protocol", "<span class=\"section-number\">26. </span>Phenix Search Fit protocol", "<span class=\"section-number\">27. </span>Protocol to assign map sampling rate and origin of coordinates", "<span class=\"section-number\">28. </span>Submission to wwPDB protocol", "Model Building Tutorial", "<span class=\"section-number\">19. </span>References", "Picking tutorial for Tomography", "Picking tutorial for Tomography with Dynamo in Scipion", "Installation of Scipion for Tomography in devel mode", "Graphical interface manuals", "Welcome to Scipion\u2019s documentation!"], "terms": {"you": [0, 6, 14, 17, 48, 50, 55, 56, 57, 66, 80, 102, 106, 107, 113, 125, 133, 141, 145, 149, 159, 165, 168, 188, 193, 204, 271, 287, 289, 299, 310, 327, 346, 347, 379, 382, 384, 387, 388, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 403, 405, 407, 408, 410, 414, 415, 416, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 474, 477, 479, 481, 487, 488, 489, 490, 492, 493, 494, 495, 496, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551], "can": [0, 10, 11, 14, 17, 19, 26, 27, 30, 36, 48, 56, 64, 67, 77, 79, 80, 84, 96, 99, 105, 106, 107, 108, 122, 132, 133, 136, 137, 139, 140, 141, 149, 150, 156, 158, 159, 161, 164, 165, 167, 168, 169, 173, 174, 184, 187, 193, 199, 200, 204, 243, 259, 261, 265, 268, 270, 280, 281, 287, 289, 299, 301, 324, 327, 328, 382, 383, 384, 386, 387, 388, 391, 392, 395, 396, 397, 398, 399, 400, 401, 403, 405, 406, 407, 408, 410, 413, 414, 415, 416, 421, 422, 423, 425, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 460, 461, 462, 463, 464, 468, 470, 471, 473, 474, 477, 478, 480, 481, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 535, 536, 537, 538, 539, 541, 542, 544, 545, 547, 548, 549, 551], "find": [0, 6, 41, 101, 137, 150, 161, 166, 167, 168, 187, 200, 205, 206, 218, 286, 311, 321, 323, 330, 377, 378, 383, 384, 388, 391, 396, 397, 398, 401, 405, 407, 410, 429, 430, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 448, 449, 450, 453, 455, 460, 463, 464, 465, 468, 476, 477, 478, 481, 483, 492, 500, 509, 513, 520, 530, 536, 541, 545, 550], "last": [0, 2, 10, 19, 91, 125, 136, 141, 145, 149, 150, 154, 156, 161, 164, 167, 184, 311, 388, 391, 392, 400, 402, 406, 413, 414, 426, 427, 428, 434, 435, 438, 439, 442, 445, 447, 449, 450, 452, 453, 468, 487, 491, 493, 494, 495, 496, 501, 505, 507, 509, 510, 513, 518, 520, 524, 525, 530, 533, 537, 539, 542, 547, 548, 549], "built": [0, 157, 184, 387, 391, 397, 406, 422, 427, 431, 447, 449, 452, 512, 538, 539], "http": [0, 3, 10, 19, 46, 101, 102, 103, 127, 130, 143, 157, 159, 165, 166, 173, 201, 218, 276, 306, 382, 386, 387, 388, 391, 395, 397, 400, 401, 404, 406, 410, 414, 415, 422, 427, 428, 434, 435, 436, 437, 438, 439, 442, 444, 448, 449, 450, 451, 453, 461, 465, 472, 475, 481, 493, 494, 495, 496, 519, 546, 549], "em": [0, 2, 4, 7, 19, 21, 23, 43, 62, 67, 102, 141, 148, 184, 189, 200, 201, 204, 327, 382, 387, 392, 396, 404, 406, 407, 411, 414, 422, 423, 424, 428, 433, 435, 437, 438, 440, 450, 451, 453, 454, 457, 461, 462, 463, 464, 468, 474, 477, 479, 480, 481, 483, 484, 485, 492, 493, 494, 495, 496, 498, 500, 502, 503, 505, 506, 509, 510, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548], "github": [0, 102, 201, 276, 306, 382, 387, 391, 395, 397, 400, 404, 410, 415, 426, 427, 434, 436, 438, 439, 442, 462, 551], "io": [0, 102, 387, 391, 400, 410], "i": [0, 2, 3, 6, 7, 10, 11, 14, 17, 19, 20, 24, 25, 33, 35, 36, 38, 39, 42, 44, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 66, 67, 68, 69, 71, 72, 73, 77, 79, 80, 93, 94, 95, 98, 99, 101, 103, 105, 106, 107, 108, 109, 111, 117, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 143, 145, 146, 147, 149, 150, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 173, 174, 181, 183, 184, 187, 188, 189, 193, 200, 201, 204, 205, 227, 228, 229, 231, 232, 234, 235, 236, 241, 242, 243, 244, 250, 251, 252, 254, 258, 261, 262, 265, 266, 268, 271, 272, 273, 286, 293, 296, 299, 301, 303, 306, 310, 311, 313, 316, 317, 319, 320, 321, 324, 325, 326, 327, 329, 337, 379, 383, 384, 386, 387, 388, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 442, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 468, 470, 471, 472, 473, 475, 477, 478, 479, 481, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551], "us": [0, 2, 6, 7, 8, 9, 10, 11, 14, 17, 19, 20, 26, 30, 36, 38, 39, 42, 48, 54, 55, 56, 57, 61, 64, 66, 68, 77, 79, 80, 82, 94, 96, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120, 121, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 141, 145, 146, 147, 149, 150, 154, 156, 158, 159, 161, 164, 165, 166, 167, 168, 169, 173, 174, 184, 188, 191, 192, 193, 199, 200, 201, 204, 205, 209, 210, 212, 220, 221, 222, 223, 224, 225, 226, 229, 231, 236, 237, 238, 241, 243, 244, 246, 247, 248, 252, 254, 259, 261, 268, 270, 272, 274, 278, 285, 287, 294, 295, 296, 297, 299, 301, 303, 306, 311, 312, 322, 327, 328, 333, 334, 379, 380, 382, 383, 384, 387, 390, 391, 392, 395, 396, 397, 398, 399, 401, 402, 405, 406, 407, 408, 410, 413, 414, 418, 419, 421, 422, 423, 427, 429, 430, 433, 434, 436, 437, 438, 439, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 484, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 519, 521, 522, 523, 524, 525, 526, 527, 528, 530, 532, 534, 536, 537, 538, 539, 540, 541, 543, 545, 546, 547, 548, 549, 550, 551], "sphinx": 0, "host": [0, 87, 101, 102, 119, 120, 121, 125, 126, 140, 141, 142, 145, 147, 149, 150, 151, 165, 167, 191, 383, 387, 390, 391, 395, 402, 410, 415, 421, 449, 461, 464, 477, 551], "page": [0, 3, 102, 143, 187, 201, 382, 387, 390, 391, 397, 398, 410, 415, 432, 439, 450, 454, 461, 464, 468, 474, 477, 480, 481, 493, 494, 495, 496, 515, 547, 548, 551], "certain": [0, 122, 200, 262, 311, 324, 383, 386, 387, 392, 406, 410, 422, 428, 435, 436, 448, 451, 452, 453, 464, 470, 505, 509, 510, 512, 513, 520, 526, 528, 530, 534, 536, 537, 538, 539, 542, 550], "file": [0, 6, 7, 8, 9, 10, 14, 19, 26, 29, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 55, 62, 64, 65, 67, 68, 70, 73, 77, 96, 99, 101, 105, 107, 122, 126, 127, 133, 136, 140, 141, 146, 147, 150, 154, 156, 159, 161, 165, 167, 169, 173, 181, 183, 184, 187, 191, 193, 200, 204, 205, 206, 207, 216, 227, 231, 235, 236, 245, 248, 259, 266, 274, 292, 293, 294, 297, 303, 311, 314, 317, 319, 326, 333, 334, 383, 387, 388, 390, 392, 395, 397, 398, 402, 404, 405, 406, 407, 408, 409, 410, 413, 415, 416, 419, 422, 423, 429, 430, 432, 433, 434, 436, 437, 438, 441, 442, 444, 445, 447, 449, 450, 453, 454, 460, 461, 468, 470, 473, 477, 478, 481, 488, 490, 493, 505, 507, 509, 513, 514, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 538, 539, 543, 544, 546, 547, 548], "like": [0, 10, 19, 62, 101, 108, 124, 129, 132, 136, 142, 144, 149, 150, 165, 167, 193, 200, 382, 383, 386, 387, 391, 392, 395, 398, 403, 405, 406, 410, 414, 415, 421, 422, 423, 428, 430, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 447, 448, 449, 453, 459, 460, 462, 463, 468, 470, 474, 477, 478, 481, 485, 492, 493, 494, 495, 496, 505, 506, 507, 508, 510, 512, 513, 518, 519, 520, 527, 532, 533, 534, 535, 542, 543, 544, 547, 548, 549, 551], "rst": [0, 387, 391, 499], "config": [0, 2, 68, 73, 75, 86, 87, 102, 111, 126, 138, 141, 147, 149, 150, 159, 161, 167, 170, 177, 190, 204, 270, 387, 388, 390, 391, 395, 400, 408, 415, 416, 422, 429, 436, 439, 442, 445, 453, 458, 460, 461, 463, 481, 514], "conf": [0, 68, 73, 101, 126, 139, 140, 141, 150, 191, 387, 388, 390, 392, 406, 410, 422, 429, 434, 441, 442, 449, 458, 460, 461, 464, 481, 514], "py": [0, 9, 29, 68, 80, 101, 189, 311, 383, 387, 390, 392, 395, 399, 402, 404, 407, 408, 410, 415, 416, 422, 423, 430, 434, 435, 437, 438, 439, 441, 442, 445, 447, 450, 454, 492, 547], "html": [0, 10, 101, 102, 157, 159, 165, 201, 390, 391, 396, 414, 415, 427, 440, 444, 448, 451, 453, 472, 493, 494, 495, 496, 519, 546], "which": [0, 7, 10, 14, 19, 47, 77, 79, 87, 105, 107, 108, 117, 121, 126, 129, 130, 132, 133, 136, 137, 141, 146, 147, 150, 155, 159, 160, 161, 174, 183, 187, 189, 201, 204, 211, 220, 242, 296, 299, 311, 322, 329, 343, 383, 386, 387, 388, 391, 392, 395, 397, 399, 401, 405, 406, 407, 410, 414, 415, 421, 422, 424, 425, 428, 429, 430, 434, 435, 436, 437, 438, 445, 447, 448, 449, 450, 452, 453, 460, 461, 464, 465, 468, 470, 474, 477, 478, 481, 485, 487, 492, 494, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 520, 521, 522, 523, 524, 525, 527, 528, 530, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 547, 548, 550], "we": [0, 14, 19, 36, 42, 44, 47, 61, 66, 68, 82, 99, 108, 124, 126, 149, 150, 156, 161, 184, 187, 201, 241, 242, 246, 247, 248, 259, 271, 285, 291, 293, 299, 311, 383, 386, 387, 388, 390, 391, 392, 395, 396, 397, 399, 400, 401, 403, 405, 406, 407, 410, 411, 413, 414, 415, 419, 422, 423, 424, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 447, 448, 449, 451, 452, 453, 454, 456, 459, 460, 461, 462, 468, 470, 471, 473, 474, 477, 478, 479, 480, 481, 484, 485, 487, 488, 489, 490, 491, 492, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 519, 520, 521, 522, 523, 527, 528, 531, 534, 535, 542, 543, 544, 547, 548, 549, 551], "later": [0, 62, 66, 117, 129, 211, 383, 387, 391, 392, 395, 398, 399, 400, 406, 410, 415, 436, 437, 444, 451, 453, 468, 476, 477, 478, 490, 509, 551], "copi": [0, 19, 40, 42, 43, 47, 49, 60, 99, 101, 136, 140, 141, 147, 150, 161, 165, 285, 293, 294, 311, 335, 383, 387, 390, 391, 398, 402, 410, 421, 425, 428, 434, 450, 460, 470, 481, 487, 508, 512, 532, 541, 547], "some": [0, 7, 10, 19, 23, 25, 35, 53, 56, 57, 58, 65, 66, 79, 80, 101, 102, 105, 106, 107, 108, 111, 113, 115, 126, 127, 130, 132, 133, 134, 136, 137, 139, 140, 141, 149, 150, 156, 158, 159, 167, 169, 174, 191, 193, 194, 199, 200, 204, 242, 284, 287, 322, 328, 335, 337, 352, 379, 382, 383, 387, 391, 392, 396, 397, 398, 399, 401, 402, 403, 405, 406, 407, 410, 415, 416, 421, 422, 423, 425, 428, 430, 433, 435, 436, 437, 438, 439, 441, 442, 444, 445, 447, 448, 449, 450, 451, 453, 455, 459, 460, 461, 463, 464, 465, 468, 472, 473, 477, 478, 480, 481, 487, 492, 501, 505, 507, 509, 511, 512, 520, 521, 522, 523, 524, 525, 530, 535, 538, 539, 542, 545, 547, 548, 549, 550, 551], "server": [0, 66, 99, 118, 173, 387, 391, 395, 400, 406, 410, 421, 425, 426, 427, 429, 437, 438, 448, 449, 451, 506, 537, 538, 539, 546], "In": [0, 7, 10, 19, 21, 25, 41, 43, 44, 65, 68, 80, 105, 125, 137, 141, 149, 150, 167, 199, 200, 205, 311, 383, 386, 387, 388, 391, 392, 395, 397, 398, 400, 405, 406, 414, 416, 418, 419, 422, 423, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 460, 463, 464, 465, 468, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 501, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 518, 519, 520, 522, 523, 525, 527, 528, 531, 532, 533, 535, 542, 543, 544, 547, 548, 549], "our": [0, 99, 136, 184, 201, 383, 386, 387, 388, 391, 392, 396, 400, 401, 406, 410, 422, 423, 430, 435, 436, 437, 438, 442, 445, 446, 449, 450, 451, 456, 460, 462, 468, 470, 471, 477, 478, 479, 480, 483, 491, 500, 503, 506, 507, 508, 509, 510, 512, 513, 524, 547, 548], "case": [0, 2, 17, 19, 41, 42, 44, 96, 101, 123, 125, 136, 147, 150, 167, 174, 200, 205, 303, 387, 391, 392, 397, 398, 400, 406, 410, 413, 414, 422, 425, 430, 434, 435, 436, 437, 438, 442, 447, 448, 449, 450, 452, 453, 460, 463, 464, 468, 470, 472, 474, 477, 478, 481, 487, 488, 490, 491, 493, 494, 495, 496, 503, 505, 507, 508, 509, 510, 512, 513, 517, 518, 519, 521, 522, 523, 524, 527, 528, 530, 531, 532, 533, 534, 537, 538, 539, 543, 544, 547, 548, 549], "differ": [0, 9, 10, 11, 19, 21, 24, 27, 37, 42, 48, 54, 74, 75, 79, 80, 101, 105, 106, 108, 113, 130, 136, 141, 145, 149, 150, 154, 161, 165, 172, 174, 205, 227, 228, 230, 241, 244, 246, 247, 248, 250, 271, 293, 300, 311, 313, 323, 327, 329, 338, 352, 383, 386, 387, 388, 391, 392, 397, 399, 402, 406, 409, 410, 414, 415, 419, 422, 423, 424, 429, 432, 437, 438, 442, 444, 445, 448, 449, 451, 452, 453, 459, 460, 462, 464, 468, 470, 473, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 490, 492, 493, 500, 501, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 519, 520, 521, 522, 523, 524, 525, 532, 533, 534, 535, 536, 538, 539, 542, 544, 546, 547, 548, 551], "version": [0, 2, 10, 35, 133, 134, 137, 150, 184, 187, 189, 258, 384, 386, 391, 397, 399, 401, 402, 407, 411, 414, 415, 422, 423, 426, 427, 428, 435, 442, 445, 449, 450, 452, 453, 455, 459, 462, 463, 464, 468, 470, 474, 477, 481, 482, 483, 493, 494, 495, 496, 499, 507, 510, 512, 514, 524, 525, 536, 537, 538, 539, 540, 541, 542, 549], "repositori": [0, 87, 99, 170, 384, 386, 387, 391, 410, 411, 429, 435, 437, 453], "At": [0, 140, 188, 387, 388, 392, 410, 437, 442, 449, 452, 453, 468, 473, 474, 477, 490, 509, 510, 511, 512, 520, 524, 535, 547, 548], "time": [0, 14, 32, 38, 61, 66, 79, 80, 101, 105, 120, 123, 125, 127, 129, 133, 136, 140, 141, 150, 154, 165, 167, 174, 259, 383, 386, 387, 388, 392, 402, 405, 406, 410, 414, 415, 416, 421, 422, 425, 427, 428, 430, 434, 435, 436, 437, 439, 444, 445, 447, 449, 450, 451, 452, 453, 455, 460, 464, 465, 468, 470, 473, 477, 479, 481, 487, 488, 489, 492, 502, 505, 507, 508, 509, 510, 512, 520, 524, 527, 528, 530, 537, 538, 539, 542, 544, 547, 548], "thi": [0, 2, 4, 6, 7, 9, 10, 11, 14, 17, 19, 20, 21, 22, 24, 25, 27, 29, 33, 36, 38, 39, 41, 42, 43, 44, 47, 49, 51, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 73, 74, 77, 79, 80, 93, 94, 95, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 117, 119, 120, 121, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 174, 184, 187, 188, 189, 193, 200, 202, 204, 212, 228, 230, 233, 234, 236, 241, 242, 250, 254, 259, 266, 267, 270, 271, 272, 273, 285, 290, 291, 292, 293, 296, 299, 300, 301, 303, 310, 311, 314, 315, 322, 324, 327, 328, 329, 335, 337, 340, 343, 352, 382, 383, 384, 386, 387, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 403, 405, 406, 407, 410, 413, 414, 415, 416, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 459, 460, 462, 463, 464, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550], "write": [0, 6, 7, 14, 17, 19, 20, 32, 68, 77, 101, 108, 136, 139, 141, 146, 154, 157, 165, 200, 204, 206, 227, 235, 248, 259, 266, 271, 317, 319, 326, 333, 334, 383, 387, 396, 401, 410, 415, 422, 423, 428, 435, 437, 444, 449, 452, 456, 460, 464, 468, 477, 483, 489, 492, 493, 500, 507, 509, 510, 511, 512, 513, 518, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 532, 535, 542, 543], "have": [0, 10, 14, 17, 19, 38, 42, 44, 50, 55, 58, 67, 79, 83, 84, 101, 105, 106, 107, 108, 109, 110, 113, 117, 129, 130, 132, 133, 136, 137, 141, 145, 149, 150, 154, 156, 158, 167, 169, 174, 184, 187, 193, 200, 201, 228, 250, 254, 271, 291, 293, 311, 321, 322, 328, 343, 382, 383, 386, 387, 391, 392, 397, 398, 399, 401, 402, 405, 406, 408, 411, 414, 415, 417, 421, 422, 424, 425, 427, 428, 429, 430, 432, 435, 436, 437, 438, 439, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 459, 460, 461, 462, 463, 464, 468, 470, 471, 473, 474, 477, 478, 480, 481, 483, 485, 487, 488, 489, 490, 491, 492, 494, 495, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 530, 531, 532, 533, 534, 535, 538, 539, 541, 542, 543, 544, 547, 548, 549], "onli": [0, 6, 14, 17, 19, 35, 58, 79, 99, 105, 108, 109, 111, 123, 125, 130, 132, 134, 136, 137, 141, 147, 150, 161, 165, 168, 169, 174, 187, 188, 191, 193, 200, 204, 227, 235, 243, 266, 286, 293, 301, 311, 317, 319, 324, 326, 383, 386, 387, 391, 392, 397, 399, 400, 405, 406, 410, 413, 415, 416, 419, 421, 422, 427, 428, 430, 434, 435, 437, 438, 441, 442, 445, 447, 449, 451, 452, 453, 455, 460, 462, 464, 468, 470, 474, 477, 478, 481, 487, 488, 489, 490, 491, 492, 493, 502, 505, 506, 507, 508, 509, 510, 511, 512, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 530, 532, 535, 537, 538, 539, 542, 547, 548, 550], "one": [0, 6, 14, 17, 19, 24, 35, 42, 51, 56, 58, 64, 66, 68, 79, 80, 99, 105, 106, 107, 108, 110, 111, 115, 117, 118, 119, 120, 121, 125, 126, 127, 129, 132, 133, 136, 137, 141, 145, 149, 150, 158, 159, 161, 165, 167, 168, 187, 188, 193, 200, 204, 210, 244, 248, 252, 261, 262, 271, 293, 299, 311, 317, 319, 324, 327, 328, 383, 386, 387, 388, 391, 392, 395, 397, 398, 401, 402, 403, 405, 406, 407, 409, 410, 413, 414, 415, 422, 424, 425, 428, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442, 444, 447, 448, 449, 450, 451, 452, 453, 456, 457, 459, 460, 462, 463, 464, 468, 471, 473, 474, 477, 478, 487, 488, 489, 490, 492, 493, 496, 498, 505, 506, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 524, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 538, 539, 540, 542, 543, 544, 547, 548], "branch": [0, 25, 53, 129, 150, 386, 397, 414, 428, 434, 436, 438, 442, 453, 489, 511, 536, 549], "releas": [0, 82, 102, 187, 189, 386, 387, 391, 396, 400, 411, 414, 415, 426, 428, 429, 435, 437, 459, 460, 461, 474, 492, 514], "3": [0, 6, 7, 10, 19, 39, 40, 44, 45, 46, 57, 58, 68, 79, 101, 102, 106, 107, 108, 118, 123, 125, 139, 145, 147, 150, 151, 159, 165, 167, 189, 200, 201, 204, 236, 260, 262, 282, 283, 287, 291, 293, 299, 324, 386, 387, 391, 392, 399, 400, 406, 409, 419, 423, 424, 428, 429, 432, 434, 435, 436, 437, 438, 451, 453, 454, 455, 457, 459, 460, 461, 462, 463, 465, 472, 473, 474, 476, 477, 478, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 546, 550], "0": [0, 2, 6, 7, 8, 9, 10, 14, 19, 26, 38, 39, 40, 46, 47, 56, 57, 58, 65, 68, 70, 79, 101, 102, 105, 106, 107, 108, 110, 111, 112, 119, 120, 122, 125, 127, 130, 135, 136, 139, 141, 147, 149, 150, 151, 154, 156, 158, 161, 163, 164, 165, 167, 168, 169, 189, 201, 209, 210, 231, 249, 258, 260, 261, 262, 271, 276, 279, 282, 283, 287, 294, 299, 304, 310, 311, 313, 326, 328, 335, 346, 347, 386, 387, 391, 392, 397, 399, 406, 407, 409, 413, 414, 415, 418, 422, 423, 426, 427, 428, 432, 434, 435, 436, 437, 442, 449, 451, 452, 453, 459, 460, 462, 463, 464, 468, 472, 482, 492, 493, 499, 505, 507, 509, 514, 517, 519, 520, 524, 525, 526, 527, 528, 533, 534, 535, 536, 537, 538, 539, 542, 549, 550], "ll": [0, 387, 391, 410, 430, 434, 437, 439, 441, 447, 450, 454, 468, 492, 510, 520, 525], "more": [0, 6, 10, 19, 58, 106, 108, 120, 126, 130, 133, 136, 137, 149, 150, 157, 158, 165, 167, 193, 204, 262, 306, 383, 386, 387, 391, 392, 395, 397, 399, 400, 402, 406, 407, 408, 409, 410, 413, 415, 422, 425, 428, 429, 430, 435, 436, 437, 438, 439, 441, 442, 444, 445, 447, 449, 451, 453, 460, 461, 464, 465, 468, 470, 471, 473, 474, 477, 478, 479, 481, 487, 488, 489, 492, 496, 501, 507, 508, 509, 511, 512, 519, 521, 522, 523, 524, 525, 528, 533, 535, 537, 538, 539, 542, 547, 548, 549], "futur": [0, 7, 108, 145, 156, 387, 392, 406, 460, 483, 500, 547, 548], "The": [0, 7, 10, 14, 19, 26, 27, 29, 30, 44, 48, 49, 53, 54, 58, 66, 77, 79, 101, 105, 106, 108, 110, 117, 120, 126, 129, 130, 132, 136, 137, 139, 141, 145, 150, 156, 161, 164, 165, 167, 168, 169, 173, 174, 187, 188, 193, 200, 201, 204, 210, 224, 227, 228, 232, 236, 241, 242, 244, 246, 247, 248, 250, 252, 254, 259, 261, 262, 268, 271, 273, 279, 280, 281, 296, 297, 299, 301, 303, 310, 311, 325, 328, 329, 346, 347, 383, 384, 386, 387, 388, 391, 392, 395, 396, 397, 398, 399, 400, 401, 404, 406, 408, 409, 410, 413, 414, 415, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 456, 459, 460, 464, 465, 470, 473, 474, 478, 479, 480, 481, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 513, 517, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 542, 543, 544, 545, 547, 548, 549, 550], "gh": [0, 387], "contain": [0, 2, 4, 6, 7, 14, 17, 19, 20, 23, 37, 42, 44, 58, 60, 64, 79, 101, 102, 105, 106, 107, 108, 112, 117, 123, 124, 125, 127, 129, 130, 134, 136, 137, 139, 140, 141, 142, 144, 146, 148, 150, 155, 156, 159, 161, 166, 169, 184, 187, 188, 192, 193, 200, 202, 204, 236, 267, 287, 290, 292, 311, 322, 328, 335, 337, 383, 387, 391, 392, 395, 396, 398, 400, 401, 402, 406, 410, 413, 414, 421, 422, 423, 429, 430, 432, 434, 435, 436, 437, 438, 442, 444, 447, 450, 452, 453, 459, 460, 462, 464, 468, 470, 473, 477, 478, 480, 485, 487, 488, 489, 492, 501, 502, 505, 506, 507, 509, 510, 511, 512, 513, 515, 520, 521, 522, 523, 524, 525, 532, 534, 535, 536, 537, 538, 539, 542, 544, 546, 547, 548], "all": [0, 6, 7, 14, 17, 19, 20, 22, 23, 24, 25, 26, 29, 30, 38, 47, 49, 50, 53, 54, 56, 57, 58, 59, 75, 79, 80, 82, 84, 89, 92, 97, 99, 101, 106, 107, 108, 110, 118, 122, 126, 127, 129, 130, 132, 133, 135, 136, 137, 139, 140, 141, 145, 147, 149, 150, 151, 154, 156, 158, 159, 161, 162, 165, 166, 167, 168, 174, 183, 184, 187, 188, 191, 193, 211, 227, 231, 241, 244, 255, 257, 258, 259, 271, 272, 293, 294, 311, 317, 319, 324, 329, 335, 377, 383, 384, 386, 387, 388, 391, 392, 395, 397, 398, 402, 405, 406, 407, 410, 411, 413, 415, 416, 419, 422, 423, 428, 429, 431, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 447, 449, 450, 452, 453, 454, 456, 459, 460, 462, 463, 464, 465, 468, 470, 471, 472, 477, 481, 487, 489, 492, 493, 494, 498, 504, 505, 506, 509, 513, 514, 519, 520, 525, 532, 533, 535, 537, 538, 539, 542, 544, 546, 547, 548, 549, 551], "e": [0, 7, 10, 19, 25, 53, 54, 57, 77, 101, 102, 103, 106, 107, 108, 111, 117, 123, 125, 127, 129, 137, 140, 150, 157, 159, 164, 165, 167, 173, 184, 187, 188, 201, 218, 313, 380, 386, 387, 388, 391, 397, 401, 403, 405, 406, 410, 419, 421, 422, 424, 428, 434, 436, 438, 441, 442, 444, 445, 448, 449, 450, 451, 453, 455, 456, 460, 464, 465, 468, 470, 477, 481, 483, 489, 492, 493, 500, 503, 505, 509, 511, 517, 519, 523, 524, 526, 530, 535, 546, 547, 548, 550], "when": [0, 17, 19, 20, 36, 42, 44, 54, 55, 56, 64, 99, 101, 102, 105, 106, 107, 108, 117, 118, 120, 123, 125, 126, 127, 129, 130, 136, 137, 139, 141, 145, 146, 149, 150, 154, 165, 167, 168, 200, 241, 252, 272, 299, 311, 383, 386, 387, 391, 392, 395, 398, 399, 400, 402, 405, 406, 409, 410, 414, 415, 422, 423, 427, 428, 429, 430, 431, 434, 435, 436, 437, 439, 442, 447, 448, 449, 452, 453, 460, 462, 464, 468, 470, 473, 474, 477, 478, 481, 487, 488, 489, 490, 492, 493, 494, 495, 496, 504, 508, 509, 513, 517, 518, 519, 520, 521, 522, 523, 525, 527, 528, 529, 533, 535, 537, 539, 541, 542, 547, 548], "new": [0, 6, 7, 10, 14, 19, 29, 33, 49, 54, 77, 79, 101, 106, 107, 117, 125, 127, 129, 132, 133, 135, 136, 137, 139, 140, 141, 145, 149, 150, 154, 161, 164, 165, 167, 184, 187, 200, 201, 204, 213, 224, 225, 234, 241, 246, 270, 272, 311, 314, 383, 387, 391, 392, 395, 396, 397, 398, 399, 401, 402, 406, 407, 408, 411, 414, 422, 428, 431, 434, 435, 436, 437, 439, 442, 445, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 468, 470, 473, 474, 476, 477, 479, 481, 487, 490, 491, 492, 493, 494, 495, 496, 499, 505, 507, 508, 509, 511, 512, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 551], "commit": [0, 20, 132, 133, 135, 136, 139, 207, 387, 391, 422], "ar": [0, 6, 7, 10, 14, 17, 19, 21, 25, 26, 29, 30, 39, 43, 44, 54, 55, 56, 57, 58, 65, 67, 77, 79, 84, 97, 99, 101, 105, 106, 107, 108, 109, 112, 113, 117, 120, 122, 125, 126, 127, 129, 130, 133, 136, 137, 141, 145, 147, 149, 150, 157, 159, 161, 164, 165, 167, 173, 183, 184, 187, 188, 191, 200, 201, 204, 205, 206, 209, 210, 215, 220, 224, 228, 242, 250, 259, 262, 265, 273, 279, 292, 296, 301, 303, 311, 313, 317, 319, 322, 335, 382, 383, 386, 387, 391, 392, 395, 396, 397, 398, 399, 401, 402, 405, 406, 407, 408, 409, 413, 414, 415, 416, 419, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 460, 461, 463, 464, 465, 468, 470, 471, 472, 473, 474, 477, 478, 479, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 547, 548, 549, 550, 551], "push": [0, 410, 450], "updat": [0, 7, 19, 33, 49, 99, 101, 106, 108, 111, 122, 129, 132, 133, 135, 136, 139, 141, 150, 156, 164, 165, 167, 184, 188, 189, 191, 234, 246, 301, 383, 387, 391, 392, 400, 402, 405, 414, 415, 429, 434, 435, 437, 442, 451, 452, 464, 468, 477, 489, 490, 514, 547, 548], "reflect": [0, 10, 87, 155, 387, 391, 392, 406, 410, 422, 460, 525, 537, 547], "them": [0, 6, 8, 9, 19, 35, 47, 51, 55, 56, 57, 59, 66, 96, 101, 109, 133, 161, 166, 191, 212, 231, 236, 242, 252, 266, 279, 301, 311, 314, 322, 324, 346, 347, 383, 387, 391, 392, 395, 399, 400, 405, 406, 410, 411, 413, 415, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 442, 444, 445, 447, 448, 452, 453, 460, 462, 464, 465, 468, 469, 471, 473, 474, 476, 477, 478, 487, 489, 492, 493, 498, 501, 504, 505, 506, 509, 510, 511, 512, 513, 515, 520, 523, 524, 527, 530, 532, 533, 535, 537, 538, 539, 540, 542, 544, 547, 548], "automat": [0, 54, 77, 101, 107, 108, 117, 156, 165, 188, 201, 204, 262, 270, 276, 383, 386, 387, 391, 392, 397, 399, 402, 406, 410, 413, 415, 422, 423, 437, 438, 442, 447, 453, 465, 468, 470, 473, 474, 476, 477, 481, 487, 505, 508, 509, 510, 511, 523, 524, 526, 527, 533, 534, 541, 546, 547, 548, 549], "On": [0, 165, 383, 387, 396, 405, 414, 429, 434, 438, 446, 447, 464, 468, 474, 477, 478, 547, 548, 551], "high": [0, 149, 201, 228, 250, 252, 299, 346, 347, 383, 387, 406, 450, 455, 457, 468, 479, 484, 487, 489, 492, 493, 494, 495, 496, 500, 501, 503, 505, 506, 510, 512, 527, 533, 534, 536, 537, 538, 539, 545, 547], "level": [0, 77, 101, 108, 109, 110, 125, 133, 135, 136, 150, 159, 165, 167, 201, 220, 223, 333, 334, 387, 391, 402, 406, 409, 410, 422, 437, 444, 445, 450, 468, 477, 505, 510, 512, 520, 524], "two": [0, 6, 8, 10, 14, 19, 27, 42, 57, 58, 84, 106, 109, 110, 122, 125, 132, 133, 136, 141, 147, 173, 204, 212, 217, 227, 244, 271, 284, 302, 306, 310, 318, 328, 332, 335, 343, 383, 387, 391, 392, 399, 405, 406, 409, 410, 414, 415, 424, 427, 428, 432, 433, 438, 441, 442, 445, 448, 451, 452, 453, 455, 457, 460, 462, 468, 470, 474, 477, 485, 487, 488, 490, 491, 492, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 535, 536, 538, 539, 540, 542, 543, 544, 546, 547, 548], "main": [0, 65, 79, 90, 91, 96, 99, 101, 108, 111, 113, 115, 118, 125, 127, 137, 146, 147, 150, 181, 183, 188, 191, 193, 194, 299, 301, 337, 386, 387, 391, 392, 397, 398, 400, 402, 406, 408, 410, 422, 423, 430, 435, 438, 441, 442, 444, 445, 451, 453, 465, 468, 470, 471, 473, 477, 479, 480, 492, 501, 505, 507, 508, 509, 510, 511, 512, 513, 520, 523, 524, 528, 529, 532, 533, 535, 537, 538, 539, 544, 547, 548, 549], "part": [0, 2, 7, 26, 38, 44, 136, 161, 201, 204, 242, 243, 313, 379, 383, 387, 391, 392, 400, 410, 424, 430, 444, 447, 468, 473, 475, 478, 484, 485, 487, 488, 489, 491, 495, 496, 498, 505, 509, 510, 511, 512, 517, 520, 524, 525, 526, 527, 528, 533, 534, 535, 536, 537, 538, 539, 541, 542, 547, 548, 550], "from": [0, 2, 6, 7, 8, 10, 11, 14, 17, 19, 21, 26, 29, 31, 36, 38, 41, 42, 43, 44, 46, 47, 49, 51, 53, 54, 55, 56, 58, 62, 65, 68, 73, 80, 92, 94, 99, 101, 105, 106, 107, 108, 111, 113, 115, 117, 118, 123, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 139, 140, 141, 145, 146, 147, 149, 150, 154, 157, 159, 161, 165, 166, 167, 184, 187, 188, 189, 191, 193, 194, 200, 201, 204, 205, 207, 217, 220, 222, 227, 232, 233, 235, 240, 241, 242, 244, 246, 247, 248, 252, 254, 256, 259, 266, 270, 272, 274, 276, 280, 281, 292, 293, 295, 296, 297, 299, 311, 317, 319, 322, 324, 326, 327, 335, 337, 379, 383, 386, 387, 390, 392, 395, 398, 399, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 449, 451, 452, 454, 455, 457, 460, 463, 464, 465, 468, 470, 473, 474, 477, 478, 479, 480, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 536, 537, 538, 539, 542, 544, 545, 546, 549, 550, 551], "code": [0, 6, 9, 10, 48, 56, 57, 107, 119, 120, 121, 126, 157, 161, 167, 187, 243, 386, 387, 391, 392, 397, 398, 401, 407, 408, 409, 410, 423, 430, 433, 434, 435, 437, 438, 439, 441, 442, 444, 445, 447, 450, 464, 472, 492, 504, 505, 506, 507, 514, 534], "docstr": [0, 387], "apidoc": [0, 387], "To": [0, 48, 56, 57, 101, 149, 159, 167, 243, 314, 383, 387, 391, 392, 397, 400, 406, 407, 410, 413, 414, 415, 416, 421, 422, 423, 426, 427, 428, 434, 435, 437, 438, 439, 441, 444, 449, 450, 452, 453, 455, 459, 461, 462, 463, 464, 468, 470, 471, 473, 474, 477, 478, 480, 481, 487, 488, 492, 493, 494, 495, 496, 505, 507, 508, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 551], "need": [0, 19, 42, 48, 49, 51, 54, 59, 66, 79, 80, 82, 101, 105, 130, 133, 136, 137, 141, 149, 150, 156, 161, 167, 173, 174, 184, 187, 189, 199, 200, 204, 227, 235, 266, 293, 295, 300, 304, 311, 317, 319, 326, 383, 387, 390, 391, 392, 395, 397, 398, 400, 402, 406, 408, 410, 411, 414, 415, 419, 422, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 438, 439, 442, 445, 446, 447, 449, 450, 451, 452, 453, 454, 459, 460, 461, 463, 464, 468, 470, 471, 473, 474, 477, 478, 481, 487, 492, 507, 510, 514, 523, 524, 527, 533, 534, 547, 548, 549, 551], "work": [0, 7, 35, 54, 83, 84, 91, 108, 118, 141, 150, 156, 161, 201, 299, 383, 387, 392, 395, 396, 399, 400, 401, 402, 406, 410, 421, 422, 424, 425, 426, 427, 428, 429, 430, 436, 437, 438, 439, 440, 442, 446, 449, 451, 460, 464, 468, 470, 490, 491, 492, 494, 496, 504, 505, 507, 508, 509, 515, 524, 527, 535, 537, 547, 548, 549], "machin": [0, 7, 94, 150, 167, 201, 386, 387, 400, 414, 415, 424, 426, 427, 429, 444, 449, 455, 460, 462, 547], "manual": [0, 42, 101, 204, 269, 383, 387, 407, 410, 423, 434, 444, 452, 453, 473, 477, 478, 481, 490, 494, 496, 508, 509, 511, 517, 523, 548, 549, 551], "content": [0, 1, 79, 86, 99, 108, 127, 159, 165, 166, 167, 176, 187, 197, 201, 206, 387, 430, 434, 435, 436, 437, 438, 439, 441, 450, 477, 488, 492, 493, 494, 495, 496, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 551], "g": [0, 3, 10, 19, 77, 107, 117, 137, 143, 150, 159, 164, 167, 184, 187, 201, 337, 387, 397, 406, 410, 419, 434, 436, 438, 441, 442, 445, 451, 455, 459, 461, 464, 468, 470, 477, 481, 493, 509, 519, 523, 530, 546], "guid": [0, 10, 276, 383, 387, 391, 392, 401, 402, 415, 435, 450, 461, 462, 479, 480, 481, 485, 502, 537, 547, 549, 550], "tutori": [0, 177, 190, 387, 391, 400, 402, 407, 410, 425, 433, 435, 441, 442, 453, 455, 460, 461, 465, 475, 476, 477, 482, 483, 484, 485, 487, 488, 489, 490, 491, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 551], "etc": [0, 7, 17, 25, 53, 58, 165, 167, 287, 289, 382, 383, 387, 391, 395, 398, 400, 401, 406, 409, 410, 422, 423, 429, 431, 433, 436, 442, 445, 449, 451, 461, 464, 468, 473, 476, 477, 478, 530, 544, 548], "root": [0, 101, 103, 108, 111, 136, 141, 158, 161, 165, 431, 434, 493, 510, 525, 527, 537, 540], "folder": [0, 2, 99, 101, 105, 140, 141, 149, 150, 154, 159, 161, 165, 166, 184, 187, 191, 194, 200, 207, 311, 323, 383, 387, 390, 391, 395, 397, 410, 416, 421, 422, 428, 434, 435, 436, 437, 438, 439, 442, 449, 454, 464, 470, 473, 503, 509, 513, 524, 530, 532, 538, 539, 544, 547, 549], "repo": [0, 387, 391, 410, 429, 461, 462], "type": [0, 6, 7, 8, 10, 14, 17, 19, 37, 53, 58, 65, 74, 75, 101, 105, 113, 127, 129, 133, 136, 149, 150, 156, 157, 167, 169, 172, 188, 193, 200, 204, 243, 279, 311, 337, 338, 352, 383, 391, 392, 395, 397, 398, 400, 406, 407, 410, 414, 415, 423, 426, 427, 428, 430, 431, 432, 433, 434, 437, 439, 444, 445, 447, 448, 449, 452, 453, 455, 464, 468, 470, 477, 478, 487, 493, 505, 507, 511, 512, 513, 515, 517, 518, 519, 523, 524, 526, 527, 528, 533, 537, 538, 539, 542, 544, 547, 548], "scipion3": [0, 391, 395, 410, 413, 428, 434, 436, 438, 442, 445, 449, 453, 461, 462, 463, 468, 479, 515], "run": [0, 42, 48, 54, 56, 57, 61, 62, 73, 96, 97, 101, 108, 119, 120, 121, 125, 126, 129, 141, 145, 147, 150, 154, 158, 159, 162, 164, 165, 167, 193, 255, 257, 258, 267, 295, 352, 382, 383, 386, 387, 388, 390, 392, 395, 396, 399, 400, 402, 406, 410, 414, 415, 416, 421, 422, 423, 426, 427, 428, 429, 430, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 449, 450, 451, 452, 453, 454, 455, 459, 460, 461, 462, 465, 468, 477, 481, 487, 488, 490, 492, 493, 494, 495, 496, 505, 506, 507, 509, 510, 512, 514, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549], "pip": [0, 137, 184, 187, 383, 387, 415, 449, 481], "r": [0, 3, 10, 84, 108, 143, 201, 251, 321, 387, 406, 409, 435, 450, 465, 507, 509, 510, 512, 517, 519, 525, 546], "requir": [0, 2, 5, 19, 59, 83, 84, 109, 130, 137, 141, 142, 144, 150, 200, 201, 386, 387, 392, 398, 406, 414, 415, 423, 425, 428, 429, 434, 435, 438, 441, 442, 444, 453, 455, 459, 460, 461, 464, 465, 468, 473, 481, 487, 490, 492, 493, 494, 495, 496, 501, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 549, 551], "txt": [0, 55, 101, 161, 167, 184, 191, 270, 387, 395, 410, 423, 470], "multivers": 0, "current": [0, 19, 83, 84, 91, 110, 113, 125, 127, 133, 136, 137, 145, 150, 157, 161, 164, 165, 167, 172, 187, 311, 383, 386, 387, 391, 392, 406, 414, 415, 422, 429, 437, 444, 451, 452, 453, 459, 460, 468, 470, 476, 477, 506, 509, 522, 528, 543, 547, 548, 549, 550], "deal": [0, 108, 174, 186, 188, 383, 410, 446, 468, 470, 476], "just": [0, 2, 19, 44, 67, 68, 94, 105, 125, 136, 149, 156, 159, 165, 167, 204, 243, 268, 293, 297, 335, 382, 386, 387, 388, 391, 392, 397, 400, 405, 407, 410, 415, 422, 432, 435, 438, 441, 442, 444, 445, 449, 450, 453, 464, 468, 474, 477, 481, 507, 508, 513, 515, 547, 548], "so": [0, 6, 9, 19, 28, 55, 56, 79, 83, 84, 94, 99, 136, 137, 149, 150, 157, 159, 164, 173, 188, 191, 299, 314, 383, 386, 387, 390, 391, 392, 395, 397, 399, 400, 401, 406, 407, 410, 414, 415, 422, 426, 427, 428, 429, 430, 433, 434, 435, 437, 442, 449, 450, 451, 459, 460, 464, 468, 470, 472, 473, 476, 477, 480, 481, 487, 494, 506, 507, 509, 519, 520, 527, 537, 544, 547, 548, 549, 551], "here": [0, 9, 19, 47, 67, 91, 111, 128, 130, 141, 149, 150, 156, 159, 165, 227, 235, 266, 306, 317, 319, 326, 382, 383, 387, 391, 392, 397, 399, 400, 405, 407, 408, 410, 415, 422, 425, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 441, 442, 445, 447, 449, 450, 452, 455, 456, 460, 461, 463, 464, 468, 470, 474, 476, 477, 479, 481, 487, 488, 492, 494, 507, 510, 513, 519, 520, 524, 526, 527, 529, 530, 531, 532, 537, 542, 543, 547, 548, 549], "index": [0, 14, 19, 70, 79, 108, 117, 126, 127, 129, 130, 133, 136, 139, 151, 156, 188, 204, 271, 335, 387, 391, 450, 468, 509, 525, 527, 528, 529, 532, 533, 551], "altern": [0, 77, 161, 168, 387, 391, 410, 452, 453, 461, 463, 481, 492, 493, 505, 507, 523, 547, 548], "could": [0, 19, 48, 56, 57, 101, 165, 166, 204, 241, 246, 247, 248, 285, 387, 392, 395, 403, 406, 414, 415, 424, 425, 428, 435, 437, 444, 445, 455, 464, 470, 477, 481, 487, 492, 494, 495, 496, 505, 507, 508, 509, 510, 511, 512, 513, 520, 524, 527, 532, 535, 537, 538, 539, 541, 542, 547, 549], "local": [0, 2, 47, 70, 79, 99, 141, 147, 167, 187, 191, 201, 211, 230, 244, 254, 267, 285, 299, 303, 304, 305, 307, 332, 386, 387, 395, 397, 410, 414, 418, 426, 427, 428, 429, 438, 450, 451, 461, 462, 464, 468, 483, 487, 492, 493, 499, 503, 505, 509, 510, 520, 532, 539, 545, 546, 550], "verifi": [0, 426, 427, 437, 447, 449, 461, 483, 500], "ok": [0, 107, 108, 117, 149, 150, 165, 397, 413, 435, 468, 471, 487, 492, 493, 494, 495, 496, 507, 510, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "your": [0, 79, 80, 128, 165, 174, 327, 387, 388, 390, 396, 397, 398, 401, 407, 408, 410, 415, 421, 422, 425, 428, 433, 434, 435, 437, 438, 442, 444, 445, 446, 447, 449, 450, 451, 453, 455, 456, 459, 460, 461, 462, 463, 464, 469, 470, 471, 477, 481, 483, 487, 492, 498, 500, 503, 505, 506, 507, 509, 510, 512, 520, 524, 526, 527, 530, 531, 532, 535, 543, 547, 548, 549], "pleas": [0, 387, 391, 395, 408, 410, 415, 422, 425, 428, 449, 451, 459, 461, 481, 483, 500, 550], "note": [0, 3, 7, 10, 19, 101, 141, 143, 173, 187, 200, 201, 215, 271, 293, 327, 382, 391, 392, 395, 396, 406, 407, 408, 416, 419, 422, 426, 427, 430, 432, 434, 435, 436, 437, 438, 441, 447, 448, 449, 459, 460, 464, 468, 471, 477, 487, 492, 504, 505, 506, 507, 508, 509, 510, 512, 513, 517, 523, 527, 534, 535, 542, 545, 547, 548, 549], "step": [0, 22, 24, 49, 53, 54, 68, 80, 104, 114, 130, 141, 142, 144, 145, 150, 165, 173, 200, 252, 257, 258, 293, 311, 383, 386, 387, 390, 391, 397, 399, 402, 405, 406, 407, 410, 414, 415, 419, 422, 428, 434, 435, 438, 439, 441, 442, 444, 445, 447, 450, 451, 452, 453, 454, 455, 461, 462, 464, 468, 470, 477, 479, 480, 483, 486, 487, 488, 489, 490, 491, 492, 494, 496, 498, 500, 501, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 521, 522, 523, 524, 527, 533, 534, 535, 539, 542, 544, 549, 550, 551], "necessari": [0, 19, 42, 99, 101, 147, 150, 191, 254, 288, 294, 311, 387, 392, 398, 406, 414, 415, 422, 431, 444, 447, 454, 461, 468], "re": [0, 10, 36, 49, 54, 66, 150, 383, 387, 391, 397, 402, 406, 410, 422, 425, 441, 442, 450, 451, 468, 469, 476, 477, 492, 512, 546, 547, 548], "ad": [0, 19, 79, 101, 107, 127, 129, 130, 132, 133, 150, 161, 167, 173, 184, 204, 227, 294, 335, 383, 387, 391, 392, 395, 397, 402, 409, 410, 415, 422, 423, 425, 431, 435, 437, 442, 447, 453, 464, 471, 473, 474, 481, 490, 491, 492, 493, 494, 495, 496, 499, 503, 507, 510, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547], "own": [0, 29, 105, 141, 383, 387, 390, 397, 406, 410, 413, 414, 415, 419, 424, 425, 428, 431, 433, 435, 441, 442, 452, 453, 455, 460, 463, 464, 468, 472, 478, 487, 492, 503, 506, 507, 510, 527, 530, 532, 535, 543, 549], "written": [0, 14, 19, 66, 101, 108, 161, 191, 204, 383, 387, 406, 409, 410, 444, 447, 460, 468, 487, 492, 504, 510, 519, 524, 530, 531, 543], "set": [0, 7, 10, 11, 14, 17, 19, 20, 24, 27, 28, 30, 31, 33, 36, 39, 40, 42, 44, 45, 47, 48, 50, 51, 54, 56, 57, 58, 62, 77, 79, 80, 83, 84, 101, 105, 107, 108, 111, 112, 115, 117, 118, 119, 120, 121, 123, 125, 127, 129, 130, 132, 133, 136, 139, 141, 149, 150, 154, 159, 161, 165, 166, 167, 169, 183, 184, 187, 188, 193, 200, 201, 204, 206, 209, 210, 212, 213, 215, 217, 218, 220, 221, 224, 225, 226, 227, 228, 230, 234, 236, 237, 243, 246, 247, 248, 250, 252, 254, 255, 256, 257, 258, 262, 265, 266, 268, 269, 270, 271, 272, 279, 282, 283, 284, 285, 286, 287, 289, 295, 296, 297, 299, 300, 301, 311, 313, 318, 321, 324, 326, 383, 387, 388, 390, 391, 392, 395, 397, 398, 399, 400, 402, 405, 406, 410, 414, 415, 422, 423, 426, 427, 428, 429, 431, 434, 435, 438, 439, 440, 442, 444, 446, 447, 450, 453, 455, 460, 464, 465, 468, 470, 473, 474, 477, 478, 481, 487, 491, 492, 493, 494, 495, 496, 501, 509, 514, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "up": [0, 7, 70, 111, 129, 141, 159, 165, 191, 324, 343, 383, 387, 391, 392, 406, 410, 414, 415, 427, 428, 437, 438, 439, 441, 442, 447, 453, 455, 459, 460, 462, 463, 464, 468, 471, 473, 474, 477, 481, 487, 488, 489, 490, 492, 493, 505, 507, 509, 524, 527, 531, 533, 538, 539, 542, 543, 547, 548, 549], "configur": [0, 66, 75, 88, 101, 102, 105, 107, 111, 115, 117, 118, 119, 120, 121, 125, 126, 128, 129, 139, 140, 141, 145, 146, 147, 149, 150, 159, 165, 184, 188, 191, 193, 204, 383, 386, 387, 391, 392, 401, 406, 407, 411, 414, 415, 422, 423, 427, 428, 429, 445, 447, 448, 449, 468, 474, 477, 478, 481, 492, 549, 551], "pycharm": [0, 382, 387, 391, 396, 401, 408, 434, 440, 441, 442, 450], "recommend": [0, 10, 259, 299, 383, 387, 391, 392, 396, 397, 398, 399, 415, 428, 429, 434, 438, 442, 444, 447, 459, 461, 468, 470, 481, 487, 492, 493, 494, 495, 496, 501, 503, 505, 509, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "Or": [0, 387, 468], "command": [0, 66, 68, 73, 101, 107, 118, 130, 133, 134, 147, 160, 162, 165, 167, 168, 169, 182, 184, 189, 193, 383, 386, 387, 391, 392, 395, 396, 397, 399, 407, 409, 410, 413, 415, 421, 422, 423, 428, 429, 432, 433, 434, 435, 436, 439, 442, 444, 449, 450, 461, 464, 465, 468, 474, 477, 478, 481, 487, 492, 503, 507, 508, 509, 510, 511, 512, 513, 515, 518, 519, 520, 521, 522, 523, 524, 527, 528, 535, 538, 539, 549], "line": [0, 7, 19, 48, 56, 57, 66, 92, 101, 107, 108, 127, 147, 149, 150, 154, 161, 162, 167, 193, 383, 387, 388, 391, 392, 397, 399, 400, 402, 410, 422, 423, 432, 433, 434, 435, 436, 438, 439, 444, 445, 447, 449, 451, 452, 460, 461, 465, 468, 471, 474, 477, 478, 481, 492, 503, 505, 507, 508, 509, 510, 511, 512, 513, 515, 518, 520, 521, 522, 523, 527, 528, 535, 536, 542, 549], "insid": [0, 19, 105, 108, 120, 125, 127, 156, 158, 161, 188, 285, 383, 387, 390, 391, 392, 398, 402, 406, 409, 421, 422, 429, 431, 433, 435, 436, 438, 442, 445, 447, 449, 453, 460, 468, 470, 471, 479, 480, 507, 509, 513, 520, 537, 538, 539, 543, 547, 548, 549, 550], "dir": [0, 6, 91, 141, 150, 154, 161, 387, 434, 460], "env": [0, 2, 66, 137, 145, 150, 154, 160, 162, 167, 184, 199, 200, 387, 391, 422, 429, 442, 445], "f": [0, 105, 136, 140, 201, 387, 391, 392, 406, 407, 435, 437, 439, 442, 453, 454, 468, 477, 509, 519, 531, 543, 546], "o": [0, 3, 122, 125, 141, 143, 161, 165, 167, 201, 266, 380, 387, 391, 398, 400, 404, 405, 406, 407, 409, 416, 418, 419, 435, 437, 441, 442, 445, 450, 460, 468, 519, 528, 546, 547, 548], "git": [0, 386, 387, 391, 401, 414, 415, 428, 434, 435, 436, 437, 438, 439, 442, 459, 462, 481, 549], "pyworkflow": [0, 79, 189, 378, 383, 384, 387, 390, 391, 392, 404, 407, 408, 410, 423, 430, 435, 437, 438, 439, 442, 445, 447, 450, 452, 453, 464, 477], "test": [0, 22, 24, 59, 86, 87, 96, 99, 101, 136, 141, 146, 147, 159, 201, 326, 382, 386, 387, 390, 395, 396, 397, 399, 402, 406, 407, 410, 411, 415, 422, 424, 428, 429, 436, 440, 442, 445, 449, 453, 454, 462, 468, 477, 481, 483, 485, 491, 492, 493, 494, 495, 496, 500, 507, 512, 514, 520, 533, 534, 536, 537, 538, 539, 540, 541, 542, 549], "forc": [0, 14, 19, 141, 387, 399, 453, 464, 481, 527], "overwrit": [0, 6, 38, 44, 49, 53, 101, 167, 206, 387, 391, 435, 437, 461, 464], "exist": [0, 6, 14, 19, 43, 51, 91, 92, 108, 132, 133, 134, 136, 137, 140, 141, 149, 150, 156, 159, 161, 167, 184, 191, 193, 200, 204, 311, 380, 383, 387, 390, 391, 392, 398, 406, 407, 410, 414, 415, 424, 428, 433, 435, 437, 438, 447, 453, 455, 461, 464, 468, 470, 477, 481, 492, 551], "per": [0, 19, 26, 79, 101, 147, 165, 271, 299, 303, 387, 388, 391, 402, 410, 414, 428, 431, 437, 438, 444, 449, 452, 453, 460, 464, 468, 471, 493, 537, 538, 539], "modul": [0, 1, 86, 176, 197, 383, 387, 391, 402, 406, 409, 410, 413, 422, 423, 435, 439, 445, 447, 449, 481, 533, 551], "put": [0, 99, 108, 111, 126, 132, 139, 149, 387, 395, 400, 406, 410, 422, 442, 485, 524], "output": [0, 6, 14, 19, 24, 26, 30, 46, 47, 48, 53, 54, 57, 70, 79, 101, 108, 126, 127, 141, 150, 154, 164, 165, 167, 204, 211, 220, 227, 230, 231, 236, 241, 244, 246, 247, 248, 254, 259, 261, 268, 270, 293, 303, 311, 314, 317, 319, 323, 324, 327, 329, 335, 383, 387, 391, 396, 398, 400, 406, 410, 411, 413, 419, 422, 423, 433, 434, 437, 438, 442, 444, 447, 449, 450, 451, 452, 454, 460, 468, 470, 474, 476, 477, 478, 487, 489, 492, 493, 494, 495, 496, 501, 507, 510, 511, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "sourc": [0, 2, 6, 7, 8, 9, 11, 14, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 84, 90, 91, 92, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 199, 200, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 343, 346, 347, 352, 387, 391, 392, 397, 398, 406, 415, 422, 423, 433, 444, 445, 448, 461, 468, 473, 487, 492, 510, 526, 546, 547, 548], "python": [0, 10, 17, 48, 56, 57, 80, 101, 127, 133, 136, 157, 159, 161, 164, 166, 173, 184, 200, 334, 379, 382, 383, 387, 390, 391, 392, 401, 406, 407, 408, 410, 415, 416, 422, 423, 431, 433, 435, 437, 438, 439, 442, 445, 447, 449, 452, 453, 459, 464, 481, 509, 524, 551], "want": [0, 11, 36, 44, 55, 61, 102, 106, 133, 141, 149, 150, 154, 159, 165, 187, 271, 299, 387, 388, 391, 392, 395, 397, 398, 399, 400, 407, 408, 411, 414, 415, 421, 422, 424, 427, 428, 430, 433, 434, 435, 436, 437, 438, 442, 445, 447, 449, 450, 451, 452, 453, 460, 464, 468, 469, 470, 471, 474, 476, 477, 481, 488, 492, 493, 494, 495, 496, 507, 509, 510, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "avoid": [0, 19, 49, 67, 79, 123, 125, 141, 161, 168, 191, 383, 387, 422, 428, 452, 453, 463, 468, 470, 487, 492, 501, 512, 533, 534, 538, 539, 547], "match": [0, 2, 38, 39, 40, 42, 47, 60, 62, 108, 127, 133, 134, 140, 161, 165, 167, 168, 188, 201, 290, 291, 292, 293, 294, 303, 387, 410, 413, 430, 454, 470, 476, 495, 509, 513, 539, 548, 550], "pattern": [0, 2, 38, 40, 42, 44, 47, 60, 96, 127, 132, 134, 161, 165, 201, 387, 391, 400, 413, 435, 447, 452, 454, 463, 468, 470, 477, 532, 547, 548], "refer": [0, 10, 19, 54, 136, 165, 201, 204, 210, 228, 244, 250, 254, 259, 265, 292, 293, 294, 299, 301, 322, 327, 387, 391, 392, 395, 398, 400, 407, 410, 434, 439, 461, 468, 477, 487, 492, 493, 494, 495, 496, 501, 502, 503, 510, 518, 521, 522, 523, 524, 527, 528, 529, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 545, 547, 548], "object": [0, 1, 2, 6, 7, 8, 9, 10, 14, 17, 24, 32, 37, 41, 42, 43, 44, 46, 47, 49, 53, 54, 58, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 82, 83, 84, 86, 87, 96, 97, 101, 102, 105, 106, 107, 108, 109, 110, 111, 117, 118, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141, 145, 146, 148, 149, 150, 151, 154, 156, 157, 158, 159, 163, 164, 165, 166, 167, 169, 172, 173, 174, 184, 187, 188, 189, 200, 201, 204, 205, 207, 220, 221, 222, 224, 225, 229, 232, 243, 252, 278, 282, 283, 284, 285, 287, 288, 309, 335, 338, 352, 382, 387, 391, 392, 402, 410, 419, 423, 431, 433, 436, 437, 438, 441, 470, 477, 478, 480, 509, 523, 524, 526, 527, 547, 548, 550], "plugin": [0, 2, 68, 86, 87, 101, 102, 150, 151, 165, 184, 186, 187, 188, 199, 379, 387, 392, 395, 396, 407, 410, 413, 421, 425, 428, 436, 437, 440, 445, 449, 452, 453, 459, 463, 464, 465, 468, 472, 477, 478, 479, 480, 481, 483, 492, 493, 494, 495, 496, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 547, 548, 550, 551], "class": [0, 2, 6, 7, 8, 9, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 84, 96, 97, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 169, 172, 173, 174, 184, 187, 188, 189, 192, 193, 194, 199, 200, 201, 204, 205, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 343, 346, 347, 352, 383, 387, 395, 396, 398, 399, 402, 404, 409, 410, 413, 423, 431, 432, 435, 438, 440, 450, 451, 452, 465, 468, 477, 478, 512, 548], "For": [0, 6, 19, 24, 26, 30, 38, 66, 108, 149, 169, 379, 383, 384, 386, 387, 390, 391, 395, 399, 402, 407, 410, 414, 415, 422, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 442, 444, 447, 448, 449, 452, 453, 454, 458, 459, 460, 461, 462, 464, 468, 470, 473, 474, 477, 478, 487, 492, 493, 507, 510, 520, 533, 536, 537, 538, 539, 542, 547, 548, 550], "info": [0, 8, 26, 49, 101, 105, 107, 108, 111, 120, 125, 129, 132, 133, 135, 140, 141, 150, 159, 165, 169, 187, 387, 391, 392, 395, 398, 401, 410, 415, 434, 435, 447, 450, 451, 453, 538, 539, 547, 548], "check": [0, 14, 17, 26, 30, 38, 39, 42, 55, 58, 97, 99, 101, 105, 108, 136, 137, 141, 145, 147, 149, 150, 151, 154, 161, 165, 166, 167, 173, 184, 187, 188, 189, 191, 193, 200, 243, 293, 303, 306, 311, 327, 382, 383, 387, 388, 391, 392, 395, 397, 401, 402, 406, 407, 410, 414, 415, 428, 429, 433, 435, 436, 437, 438, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 460, 461, 463, 464, 468, 470, 472, 475, 481, 487, 488, 490, 491, 492, 501, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 518, 520, 524, 528, 529, 532, 533, 535, 537, 543, 544, 549, 550], "how": [0, 66, 68, 73, 77, 103, 106, 113, 167, 169, 292, 327, 382, 383, 386, 387, 391, 392, 396, 398, 401, 405, 410, 413, 414, 415, 422, 428, 429, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 448, 450, 451, 452, 453, 460, 464, 468, 474, 480, 484, 487, 498, 501, 505, 509, 510, 513, 517, 525, 545, 547, 548], "pandoc": [0, 387], "org": [0, 3, 46, 101, 127, 143, 157, 159, 165, 201, 387, 391, 406, 444, 450, 465, 472, 481, 493, 494, 495, 496, 546], "_": [0, 19, 141, 165, 320, 321, 387, 452, 460, 470, 547, 548, 549], "convert": [0, 1, 2, 14, 51, 64, 106, 135, 136, 156, 167, 169, 197, 199, 200, 231, 254, 261, 284, 285, 288, 297, 303, 306, 314, 325, 383, 387, 402, 410, 423, 435, 441, 493, 499], "markdown": [0, 387], "md": [0, 17, 200, 204, 266, 321, 337, 387, 391, 429, 470], "custom": [0, 66, 77, 106, 117, 129, 130, 140, 159, 200, 311, 390, 396, 402, 406, 410, 414, 415, 423, 434, 435, 436, 440, 448, 451, 478, 547, 548], "css": [0, 398], "_static": 0, "connect": [0, 82, 108, 109, 133, 134, 141, 147, 150, 386, 388, 397, 406, 410, 414, 415, 428, 430, 437, 452, 455, 468, 477, 487, 491, 494, 495, 501, 505, 509, 514, 527], "do": [0, 2, 7, 19, 24, 48, 56, 57, 66, 79, 94, 118, 136, 139, 145, 150, 165, 191, 299, 311, 314, 380, 382, 387, 391, 392, 395, 396, 398, 400, 405, 406, 407, 408, 410, 414, 415, 422, 424, 425, 426, 427, 428, 430, 434, 435, 437, 438, 439, 442, 445, 449, 450, 451, 452, 453, 461, 464, 468, 470, 474, 477, 478, 481, 492, 493, 494, 495, 496, 504, 505, 506, 507, 509, 510, 512, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 551], "rm": [0, 7, 391, 402, 409, 482, 499, 509, 510, 517, 525, 527, 537], "ln": [0, 449, 459, 463], "target": [0, 79, 145, 184, 259, 276, 301, 386, 392, 422, 434, 460, 481, 507, 517, 527, 535, 538, 539], "m": [0, 3, 10, 82, 136, 143, 165, 167, 201, 271, 323, 335, 391, 400, 406, 415, 444, 445, 453, 461, 464, 481, 520, 546], "ext": [0, 19, 168], "intersphinx": 0, "inv": [0, 10], "5": [0, 6, 7, 10, 22, 39, 40, 45, 65, 101, 107, 119, 120, 122, 125, 145, 149, 167, 201, 392, 399, 406, 410, 414, 418, 423, 426, 427, 428, 430, 432, 434, 437, 447, 449, 450, 452, 455, 457, 459, 462, 468, 473, 474, 477, 478, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 546], "link": [0, 2, 19, 42, 108, 127, 140, 141, 161, 165, 167, 183, 184, 297, 311, 383, 386, 391, 392, 396, 397, 398, 400, 410, 411, 414, 422, 423, 426, 432, 448, 449, 451, 454, 459, 461, 464, 470, 481, 492, 532, 549], "other": [0, 7, 10, 17, 19, 26, 27, 29, 30, 38, 42, 47, 48, 58, 60, 75, 77, 80, 101, 102, 111, 126, 129, 130, 132, 136, 139, 140, 141, 149, 150, 159, 165, 166, 229, 234, 241, 246, 248, 268, 270, 271, 311, 335, 386, 390, 391, 392, 397, 398, 399, 403, 405, 406, 409, 413, 415, 422, 428, 429, 430, 431, 434, 437, 438, 439, 442, 444, 445, 447, 449, 451, 453, 459, 460, 463, 464, 465, 468, 470, 474, 476, 477, 481, 491, 492, 493, 494, 495, 496, 499, 504, 505, 507, 510, 511, 512, 513, 517, 520, 521, 523, 524, 528, 532, 534, 535, 536, 537, 538, 539, 544, 546, 547, 548, 549], "section": [0, 6, 7, 108, 126, 149, 150, 191, 391, 392, 397, 399, 405, 406, 407, 409, 410, 415, 428, 434, 435, 437, 441, 444, 448, 449, 450, 453, 460, 465, 468, 473, 477, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 505, 507, 509, 510, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548], "ref": [0, 157, 392], "tag": [0, 22, 105, 108, 117, 121, 126, 127, 129, 135, 139, 160, 161, 165, 188, 391, 402, 414, 415, 428, 431], "project": [0, 10, 19, 36, 40, 42, 44, 45, 46, 47, 56, 60, 65, 67, 77, 86, 87, 89, 91, 101, 104, 113, 129, 133, 150, 154, 165, 169, 172, 193, 194, 200, 201, 204, 205, 228, 233, 242, 250, 254, 257, 258, 289, 290, 291, 292, 293, 294, 295, 296, 297, 316, 322, 327, 337, 383, 386, 388, 389, 390, 391, 392, 398, 400, 401, 402, 407, 408, 410, 414, 419, 421, 423, 425, 428, 429, 434, 435, 436, 437, 442, 445, 447, 450, 453, 454, 455, 460, 471, 473, 474, 476, 477, 478, 479, 480, 481, 513, 524, 532, 544, 547, 550, 551], "newprotocol": [0, 141, 154, 392, 435, 438, 447, 452], "6": [0, 7, 10, 14, 26, 45, 56, 70, 149, 167, 201, 294, 414, 418, 422, 428, 434, 438, 449, 455, 457, 459, 462, 465, 468, 474, 477, 478, 481, 487, 488, 489, 490, 491, 492, 504, 505, 507, 508, 509, 510, 512, 513, 514, 517, 519, 520, 522, 524, 526, 527, 530, 533, 535, 536, 538, 539, 546], "although": [0, 225, 231, 259, 299, 383, 390, 391, 392, 398, 406, 414, 415, 448, 449, 473, 484, 485, 487, 488, 489, 492, 493, 494, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 520, 522, 523, 524, 525, 527, 533, 535, 538, 539, 544, 547, 549], "final": [0, 26, 51, 141, 150, 164, 184, 201, 252, 257, 258, 261, 311, 380, 391, 392, 397, 400, 405, 406, 407, 410, 414, 422, 428, 434, 435, 437, 442, 449, 453, 468, 473, 477, 479, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "thei": [0, 19, 29, 55, 57, 58, 108, 136, 150, 161, 165, 191, 201, 205, 242, 301, 328, 383, 386, 391, 392, 395, 398, 400, 401, 402, 405, 407, 410, 414, 422, 423, 427, 428, 437, 438, 441, 447, 448, 449, 452, 453, 460, 461, 465, 468, 473, 477, 481, 485, 487, 488, 489, 492, 506, 507, 509, 510, 513, 517, 519, 520, 521, 522, 525, 528, 532, 542, 544, 547, 548], "text": [0, 7, 19, 79, 87, 104, 105, 106, 107, 108, 117, 121, 123, 124, 125, 126, 128, 129, 130, 139, 141, 150, 161, 164, 165, 167, 169, 181, 184, 188, 191, 207, 391, 392, 410, 431, 435, 438, 442, 449, 453, 470, 478, 481, 483, 488, 490, 493, 500, 504, 509, 519, 524, 525, 530, 538, 539], "page_identifi": 0, "It": [0, 7, 14, 19, 23, 24, 25, 26, 36, 42, 49, 50, 53, 54, 58, 70, 99, 101, 105, 106, 107, 108, 110, 111, 115, 118, 125, 132, 133, 134, 136, 137, 141, 149, 150, 161, 165, 173, 174, 188, 200, 204, 229, 261, 299, 324, 383, 386, 387, 391, 392, 395, 397, 398, 400, 404, 406, 407, 410, 415, 421, 422, 423, 429, 430, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 447, 449, 450, 451, 456, 460, 468, 470, 473, 474, 477, 478, 479, 481, 492, 493, 494, 495, 496, 519, 527, 530, 531, 537, 538, 539, 543, 547, 548, 549, 551], "better": [0, 136, 169, 383, 387, 388, 391, 392, 395, 401, 410, 455, 468, 475, 477, 487, 489, 490, 494, 507, 509, 510, 520, 527, 535, 537, 538, 539, 546, 547, 548, 551], "7": [0, 7, 10, 45, 56, 149, 167, 201, 397, 406, 410, 414, 418, 422, 426, 428, 435, 449, 450, 457, 459, 461, 464, 468, 474, 477, 478, 481, 487, 488, 489, 490, 492, 505, 507, 508, 509, 510, 512, 513, 514, 517, 519, 520, 523, 524, 525, 526, 530, 531, 535, 537, 542, 546], "pdf": [0, 10, 55, 71, 201, 479, 546], "ha": [0, 7, 14, 19, 30, 48, 65, 67, 77, 101, 103, 106, 111, 113, 115, 125, 133, 136, 137, 141, 150, 154, 156, 166, 167, 184, 187, 193, 204, 268, 271, 291, 293, 299, 301, 311, 327, 337, 382, 383, 386, 388, 391, 392, 395, 396, 397, 398, 399, 400, 405, 406, 407, 410, 414, 415, 416, 421, 422, 423, 424, 425, 427, 428, 430, 431, 434, 435, 436, 437, 438, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 460, 463, 468, 470, 471, 474, 477, 481, 483, 485, 487, 488, 490, 492, 493, 494, 495, 496, 501, 504, 505, 506, 507, 509, 510, 513, 517, 518, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 542, 544, 546, 547, 548], "treat": [0, 19, 127, 410, 431, 447], "separ": [0, 2, 7, 19, 48, 56, 57, 58, 129, 136, 141, 149, 165, 167, 193, 252, 291, 293, 383, 386, 387, 391, 402, 409, 410, 415, 444, 445, 453, 468, 477, 481, 492, 525, 547, 548], "first": [0, 2, 6, 7, 8, 10, 17, 19, 38, 64, 66, 68, 77, 79, 92, 105, 107, 108, 109, 111, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 129, 130, 132, 136, 140, 141, 150, 158, 161, 167, 168, 173, 188, 193, 200, 244, 261, 294, 328, 383, 391, 392, 395, 398, 402, 406, 410, 414, 415, 422, 424, 428, 429, 430, 431, 432, 434, 437, 438, 439, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 462, 468, 470, 471, 473, 477, 480, 482, 485, 487, 488, 489, 490, 492, 499, 502, 504, 505, 507, 508, 509, 510, 512, 513, 520, 524, 527, 528, 530, 531, 535, 536, 542, 547, 548, 549, 550], "place": [0, 19, 42, 68, 101, 108, 136, 139, 181, 390, 391, 392, 395, 397, 406, 422, 429, 435, 437, 450, 464, 468, 470, 481, 530, 533, 547, 548], "my": [0, 415, 434, 442, 463], "Then": [0, 49, 54, 136, 271, 311, 322, 328, 383, 391, 392, 395, 400, 407, 415, 422, 425, 428, 434, 435, 442, 447, 450, 452, 453, 455, 464, 468, 469, 471, 477, 481, 487, 490, 492, 493, 494, 495, 505, 509, 511, 512, 513, 519, 520, 521, 527, 530, 532, 543, 547, 548], "rel": [0, 150, 154, 161, 200, 392, 395, 406, 487, 488, 489, 492, 493, 494, 495, 496, 502, 506, 518, 521, 522, 523, 524, 527, 528, 529, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542], "__": [0, 422], "pwem": [1, 189, 378, 391, 392, 419, 437, 447, 464, 465, 487, 489, 492, 529, 530, 531, 532, 543], "packag": [1, 3, 86, 137, 143, 150, 166, 167, 176, 183, 184, 187, 189, 197, 201, 267, 377, 378, 383, 387, 390, 391, 392, 396, 397, 402, 409, 411, 414, 415, 419, 422, 423, 424, 425, 435, 442, 454, 461, 462, 463, 464, 468, 479, 480, 481, 514, 528, 537, 538, 539, 550, 551], "subpackag": [1, 86, 176, 197], "submodul": [1, 86, 176, 197, 383], "emlib": [1, 2, 204, 391], "protocol": [1, 2, 19, 66, 67, 77, 79, 80, 86, 87, 92, 93, 95, 98, 101, 102, 107, 108, 115, 118, 119, 121, 122, 125, 126, 133, 137, 139, 140, 141, 154, 159, 161, 165, 169, 172, 174, 191, 197, 199, 200, 201, 202, 205, 335, 340, 343, 346, 347, 352, 388, 390, 396, 398, 402, 405, 407, 419, 423, 434, 436, 438, 440, 442, 445, 447, 448, 449, 450, 451, 453, 454, 460, 464, 465, 469, 470, 471, 473, 476, 478, 480, 487, 488, 489, 490, 491, 498, 499, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 545, 551], "viewer": [1, 2, 79, 86, 87, 101, 127, 137, 165, 174, 197, 199, 211, 382, 383, 396, 402, 410, 423, 430, 432, 440, 441, 464, 468, 473, 476, 477, 487, 488, 490, 492, 493, 504, 505, 509, 513, 519, 520, 526, 528, 531, 532, 533, 534, 542, 543, 547, 548, 550], "wizard": [1, 2, 11, 39, 86, 87, 101, 137, 165, 197, 199, 383, 396, 397, 402, 423, 428, 434, 441, 453, 468, 470, 477, 505, 507, 509, 512, 513, 518, 519, 520, 528, 530, 532, 534, 535, 542, 543], "bibtex": [1, 2, 87, 142, 167, 197, 199, 383, 392, 402], "constant": [1, 2, 86, 87, 104, 114, 126, 137, 142, 176, 177, 197, 199, 383, 399, 409, 437, 438, 442, 452, 533], "util": [1, 2, 5, 6, 12, 14, 16, 65, 66, 79, 86, 87, 104, 113, 114, 130, 176, 177, 197, 199, 204, 287, 290, 322, 328, 337, 390, 391, 392, 398, 406, 410, 415, 435, 437, 442, 452, 477, 546], "setup": [1, 86, 110, 111, 117, 129, 133, 137, 150, 154, 167, 176, 197, 204, 392, 396, 402, 410, 415, 422, 425, 437, 442, 445, 447, 449, 460, 515], "atom_struct": [2, 5], "header": [2, 5, 19, 108, 111, 115, 118, 384, 388, 392, 398, 435, 450, 478, 530, 532, 543], "sequenc": [2, 5, 6, 19, 21, 37, 72, 406, 410, 445, 477, 484, 485, 487, 488, 490, 492, 493, 494, 498, 501, 502, 509, 517, 520, 535, 536, 542, 545, 546], "symmetri": [2, 5, 7, 56, 68, 200, 218, 251, 389, 396, 406, 410, 479, 485, 489, 494, 502, 505, 512, 513, 519, 520, 526, 528, 532, 533, 547], "transform": [2, 5, 6, 7, 14, 19, 28, 36, 141, 165, 201, 204, 215, 217, 249, 261, 314, 323, 335, 392, 402, 493, 520, 547], "imag": [2, 3, 7, 12, 19, 20, 21, 24, 26, 27, 31, 36, 37, 41, 47, 51, 58, 60, 64, 77, 105, 107, 108, 111, 112, 117, 121, 126, 129, 130, 136, 143, 156, 161, 165, 169, 188, 200, 201, 204, 205, 213, 218, 220, 222, 224, 225, 227, 228, 232, 233, 235, 243, 244, 249, 250, 252, 259, 261, 266, 280, 284, 293, 296, 299, 300, 301, 311, 314, 317, 318, 319, 323, 324, 326, 327, 335, 382, 383, 391, 392, 399, 400, 401, 405, 407, 409, 410, 414, 415, 419, 423, 424, 425, 428, 430, 431, 432, 433, 437, 439, 440, 441, 444, 447, 449, 450, 451, 453, 457, 465, 470, 473, 477, 503, 509, 512, 513, 520, 532, 544, 550, 551], "metadata": [2, 12, 19, 26, 41, 65, 161, 173, 200, 204, 205, 211, 213, 218, 227, 235, 236, 248, 254, 259, 266, 294, 295, 311, 313, 317, 319, 326, 337, 391, 392, 423, 430, 437, 470, 547, 548], "lib": [2, 12, 181, 184, 391, 422, 435, 439, 458, 461, 464, 481], "data": [2, 6, 7, 10, 14, 18, 20, 26, 42, 43, 44, 47, 49, 53, 54, 65, 66, 67, 77, 82, 99, 101, 107, 108, 115, 117, 118, 123, 125, 129, 132, 133, 135, 136, 141, 150, 156, 159, 165, 169, 187, 201, 207, 211, 243, 252, 254, 311, 333, 334, 335, 337, 352, 388, 390, 391, 392, 395, 402, 410, 414, 415, 416, 419, 421, 423, 424, 425, 429, 430, 434, 435, 437, 444, 445, 447, 450, 451, 452, 453, 454, 457, 465, 468, 476, 477, 478, 479, 480, 485, 502, 505, 508, 509, 510, 517, 523, 524, 525, 528, 529, 532, 533, 537, 538, 539, 544, 545, 546], "data_tiltpair": [2, 18], "protocol_export": [2, 21], "protocol_import": [2, 21], "parallel": [2, 21, 145, 149, 165, 392, 399, 402, 437, 460, 464, 477, 505, 509, 538, 539], "protocol_2d": [2, 21], "protocol_3d": [2, 21], "protocol_align_movi": [2, 21], "protocol_alignment_assign": [2, 21], "protocol_alignment_inverthand": [2, 21], "protocol_batch": [2, 21, 423], "protocol_boxsize_paramet": [2, 21], "protocol_classes_selector": [2, 21], "protocol_create_stream_data": [2, 21], "protocol_ctf_assign": [2, 21], "protocol_extract_coordin": [2, 21], "protocol_mathematical_oper": [2, 21], "protocol_micrograph": [2, 21], "protocol_movie_eras": [2, 21], "protocol_movi": [2, 21], "protocol_origin_sampling_volum": [2, 21], "protocol_particl": [2, 21], "protocol_particles_pick": [2, 21], "protocol_pdf_report": [2, 21], "protocol_set_editor": [2, 21], "protocol_set_filt": [2, 21], "protocol_set": [2, 21], "protocol_test": [2, 21], "protocol_tiltpair": [2, 21], "protocol_tool": [2, 21], "filehandl": [2, 63, 105, 159], "plotter": [2, 26, 63, 87, 104, 199, 336, 423], "showj": [2, 29, 63, 77, 118, 165, 311, 382, 383, 402, 423, 464, 477, 505, 520, 526, 527, 528, 531, 532, 533, 534, 543], "viewer_bas": [2, 63, 391], "viewer_chimera": [2, 63], "viewer_fsc": [2, 63], "viewer_localr": [2, 63], "viewer_pdf": [2, 63], "viewer_sequ": [2, 63], "viewer_vmd": [2, 63], "viewer_volum": [2, 63], "viewers_data": [2, 63], "viewers_protocol": [2, 63], "view": [2, 10, 63, 68, 69, 71, 72, 73, 79, 113, 115, 118, 123, 125, 126, 141, 165, 169, 174, 188, 218, 383, 390, 391, 400, 402, 410, 414, 428, 434, 444, 449, 468, 471, 473, 477, 490, 505, 508, 509, 510, 519, 520, 531, 535, 537, 543, 547, 548], "wizards_3d": [2, 78], "relat": [2, 4, 9, 10, 19, 20, 21, 24, 25, 43, 58, 60, 80, 102, 108, 126, 132, 133, 137, 139, 141, 148, 149, 150, 161, 165, 202, 204, 215, 229, 254, 262, 290, 292, 383, 392, 396, 399, 400, 402, 406, 409, 410, 423, 427, 428, 435, 444, 447, 449, 468, 474, 477, 478, 481, 506, 507, 510, 513, 520, 525, 531, 543, 544], "base": [2, 6, 7, 8, 9, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 84, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 145, 146, 148, 149, 150, 151, 154, 156, 158, 159, 161, 163, 164, 165, 167, 168, 169, 172, 173, 174, 184, 187, 188, 189, 192, 193, 194, 197, 199, 201, 204, 205, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 340, 343, 346, 347, 352, 383, 384, 390, 391, 392, 398, 399, 400, 404, 406, 410, 422, 423, 424, 426, 427, 428, 429, 435, 442, 444, 448, 451, 452, 460, 461, 464, 471, 473, 477, 484, 487, 492, 493, 494, 495, 496, 501, 505, 506, 507, 512, 513, 520, 525, 533, 534, 535, 538, 539, 541, 546, 547, 548], "cuda_bin": [2, 184, 461, 464], "usr": [2, 414, 418, 426, 427, 428, 429, 449, 450, 458, 459, 461, 464, 481], "cuda": [2, 184, 391, 410, 414, 418, 422, 426, 427, 428, 442, 459, 461, 464, 481], "bin": [2, 26, 65, 207, 218, 387, 391, 422, 439, 442, 458, 459, 460, 461, 464, 468, 481, 548], "cuda_lib": [2, 184, 391, 461, 464], "lib64": [2, 391, 458, 459, 461, 464, 481], "em_root": [2, 463, 464], "home": [2, 68, 101, 102, 137, 161, 165, 187, 189, 387, 388, 390, 391, 405, 406, 415, 421, 422, 429, 435, 442, 444, 449, 453, 454, 460, 462, 463, 464, 481], "buildbot": [2, 101, 189, 396, 402], "devel": [2, 101, 159, 189, 386, 404, 414, 434, 436, 438, 439, 453, 459, 461, 481, 515], "scipion": [2, 3, 6, 9, 41, 45, 64, 68, 73, 77, 80, 91, 92, 99, 101, 102, 103, 126, 141, 143, 146, 150, 161, 165, 173, 199, 204, 205, 254, 377, 379, 383, 386, 388, 390, 392, 395, 398, 402, 404, 406, 407, 408, 413, 427, 428, 431, 432, 433, 435, 437, 438, 440, 445, 446, 447, 448, 450, 451, 452, 454, 456, 457, 458, 459, 460, 462, 463, 465, 468, 469, 471, 472, 473, 474, 478, 480, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545], "softwar": [2, 3, 21, 35, 101, 143, 184, 199, 201, 380, 383, 386, 391, 392, 396, 397, 406, 410, 414, 415, 418, 422, 423, 424, 428, 429, 435, 439, 442, 445, 449, 451, 455, 461, 464, 465, 468, 472, 473, 478, 480, 481, 492, 493, 494, 495, 496, 500, 504, 524, 525, 536, 537, 538, 539, 540, 541, 542, 545, 547, 548, 551], "java_hom": [2, 464], "java_max_memori": 2, "4": [2, 7, 10, 19, 26, 35, 39, 40, 45, 46, 79, 108, 147, 149, 151, 167, 201, 283, 299, 313, 335, 392, 406, 409, 410, 414, 418, 424, 426, 427, 428, 432, 434, 437, 438, 444, 447, 450, 453, 455, 457, 459, 460, 461, 462, 465, 468, 470, 473, 474, 476, 477, 478, 479, 481, 485, 487, 488, 489, 490, 491, 492, 494, 495, 496, 499, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 519, 520, 524, 527, 528, 529, 535, 536, 537, 538, 539, 541, 542, 546], "max_preview_file_s": [2, 410], "500": [2, 111, 115, 435, 468], "mpi_bindir": [2, 391, 458, 461, 464], "mpi": [2, 87, 141, 145, 147, 149, 150, 155, 165, 333, 334, 392, 399, 402, 405, 410, 437, 442, 444, 458, 461, 477, 481, 542], "gcc": [2, 459, 461, 464, 481], "openmpi": [2, 458, 459, 461, 464], "mpi_libdir": [2, 391, 458, 461, 464], "xmipp_hom": 2, "xmipp": [2, 14, 17, 26, 33, 36, 49, 64, 74, 75, 113, 199, 200, 201, 204, 205, 207, 209, 218, 223, 224, 225, 227, 230, 234, 235, 236, 237, 249, 254, 259, 261, 263, 264, 266, 284, 285, 287, 288, 291, 293, 295, 297, 303, 306, 314, 317, 319, 326, 335, 337, 338, 340, 346, 347, 352, 382, 383, 392, 401, 402, 403, 406, 419, 423, 428, 445, 461, 462, 464, 468, 470, 476, 479, 505, 526, 527, 528, 533, 534, 551], "domain": [2, 80, 101, 126, 136, 137, 140, 141, 150, 383, 400, 406, 445, 477, 485, 487, 490, 493, 494, 495, 498, 506], "classmethod": [2, 7, 14, 19, 38, 42, 50, 55, 59, 65, 68, 73, 75, 79, 80, 101, 105, 111, 113, 118, 122, 126, 134, 136, 137, 139, 141, 146, 150, 151, 154, 157, 159, 189, 199, 200, 271, 282, 283, 391, 392, 435, 442, 447], "definebinari": [2, 137, 187, 199, 391, 442], "defin": [2, 7, 19, 25, 26, 53, 70, 79, 101, 103, 108, 111, 137, 149, 150, 158, 159, 161, 164, 165, 169, 174, 193, 199, 251, 252, 286, 321, 330, 343, 383, 398, 399, 405, 406, 410, 415, 422, 423, 433, 435, 436, 441, 442, 447, 449, 452, 460, 463, 464, 468, 470, 474, 509, 519, 525, 538, 539], "binari": [2, 7, 14, 68, 137, 165, 181, 187, 188, 199, 276, 383, 409, 410, 411, 422, 442, 461, 463, 464, 470, 474, 505, 527, 534, 538, 539, 547, 549], "given": [2, 6, 14, 17, 19, 26, 38, 39, 41, 44, 53, 54, 55, 56, 61, 64, 66, 79, 80, 105, 108, 111, 127, 129, 132, 133, 136, 137, 139, 140, 141, 149, 150, 154, 156, 160, 161, 162, 165, 167, 168, 169, 172, 173, 174, 184, 187, 188, 200, 204, 205, 218, 220, 226, 236, 243, 246, 261, 262, 266, 268, 270, 273, 276, 279, 280, 281, 294, 297, 303, 304, 305, 306, 307, 309, 321, 323, 331, 335, 383, 391, 398, 399, 406, 410, 421, 423, 424, 442, 447, 453, 455, 476, 487, 498, 513, 525, 526, 537, 547, 548], "environ": [2, 7, 38, 62, 68, 73, 79, 101, 132, 137, 150, 160, 161, 162, 167, 168, 169, 174, 184, 187, 199, 200, 304, 383, 387, 391, 397, 406, 407, 408, 410, 416, 422, 424, 425, 438, 439, 442, 445, 446, 450, 453, 460, 461, 524], "definebinariesmaxit": 2, "default": [2, 6, 7, 17, 19, 26, 62, 64, 65, 68, 69, 71, 72, 73, 84, 101, 105, 106, 107, 108, 109, 110, 113, 117, 120, 122, 126, 127, 129, 130, 132, 133, 136, 137, 139, 140, 141, 145, 149, 150, 156, 159, 164, 165, 167, 168, 169, 184, 187, 188, 191, 200, 204, 234, 265, 271, 324, 337, 388, 391, 392, 395, 397, 398, 400, 405, 409, 410, 414, 415, 416, 422, 423, 426, 428, 433, 434, 435, 437, 442, 444, 445, 449, 452, 453, 455, 460, 461, 463, 464, 468, 470, 473, 474, 477, 478, 481, 487, 488, 492, 493, 504, 505, 507, 509, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 547, 548, 549, 550], "getmaxitbin": 2, "getmaxithom": 2, "getversionfrompath": 2, "path": [2, 7, 14, 29, 31, 38, 43, 47, 51, 62, 67, 77, 87, 96, 99, 100, 101, 105, 107, 108, 111, 117, 118, 121, 122, 126, 127, 129, 136, 137, 140, 141, 146, 149, 150, 154, 155, 159, 166, 167, 168, 173, 183, 184, 188, 191, 194, 195, 200, 206, 311, 387, 391, 395, 405, 407, 408, 409, 413, 415, 422, 423, 428, 429, 435, 436, 437, 439, 442, 445, 447, 449, 450, 452, 453, 458, 460, 461, 462, 463, 464, 470, 478, 481, 513, 515, 529, 530, 531, 532, 544, 547, 548, 549], "none": [2, 6, 7, 8, 11, 14, 17, 19, 20, 26, 32, 36, 38, 45, 51, 64, 65, 66, 67, 68, 70, 75, 77, 79, 82, 96, 99, 101, 105, 106, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 145, 147, 149, 150, 151, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 184, 187, 188, 191, 192, 193, 200, 204, 207, 222, 229, 234, 249, 262, 271, 275, 311, 313, 335, 337, 392, 398, 416, 435, 447, 449, 450, 452, 464, 534, 535], "resolv": [2, 150, 193, 299, 400, 468, 501], "realpath": [2, 140], "return": [2, 6, 7, 8, 9, 10, 11, 14, 17, 19, 26, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 51, 58, 59, 62, 64, 66, 68, 70, 73, 75, 77, 79, 80, 84, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 117, 120, 121, 122, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 145, 146, 149, 150, 151, 153, 154, 156, 157, 158, 161, 162, 164, 165, 166, 167, 168, 169, 174, 181, 183, 184, 187, 188, 189, 191, 193, 194, 195, 199, 200, 204, 205, 207, 229, 240, 241, 246, 248, 261, 270, 283, 300, 311, 313, 323, 324, 335, 386, 391, 392, 409, 430, 435, 437, 442, 447, 449, 450, 452, 460, 547, 548], "after": [2, 19, 79, 101, 107, 108, 111, 117, 133, 145, 147, 150, 153, 154, 165, 167, 184, 193, 261, 387, 392, 397, 399, 400, 401, 402, 405, 406, 407, 410, 416, 425, 429, 430, 435, 436, 437, 439, 442, 444, 445, 447, 450, 452, 453, 462, 468, 473, 474, 477, 478, 480, 487, 489, 490, 491, 492, 493, 494, 495, 496, 505, 506, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 551], "If": [2, 6, 14, 19, 42, 57, 66, 68, 77, 79, 101, 106, 108, 109, 125, 127, 129, 130, 132, 133, 134, 136, 137, 140, 141, 145, 149, 150, 154, 158, 159, 161, 165, 167, 168, 169, 184, 187, 188, 193, 204, 205, 271, 297, 310, 311, 324, 386, 388, 392, 395, 396, 397, 398, 399, 400, 401, 403, 405, 407, 409, 414, 415, 419, 421, 422, 424, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 439, 442, 444, 445, 447, 449, 450, 451, 452, 453, 456, 460, 461, 463, 464, 468, 470, 471, 473, 474, 476, 477, 481, 487, 492, 493, 494, 495, 496, 504, 506, 507, 509, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550], "present": [2, 6, 17, 58, 80, 101, 137, 161, 167, 200, 201, 204, 243, 311, 383, 388, 391, 395, 406, 407, 422, 430, 433, 434, 435, 436, 437, 438, 439, 441, 442, 451, 455, 457, 464, 468, 479, 480, 488, 492, 503, 537, 538, 539, 547, 551], "paramet": [2, 6, 11, 14, 19, 20, 26, 30, 42, 47, 49, 58, 60, 61, 62, 66, 67, 68, 77, 79, 80, 91, 105, 108, 122, 126, 129, 133, 136, 137, 139, 141, 145, 149, 150, 154, 159, 161, 162, 164, 167, 168, 169, 174, 184, 187, 188, 189, 191, 209, 210, 213, 234, 243, 251, 254, 266, 271, 297, 311, 383, 387, 388, 391, 395, 396, 398, 402, 405, 406, 409, 410, 413, 415, 422, 423, 429, 430, 433, 434, 435, 436, 437, 439, 441, 444, 445, 447, 449, 452, 453, 464, 468, 470, 477, 492, 493, 494, 495, 496, 503, 504, 505, 509, 510, 513, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "string": [2, 6, 7, 10, 14, 17, 30, 48, 68, 77, 79, 101, 105, 107, 108, 111, 115, 117, 118, 119, 120, 121, 125, 126, 127, 129, 133, 135, 136, 137, 141, 147, 149, 150, 162, 164, 167, 168, 169, 174, 187, 188, 193, 199, 204, 292, 294, 383, 391, 392, 395, 399, 410, 413, 430, 434, 437, 438, 442, 453, 460, 507, 508, 522, 523, 538, 539], "its": [2, 7, 29, 46, 57, 62, 68, 73, 105, 107, 108, 122, 133, 136, 137, 139, 140, 141, 149, 150, 156, 165, 199, 204, 228, 230, 250, 261, 299, 311, 322, 383, 390, 391, 392, 395, 396, 397, 405, 406, 408, 410, 415, 419, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 437, 439, 441, 442, 444, 445, 450, 452, 453, 462, 464, 468, 471, 472, 473, 477, 480, 481, 484, 485, 487, 488, 490, 492, 502, 504, 508, 509, 510, 511, 512, 513, 518, 519, 520, 523, 528, 530, 532, 537, 538, 539, 542, 546, 547, 548, 549], "name": [2, 6, 7, 8, 19, 26, 29, 47, 55, 64, 66, 70, 77, 79, 80, 91, 101, 105, 106, 107, 108, 111, 112, 115, 117, 121, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 145, 146, 148, 149, 150, 154, 156, 157, 158, 161, 163, 165, 166, 167, 168, 169, 184, 187, 188, 189, 191, 192, 193, 199, 200, 204, 207, 383, 388, 395, 397, 398, 399, 410, 414, 415, 416, 419, 422, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 449, 450, 452, 453, 460, 462, 463, 464, 468, 470, 471, 473, 474, 477, 487, 492, 493, 494, 495, 496, 507, 508, 509, 510, 511, 513, 514, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "option": [2, 14, 24, 26, 38, 59, 62, 75, 101, 105, 107, 108, 111, 112, 117, 120, 121, 125, 126, 127, 129, 130, 137, 139, 140, 141, 150, 159, 168, 184, 188, 395, 397, 398, 407, 408, 410, 413, 414, 415, 422, 426, 427, 428, 434, 435, 436, 438, 441, 444, 445, 448, 449, 452, 453, 455, 460, 461, 462, 464, 468, 470, 473, 474, 476, 477, 478, 481, 487, 488, 489, 490, 492, 493, 505, 506, 509, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 535, 537, 538, 539, 543, 547, 548], "x": [2, 7, 10, 14, 19, 56, 65, 84, 106, 110, 111, 113, 123, 125, 136, 139, 164, 165, 167, 201, 204, 222, 308, 321, 323, 335, 337, 391, 406, 409, 415, 432, 442, 447, 457, 459, 460, 462, 468, 470, 473, 478, 481, 487, 492, 493, 494, 495, 496, 502, 504, 506, 509, 510, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548, 549], "y": [2, 6, 7, 10, 14, 19, 56, 65, 84, 99, 101, 106, 110, 111, 113, 123, 125, 136, 139, 165, 167, 201, 204, 222, 308, 321, 323, 335, 337, 380, 391, 406, 409, 422, 432, 442, 460, 461, 464, 468, 470, 473, 481, 487, 492, 493, 494, 495, 496, 504, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548], "found": [2, 19, 108, 127, 133, 137, 147, 149, 150, 161, 165, 167, 168, 184, 193, 200, 205, 261, 262, 391, 392, 395, 396, 398, 400, 406, 410, 414, 415, 425, 427, 428, 435, 436, 438, 442, 444, 445, 448, 453, 459, 461, 468, 470, 477, 480, 487, 492, 493, 506, 507, 524, 525, 531, 535, 536, 538, 539, 541, 543, 547, 548, 549], "pass": [2, 17, 19, 48, 53, 66, 67, 77, 79, 105, 108, 112, 117, 121, 126, 129, 130, 132, 133, 136, 137, 139, 141, 145, 149, 150, 154, 161, 164, 165, 167, 173, 184, 187, 191, 193, 242, 386, 392, 410, 413, 415, 422, 430, 433, 435, 437, 452, 453, 464, 547, 548], "locat": [2, 14, 19, 36, 101, 140, 167, 204, 261, 311, 383, 391, 395, 397, 405, 406, 407, 414, 421, 429, 434, 436, 437, 439, 444, 447, 450, 452, 453, 461, 463, 464, 468, 470, 471, 485, 492, 493, 494, 495, 496, 507, 508, 509, 512, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 547, 548], "fill": [2, 14, 19, 42, 107, 108, 133, 188, 204, 243, 293, 392, 408, 428, 437, 449, 452, 453, 464, 468, 484, 487, 488, 489, 490, 491, 504, 505, 507, 508, 509, 510, 513, 519, 527, 534, 542, 547, 548], "getversionfromvari": 2, "variabl": [2, 6, 68, 73, 101, 108, 125, 130, 136, 137, 150, 154, 159, 161, 167, 168, 191, 200, 383, 388, 392, 395, 407, 408, 410, 422, 429, 430, 434, 437, 439, 442, 445, 447, 449, 450, 453, 460, 461, 463, 481, 509, 514, 520, 524, 533], "instanc": [2, 132, 137, 141, 150, 154, 169, 204, 392, 406, 415, 429, 430, 431, 435, 447, 449, 452, 453, 455, 460, 464, 487, 517], "pars": [2, 6, 17, 62, 80, 127, 150, 167, 207, 391, 402, 410, 438, 444, 453, 460], "valu": [2, 6, 7, 11, 14, 17, 19, 20, 30, 32, 33, 41, 43, 44, 47, 49, 52, 53, 54, 56, 57, 58, 62, 65, 66, 68, 77, 79, 101, 105, 106, 107, 108, 111, 112, 113, 117, 121, 122, 126, 127, 129, 130, 133, 135, 136, 137, 139, 141, 149, 150, 151, 154, 156, 159, 161, 164, 165, 166, 167, 169, 173, 174, 184, 187, 188, 191, 193, 200, 204, 205, 212, 218, 228, 230, 234, 236, 241, 246, 248, 250, 261, 292, 294, 298, 299, 301, 304, 311, 313, 323, 335, 346, 347, 383, 391, 392, 399, 406, 409, 410, 415, 423, 430, 431, 434, 436, 437, 438, 439, 442, 444, 447, 448, 450, 451, 452, 453, 460, 464, 468, 487, 488, 489, 490, 492, 493, 494, 495, 496, 505, 507, 509, 510, 511, 512, 514, 517, 518, 519, 520, 524, 525, 526, 527, 531, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 547, 548], "guesscudavers": 2, "10": [2, 3, 7, 48, 56, 57, 62, 77, 79, 101, 110, 119, 120, 143, 149, 167, 201, 391, 406, 411, 414, 426, 427, 428, 430, 435, 436, 439, 457, 459, 461, 462, 464, 465, 468, 474, 477, 481, 487, 489, 491, 492, 495, 499, 505, 508, 509, 510, 513, 517, 524, 525, 526, 528, 537, 546, 547], "1": [2, 3, 6, 7, 9, 10, 14, 17, 19, 26, 38, 39, 40, 44, 45, 46, 47, 56, 57, 58, 65, 68, 70, 79, 80, 101, 102, 105, 106, 107, 108, 111, 113, 115, 118, 119, 120, 121, 122, 125, 127, 130, 133, 136, 139, 140, 141, 143, 145, 147, 149, 150, 151, 154, 159, 160, 161, 162, 163, 164, 167, 181, 188, 193, 201, 204, 227, 229, 231, 236, 258, 260, 261, 262, 271, 276, 279, 282, 283, 287, 294, 299, 304, 310, 311, 313, 328, 335, 337, 346, 347, 391, 392, 398, 399, 400, 405, 406, 409, 413, 414, 415, 419, 424, 426, 427, 428, 432, 434, 435, 437, 438, 447, 449, 452, 453, 455, 457, 459, 460, 462, 463, 464, 470, 473, 477, 478, 479, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546], "guess": [2, 65, 113, 201, 296, 337, 388, 400, 422, 430, 547, 548], "findfolderwithpattern": 2, "right": [2, 7, 10, 26, 27, 42, 55, 79, 105, 106, 115, 118, 120, 125, 147, 149, 165, 184, 188, 222, 313, 387, 391, 392, 399, 400, 407, 410, 414, 423, 426, 427, 428, 434, 435, 436, 442, 445, 450, 453, 468, 470, 471, 473, 474, 477, 478, 489, 491, 492, 493, 494, 495, 496, 505, 507, 508, 509, 510, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "search": [2, 59, 96, 107, 111, 119, 120, 129, 137, 141, 149, 156, 161, 165, 168, 173, 183, 201, 391, 392, 406, 407, 410, 413, 422, 435, 436, 442, 449, 454, 468, 477, 492, 499, 531, 535, 539, 541, 543, 545, 546, 547], "look": [2, 106, 129, 136, 161, 193, 392, 395, 396, 397, 400, 403, 414, 415, 419, 422, 423, 428, 430, 432, 433, 434, 435, 437, 438, 439, 441, 442, 445, 450, 460, 461, 463, 464, 468, 470, 477, 479, 487, 488, 489, 492, 493, 494, 495, 496, 509, 520, 526, 529, 531, 532, 535, 537, 539, 542, 543, 547, 548], "No": [2, 165, 329, 380, 383, 392, 398, 419, 425, 439, 492, 509, 512, 513, 518, 519, 520, 525, 527, 532, 533, 534, 535, 539, 541, 542, 543, 544, 547, 548], "regex": [2, 149], "now": [2, 19, 53, 133, 147, 150, 167, 390, 391, 397, 399, 400, 402, 403, 407, 408, 410, 415, 422, 425, 430, 434, 435, 436, 437, 439, 442, 445, 450, 453, 462, 468, 470, 471, 472, 474, 481, 506, 507, 509, 547, 548, 550], "articl": [3, 143, 157, 201, 391, 432], "delarosatrevin201693": [3, 143], "titl": [3, 65, 77, 105, 107, 108, 111, 112, 113, 115, 117, 118, 119, 120, 121, 124, 125, 127, 143, 151, 169, 188, 193, 201, 337, 384, 391, 398, 434, 435, 437, 450, 490, 531, 543], "A": [3, 6, 10, 19, 22, 24, 27, 54, 68, 105, 107, 108, 117, 121, 126, 129, 130, 137, 139, 140, 143, 147, 150, 156, 158, 161, 164, 165, 166, 169, 187, 188, 200, 201, 225, 265, 316, 337, 383, 391, 392, 398, 400, 406, 410, 414, 415, 419, 422, 423, 424, 425, 434, 435, 436, 438, 439, 441, 442, 445, 448, 449, 453, 455, 457, 460, 461, 464, 465, 468, 471, 477, 478, 479, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548], "framework": [3, 143, 300, 383, 391, 392, 396, 406, 410, 441, 448, 451, 457, 468, 485, 487, 489, 492, 493, 494, 495, 496, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 541, 542, 543, 545, 547, 548, 549, 551], "toward": [3, 143, 244, 406, 410, 477, 547, 548], "integr": [3, 143, 383, 396, 397, 402, 408, 410, 424, 428, 429, 447, 448, 457, 463, 468, 476, 524, 525, 536, 537, 538, 539, 540, 551], "reproduc": [3, 42, 143, 150, 201, 383, 406, 410, 470, 551], "valid": [3, 19, 41, 58, 103, 105, 106, 107, 108, 112, 117, 123, 124, 125, 127, 130, 133, 136, 143, 149, 150, 151, 161, 184, 188, 192, 193, 200, 201, 205, 212, 266, 286, 321, 327, 330, 383, 386, 391, 395, 402, 406, 410, 437, 438, 439, 447, 459, 465, 477, 492, 499, 501, 509, 511, 512, 513, 524, 530, 536, 537, 539, 545, 546, 550], "3d": [3, 10, 14, 19, 36, 45, 47, 52, 82, 83, 84, 143, 164, 201, 204, 211, 228, 250, 254, 271, 278, 281, 294, 296, 298, 299, 301, 327, 383, 391, 402, 410, 451, 453, 457, 468, 478, 479, 484, 487, 498, 502, 503, 504, 509, 510, 513, 519, 520, 521, 522, 524, 525, 534, 545, 547, 550, 551], "electron": [3, 143, 165, 201, 383, 391, 401, 410, 419, 424, 428, 437, 451, 457, 468, 470, 480, 484, 485, 494, 495, 496, 500, 501, 502, 509, 513, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 551], "microscopi": [3, 143, 201, 383, 391, 401, 419, 424, 428, 437, 451, 457, 470, 485, 500, 502, 532, 546, 551], "journal": [3, 143, 201, 391, 406, 513], "structur": [3, 6, 35, 47, 80, 83, 107, 143, 201, 204, 240, 245, 252, 296, 302, 320, 321, 383, 391, 401, 403, 407, 410, 424, 431, 432, 449, 457, 468, 481, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 505, 509, 511, 512, 513, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548], "biologi": [3, 143, 201, 401, 424, 457, 502, 528], "volum": [3, 7, 14, 19, 21, 25, 35, 36, 37, 52, 56, 58, 68, 74, 84, 143, 156, 165, 200, 201, 204, 209, 210, 215, 228, 231, 233, 244, 245, 250, 254, 256, 265, 274, 276, 279, 281, 282, 283, 284, 285, 287, 288, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 315, 318, 322, 326, 328, 329, 330, 331, 332, 382, 383, 391, 395, 402, 406, 410, 414, 423, 432, 433, 446, 451, 464, 468, 477, 484, 485, 489, 492, 493, 494, 495, 496, 501, 502, 503, 505, 506, 508, 509, 510, 512, 513, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550], "195": [3, 143], "number": [3, 6, 7, 11, 14, 17, 19, 30, 31, 55, 57, 62, 65, 77, 79, 80, 101, 113, 133, 136, 137, 141, 143, 145, 149, 150, 156, 161, 164, 165, 167, 188, 201, 204, 220, 226, 252, 259, 271, 311, 324, 327, 337, 383, 386, 391, 392, 405, 406, 410, 414, 415, 423, 430, 434, 437, 438, 439, 442, 444, 449, 450, 451, 453, 455, 460, 462, 468, 473, 474, 476, 477, 478, 485, 487, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 544, 547, 548], "93": [3, 143, 517], "99": [3, 143, 201, 406, 435], "year": [3, 143, 201, 391, 406, 410, 411, 492], "2016": [3, 143, 201, 400, 415], "issn": [3, 143, 201, 391], "1047": [3, 143, 201, 391], "8477": [3, 143, 201, 391], "doi": [3, 143, 201, 391, 465, 546], "1016": [3, 143, 201, 391], "j": [3, 10, 19, 143, 201, 320, 321, 390, 391, 398, 406, 460, 461, 462, 481, 519, 546], "jsb": [3, 143, 201, 391], "04": [3, 143, 201, 391, 414, 418, 426, 427, 428, 461, 499, 546], "010": [3, 143, 391], "url": [3, 46, 47, 99, 101, 102, 103, 137, 143, 154, 169, 173, 184, 187, 188, 201, 388, 390, 391, 395, 400, 410, 414, 415, 421, 422, 425, 427, 428, 437, 442, 448, 449, 450, 451, 473, 474, 546], "www": [3, 10, 46, 143, 157, 201, 391, 406, 410, 437, 472, 475, 519, 546], "sciencedirect": [3, 143, 201, 391], "com": [3, 10, 127, 130, 143, 166, 201, 276, 306, 382, 387, 391, 395, 397, 400, 404, 410, 415, 427, 434, 435, 436, 438, 439, 442, 449, 461, 462, 475, 549], "scienc": [3, 143, 201, 383, 391, 406, 424, 425, 457, 546], "pii": [3, 143, 201, 391], "s104784771630079x": [3, 143], "author": [3, 10, 143, 153, 187, 201, 391, 400, 406, 437, 474, 482, 499], "de": [3, 141, 143, 159, 201, 380, 391, 447, 449, 450, 477, 501, 506, 507, 516, 546], "la": [3, 143, 201, 380, 546], "rosa": [3, 143, 201, 546], "trev\u00edn": [3, 143, 201], "quintana": [3, 143, 201], "l": [3, 143, 201, 391, 395, 403, 406, 449, 460, 477, 519, 546], "del": [3, 143, 201, 380, 406, 424, 509], "cano": [3, 143, 201], "zald\u00edvar": [3, 143, 201], "foch": [3, 143, 201], "guti\u00e9rrez": [3, 143], "g\u00f3mez": [3, 143, 201], "blanco": [3, 143, 201, 546], "burguet": [3, 143], "castel": [3, 143], "cuenca": [3, 143, 201, 546], "alba": [3, 143, 406], "v": [3, 10, 122, 136, 143, 201, 251, 311, 395, 406, 451, 460, 475, 483, 510, 514, 525, 537, 538, 539, 546, 547, 548], "abrishami": [3, 143, 201, 479], "varga": [3, 143, 201, 546], "ot\u00f3n": [3, 143, 201], "sharov": [3, 143], "vila": [3, 143, 201, 503, 505, 534, 546], "nava": [3, 143, 201], "p": [3, 10, 143, 201, 323, 335, 391, 404, 406, 408, 419, 421, 429, 434, 436, 438, 439, 453, 460, 461, 462, 463, 464, 481, 536, 546, 549], "conesa": [3, 143, 201, 546], "kazemi": [3, 143, 201], "marabini": [3, 143, 153, 201, 406, 546], "c": [3, 10, 45, 108, 117, 125, 126, 129, 143, 150, 161, 201, 252, 321, 333, 379, 382, 391, 406, 409, 423, 430, 459, 461, 477, 481, 485, 487, 488, 490, 492, 493, 507, 509, 510, 511, 512, 517, 518, 519, 520, 526, 529, 530, 535, 537, 538, 539, 546, 547, 548], "": [3, 7, 10, 19, 80, 101, 102, 105, 108, 117, 121, 126, 129, 130, 133, 136, 137, 140, 141, 143, 145, 156, 157, 164, 165, 167, 168, 184, 187, 188, 201, 204, 207, 242, 252, 266, 271, 311, 379, 383, 387, 388, 391, 392, 395, 399, 400, 406, 407, 409, 410, 413, 415, 422, 429, 430, 434, 435, 436, 437, 439, 441, 442, 444, 445, 447, 449, 450, 452, 455, 459, 460, 462, 463, 464, 468, 471, 481, 482, 487, 492, 499, 505, 507, 509, 519, 520, 521, 524, 525, 527, 528, 529, 530, 531, 532, 535, 546, 547, 548], "sorzano": [3, 143, 201, 406, 546], "carazo": [3, 143, 201, 406, 546], "keyword": [3, 65, 67, 143, 145, 149, 201, 207, 391, 392, 409, 445, 450, 468], "singl": [3, 8, 24, 26, 107, 133, 136, 137, 143, 156, 161, 165, 169, 201, 229, 383, 386, 391, 406, 409, 410, 415, 428, 429, 430, 431, 437, 449, 451, 453, 457, 460, 462, 464, 468, 477, 478, 479, 487, 493, 494, 495, 500, 501, 510, 511, 513, 530, 539, 547, 548], "particl": [3, 19, 20, 21, 24, 27, 28, 30, 32, 33, 36, 37, 41, 51, 53, 54, 56, 57, 58, 143, 165, 201, 204, 205, 210, 211, 212, 215, 218, 219, 221, 224, 226, 227, 230, 235, 241, 242, 243, 244, 246, 247, 248, 254, 255, 256, 257, 266, 268, 269, 270, 271, 272, 275, 279, 282, 283, 284, 285, 287, 294, 296, 297, 299, 301, 309, 311, 312, 313, 314, 317, 319, 322, 326, 327, 346, 382, 383, 391, 392, 395, 403, 406, 423, 430, 447, 451, 453, 457, 468, 477, 478, 479, 480, 500, 501], "analysi": [3, 143, 201, 391, 406, 410, 424, 425, 444, 445, 448, 457, 468, 477, 478, 479, 501, 509, 512, 513, 524, 536, 537, 538, 539, 546, 550], "process": [3, 24, 25, 38, 42, 51, 58, 87, 107, 108, 117, 127, 129, 143, 145, 147, 150, 155, 159, 164, 165, 167, 184, 188, 201, 242, 243, 276, 288, 295, 299, 311, 383, 388, 391, 392, 397, 399, 402, 410, 419, 422, 423, 424, 425, 428, 435, 437, 444, 445, 449, 452, 453, 455, 457, 469, 470, 473, 474, 477, 478, 480, 484, 485, 487, 489, 490, 492, 494, 495, 496, 498, 501, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513, 516, 517, 520, 523, 524, 525, 526, 527, 530, 532, 533, 537, 538, 539, 541, 542, 546, 547, 548, 551], "workflow": [3, 20, 42, 125, 141, 142, 143, 144, 150, 165, 172, 173, 193, 194, 201, 383, 392, 400, 402, 410, 414, 415, 419, 422, 424, 428, 440, 447, 451, 455, 468, 479, 480, 487, 488, 489, 490, 491, 494, 498, 500, 504, 505, 507, 508, 510, 511, 513, 517, 520, 524, 525, 543, 545, 547, 548, 551], "atomicstructhandl": 6, "filenam": [6, 7, 8, 14, 17, 19, 20, 26, 38, 40, 42, 44, 47, 60, 64, 65, 67, 77, 83, 84, 101, 105, 111, 112, 122, 127, 135, 136, 141, 149, 150, 154, 156, 161, 167, 200, 204, 205, 303, 306, 311, 392, 437, 444], "permiss": [6, 383, 397, 398, 415, 429, 449], "handl": [6, 66, 68, 107, 117, 118, 127, 133, 134, 140, 141, 159, 162, 167, 207, 391, 392, 395, 399, 402, 410, 447, 449, 477, 479, 488, 494, 547, 548], "pdb": [6, 19, 35, 47, 68, 73, 216, 231, 303, 328, 406, 410, 432, 485, 487, 492, 494, 495, 496, 502, 506, 507, 509, 510, 512, 513, 520, 524, 529, 530, 535, 542, 544, 545, 546], "cif": [6, 35, 47, 507, 509, 510, 512, 513, 520, 521, 522, 523, 529, 544], "addstruct": 6, "secondpdbfilenam": 6, "outpdbfilenam": 6, "usemodel": [6, 200], "fals": [6, 7, 14, 17, 19, 20, 22, 26, 47, 51, 57, 58, 66, 77, 99, 101, 105, 106, 107, 109, 111, 112, 113, 117, 123, 125, 126, 127, 132, 133, 135, 136, 137, 139, 141, 147, 149, 150, 153, 154, 159, 161, 166, 167, 184, 187, 189, 191, 193, 200, 204, 261, 272, 294, 311, 313, 388, 391, 392, 422, 430, 435, 436, 447, 449, 452, 453, 460, 461, 464, 468, 492, 493, 494, 495, 496, 518, 520, 521, 522, 523, 524, 525, 529, 535, 541, 542], "join": [6, 58, 101, 154, 161, 391, 401, 409, 410, 435, 437, 450, 464, 469, 511, 528], "second": [6, 19, 66, 77, 101, 127, 136, 137, 141, 145, 153, 163, 167, 168, 261, 328, 383, 391, 392, 397, 398, 400, 406, 407, 410, 415, 424, 432, 434, 437, 439, 442, 448, 452, 453, 454, 460, 468, 485, 487, 490, 494, 505, 507, 508, 509, 513, 517, 520, 524, 528, 535, 542, 547, 548], "cheon": 6, "nume": 6, "same": [6, 10, 14, 17, 19, 58, 79, 80, 94, 99, 111, 130, 133, 136, 137, 141, 149, 150, 165, 166, 174, 188, 191, 200, 204, 234, 261, 262, 270, 271, 293, 322, 383, 387, 392, 397, 400, 406, 410, 416, 422, 428, 430, 431, 434, 437, 438, 439, 441, 447, 449, 450, 451, 452, 453, 464, 465, 468, 471, 474, 476, 478, 480, 487, 491, 492, 504, 505, 507, 509, 510, 511, 519, 520, 522, 523, 525, 527, 528, 532, 533, 535, 537, 538, 539, 544, 547, 548, 549], "renam": [6, 149, 165, 410, 434, 442, 468, 507, 535], "id": [6, 10, 17, 19, 38, 44, 47, 53, 58, 82, 108, 120, 129, 132, 133, 135, 136, 140, 141, 150, 156, 158, 162, 165, 222, 243, 311, 323, 383, 396, 399, 401, 402, 405, 410, 415, 418, 430, 431, 434, 436, 437, 439, 444, 449, 450, 460, 477, 485, 487, 489, 492, 507, 508, 509, 511, 512, 520, 524, 527, 529, 530, 532, 535, 538, 539], "provid": [6, 14, 38, 48, 56, 77, 79, 101, 103, 105, 106, 107, 108, 111, 113, 115, 118, 119, 120, 121, 125, 127, 129, 130, 145, 150, 151, 156, 161, 164, 167, 169, 173, 188, 193, 200, 201, 220, 225, 259, 265, 303, 337, 383, 386, 391, 392, 395, 396, 398, 399, 400, 405, 406, 410, 413, 414, 415, 419, 421, 422, 423, 425, 428, 434, 435, 436, 437, 439, 442, 445, 447, 450, 451, 460, 461, 464, 468, 470, 473, 476, 477, 479, 481, 487, 492, 500, 507, 510, 513, 522, 525, 526, 527, 535, 547, 548, 549, 550], "struct": [6, 35, 406, 542, 546], "save": [6, 7, 8, 14, 47, 77, 108, 150, 154, 165, 311, 329, 346, 347, 383, 391, 392, 398, 410, 437, 439, 442, 449, 451, 452, 453, 455, 477, 478, 487, 492, 501, 503, 507, 508, 509, 510, 511, 512, 513, 518, 520, 521, 522, 523, 524, 531, 535, 537, 538, 539, 544, 547], "centerofmass": 6, "geometr": [6, 14, 213, 218, 278, 280, 281, 406, 468, 505, 520, 525, 526, 528], "graviti": [6, 547, 548], "center": [6, 9, 19, 57, 68, 84, 106, 111, 165, 219, 232, 314, 335, 406, 410, 424, 425, 432, 457, 468, 470, 473, 509, 512, 513, 519, 520, 526, 528, 532, 533, 537, 538, 539, 547, 548], "mass": [6, 84, 406, 410, 526], "an": [6, 7, 10, 14, 17, 19, 25, 30, 38, 42, 43, 44, 46, 47, 48, 49, 53, 57, 58, 64, 65, 67, 68, 72, 73, 80, 83, 101, 103, 105, 107, 108, 109, 117, 118, 122, 126, 127, 129, 130, 132, 133, 135, 136, 137, 139, 141, 146, 147, 149, 150, 154, 156, 157, 158, 159, 161, 165, 167, 168, 169, 184, 187, 188, 199, 200, 201, 204, 212, 215, 218, 238, 252, 261, 262, 268, 284, 285, 294, 296, 299, 301, 303, 313, 317, 319, 322, 335, 337, 352, 383, 386, 388, 390, 391, 392, 395, 397, 398, 399, 401, 402, 405, 406, 407, 409, 410, 414, 415, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 436, 437, 438, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 456, 460, 461, 462, 463, 464, 465, 468, 470, 473, 474, 477, 478, 479, 481, 484, 485, 487, 492, 493, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 541, 542, 547, 548, 551], "entiti": [6, 468], "anyth": [6, 145, 422, 435, 437, 464, 507, 508, 524], "get_atom": 6, "function": [6, 7, 10, 11, 14, 17, 19, 23, 33, 38, 39, 42, 49, 53, 54, 55, 65, 67, 68, 79, 105, 106, 107, 108, 109, 110, 111, 115, 117, 120, 121, 125, 126, 127, 129, 130, 132, 133, 136, 137, 141, 145, 147, 149, 150, 154, 155, 157, 161, 165, 166, 167, 169, 173, 184, 187, 191, 194, 199, 200, 201, 204, 229, 234, 259, 283, 292, 295, 299, 300, 335, 343, 379, 383, 391, 396, 397, 398, 399, 405, 406, 408, 410, 422, 423, 433, 434, 435, 442, 445, 447, 449, 450, 452, 465, 468, 477, 490, 492, 496, 499, 509, 524, 525, 530, 536, 547, 550], "biopython": [6, 8, 19], "assum": [6, 124, 150, 167, 299, 391, 395, 407, 414, 421, 422, 425, 428, 430, 439, 445, 449, 454, 468, 506, 509, 510, 536], "equal": [6, 14, 62, 83, 84, 99, 136, 149, 154, 156, 164, 200, 328, 392, 519, 525, 528, 547, 548], "true": [6, 8, 10, 14, 19, 20, 30, 36, 39, 48, 57, 58, 59, 62, 64, 66, 68, 69, 70, 84, 99, 101, 105, 106, 107, 108, 109, 111, 112, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 129, 130, 132, 133, 136, 137, 139, 140, 141, 149, 150, 154, 156, 158, 159, 161, 163, 164, 166, 167, 168, 184, 187, 188, 189, 191, 193, 199, 200, 204, 206, 260, 261, 268, 272, 311, 388, 391, 392, 405, 408, 415, 416, 422, 434, 435, 437, 442, 444, 449, 450, 452, 453, 461, 464, 481, 487, 492, 493, 494, 495, 496, 507, 510, 512, 513, 518, 520, 521, 522, 523, 525, 529, 535, 541, 542], "checklabelinfil": 6, "label": [6, 7, 17, 19, 35, 52, 58, 77, 79, 104, 107, 108, 111, 112, 113, 114, 130, 133, 136, 139, 146, 149, 154, 156, 158, 165, 200, 204, 205, 207, 212, 234, 238, 298, 299, 301, 320, 321, 323, 337, 392, 398, 410, 423, 430, 431, 434, 435, 436, 437, 438, 447, 449, 453, 460, 468, 477, 478, 492, 493, 494, 495, 496, 504, 509, 511, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547], "checkread": 6, "extractchain": [6, 518], "chainid": [6, 46], "start": [6, 7, 62, 127, 129, 133, 137, 141, 145, 150, 159, 161, 164, 165, 311, 382, 383, 392, 396, 397, 401, 402, 406, 410, 414, 415, 421, 422, 426, 427, 428, 429, 430, 434, 435, 436, 441, 447, 453, 455, 460, 461, 463, 468, 477, 485, 487, 489, 490, 491, 492, 493, 495, 496, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 520, 521, 522, 523, 524, 525, 528, 535, 540, 542, 547], "end": [6, 7, 127, 130, 150, 161, 165, 167, 193, 311, 324, 383, 392, 400, 407, 428, 431, 435, 437, 453, 461, 463, 464, 481, 487, 488, 495, 503, 507, 509, 510, 512, 517, 518, 520, 524, 538, 539, 542, 547, 548], "modelid": [6, 507, 521, 522, 523], "mmcif": [6, 35, 47, 507, 510, 512, 513, 518, 520, 540], "chop": 6, "intern": [6, 7, 19, 68, 126, 134, 136, 139, 199, 406, 410, 434, 453, 457, 468, 480, 528, 547], "bio": [6, 535], "extract": [6, 10, 19, 31, 36, 51, 53, 184, 204, 241, 242, 246, 247, 248, 311, 391, 415, 437, 451, 463, 465, 469, 477, 480, 487, 494, 496, 501, 508, 509, 510, 513, 517, 518, 520, 532, 545, 547, 548], "getboundingbox": 6, "expand": [6, 38, 120, 139, 161, 402, 410, 424, 425, 474, 505, 528], "get": [6, 17, 19, 20, 47, 49, 66, 77, 92, 99, 101, 105, 107, 108, 125, 129, 130, 136, 137, 139, 141, 147, 149, 150, 151, 161, 165, 167, 169, 187, 188, 193, 200, 204, 243, 244, 262, 271, 293, 387, 392, 395, 397, 399, 400, 402, 406, 410, 415, 416, 419, 430, 434, 435, 437, 438, 441, 442, 449, 450, 451, 452, 454, 456, 459, 461, 468, 481, 484, 485, 490, 492, 493, 494, 498, 501, 502, 505, 506, 507, 509, 513, 514, 515, 517, 519, 523, 524, 527, 532, 533, 534, 535, 537, 539, 544, 547, 548, 549], "bound": [6, 410, 485], "box": [6, 19, 39, 42, 106, 108, 130, 150, 188, 204, 205, 268, 281, 391, 392, 402, 433, 434, 436, 438, 449, 453, 468, 470, 471, 477, 487, 489, 490, 492, 493, 494, 495, 496, 507, 511, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "angstrom": [6, 7, 19, 79, 468, 493, 519, 525, 537, 538, 539], "atom": [6, 7, 35, 47, 80, 83, 165, 303, 383, 391, 406, 432, 484, 485, 487, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 505, 506, 509, 510, 511, 512, 513, 517, 519, 520, 521, 522, 523, 524, 525, 527, 530, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546], "alpha": [6, 7, 10, 300, 462, 487, 490, 498, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 538, 539, 542], "carbon": [6, 241, 406, 410, 509, 542], "taken": [6, 105, 107, 108, 117, 120, 126, 127, 128, 129, 130, 140, 145, 207, 292, 303, 391, 392, 406, 422, 432, 435, 437, 444, 510, 537, 538, 539, 547], "account": [6, 26, 27, 141, 150, 241, 246, 247, 248, 387, 391, 392, 400, 405, 408, 414, 415, 418, 421, 422, 428, 430, 432, 434, 435, 437, 452, 453, 456, 464, 487, 492, 503, 507, 509, 510, 511, 520, 525, 528, 529, 532, 537, 538, 539, 544, 547, 551], "make": [6, 14, 17, 19, 30, 42, 48, 83, 84, 111, 130, 134, 136, 141, 145, 147, 161, 167, 184, 191, 234, 262, 383, 386, 391, 397, 400, 405, 410, 411, 416, 422, 426, 427, 428, 434, 435, 437, 442, 447, 449, 450, 452, 453, 460, 461, 462, 464, 468, 473, 477, 481, 490, 493, 505, 512, 513, 520, 524, 527, 542, 547, 548, 551], "larger": [6, 406, 410, 547], "addind": 6, "factor": [6, 14, 19, 26, 27, 110, 201, 204, 241, 246, 247, 248, 252, 299, 301, 302, 391, 402, 410, 468, 473, 487, 493, 498, 503, 505, 509, 510, 517, 525, 528, 533, 537, 538, 539, 547, 548], "getfullid": 6, "model_id": 6, "chain_id": [6, 507, 512], "assign": [6, 19, 24, 27, 31, 33, 51, 52, 136, 141, 145, 150, 193, 201, 211, 215, 218, 227, 228, 238, 250, 254, 261, 293, 296, 304, 305, 307, 317, 319, 399, 409, 410, 414, 447, 450, 452, 453, 455, 468, 470, 476, 492, 504, 526, 527, 530, 533, 535, 545, 547, 548], "obtain": [6, 58, 136, 187, 201, 210, 280, 281, 326, 383, 406, 437, 438, 465, 468, 479, 484, 487, 488, 490, 491, 498, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 519, 520, 523, 524, 525, 526, 527, 528, 532, 533, 535, 536, 538, 539, 545, 546, 547, 551], "getmodelschain": 6, "dictionari": [6, 8, 41, 42, 58, 75, 79, 101, 105, 107, 108, 117, 121, 122, 126, 129, 132, 133, 135, 136, 137, 139, 145, 146, 147, 150, 159, 166, 167, 204, 205, 311, 392, 453, 460, 546], "model": [6, 10, 19, 33, 49, 80, 200, 201, 234, 240, 284, 296, 299, 303, 311, 392, 400, 402, 406, 423, 432, 453, 457, 468, 470, 477, 480, 485, 489, 496, 499, 500, 502, 503, 505, 506, 508, 509, 511, 512, 513, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 551], "respect": [6, 10, 46, 145, 200, 210, 244, 261, 400, 423, 432, 438, 452, 460, 468, 478, 480, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 535, 537, 541, 542, 547, 548], "chain": [6, 80, 410, 488, 489, 490, 494, 495, 501, 506, 507, 509, 510, 511, 512, 513, 517, 519, 520, 524, 530, 535, 536, 538, 539, 545, 546], "length": [6, 7, 62, 130, 136, 137, 167, 468, 488, 493, 525, 536, 537, 538, 539, 542], "residu": [6, 80, 228, 250, 261, 303, 468, 484, 487, 490, 492, 493, 494, 495, 496, 498, 501, 507, 509, 510, 512, 513, 517, 518, 519, 520, 524, 535, 536, 537, 538, 539, 542], "each": [6, 8, 19, 20, 21, 24, 30, 33, 38, 48, 49, 51, 54, 56, 57, 58, 66, 68, 69, 71, 72, 73, 79, 105, 106, 108, 117, 121, 123, 125, 126, 129, 133, 136, 139, 154, 156, 161, 165, 167, 168, 169, 184, 187, 188, 204, 211, 220, 230, 232, 234, 236, 247, 248, 271, 293, 299, 304, 305, 307, 316, 322, 329, 383, 386, 390, 391, 392, 395, 396, 400, 405, 406, 410, 411, 413, 414, 415, 416, 419, 422, 429, 430, 432, 434, 436, 437, 438, 441, 444, 445, 447, 448, 449, 450, 453, 454, 460, 468, 469, 470, 471, 472, 473, 476, 477, 485, 487, 489, 492, 493, 494, 495, 501, 502, 505, 506, 509, 510, 511, 512, 514, 517, 519, 520, 521, 523, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 537, 538, 539, 544, 547, 548], "list": [6, 7, 8, 9, 10, 17, 19, 38, 53, 54, 62, 65, 66, 68, 70, 79, 80, 92, 99, 101, 105, 107, 108, 111, 113, 117, 120, 121, 124, 125, 126, 129, 130, 132, 133, 136, 137, 139, 140, 141, 145, 149, 150, 151, 154, 156, 158, 161, 165, 167, 168, 169, 174, 183, 184, 187, 188, 189, 193, 200, 204, 207, 227, 236, 246, 270, 292, 294, 311, 335, 383, 391, 392, 395, 399, 401, 407, 408, 410, 413, 414, 415, 422, 428, 430, 431, 434, 436, 437, 438, 439, 441, 442, 445, 453, 460, 461, 463, 464, 468, 470, 474, 477, 479, 481, 492, 506, 513, 516, 519, 520, 522, 524, 535, 537, 538, 539, 547, 548], "getsequencefromchain": 6, "getstructur": 6, "inform": [6, 19, 36, 41, 80, 101, 103, 105, 107, 111, 125, 137, 139, 140, 141, 146, 150, 165, 187, 188, 201, 204, 205, 213, 218, 227, 229, 296, 306, 317, 319, 383, 391, 392, 401, 406, 410, 415, 423, 424, 425, 428, 433, 434, 437, 441, 444, 446, 447, 448, 449, 452, 468, 470, 474, 477, 478, 481, 488, 492, 501, 506, 507, 509, 518, 519, 520, 525, 527, 530, 535, 537, 538, 539, 541, 542, 547, 548, 549], "getstructurebfactorvalu": 6, "input": [6, 7, 14, 17, 19, 24, 26, 38, 42, 44, 48, 53, 54, 56, 57, 58, 74, 79, 80, 101, 108, 123, 125, 126, 136, 141, 149, 150, 165, 167, 200, 201, 204, 210, 217, 218, 227, 235, 241, 243, 244, 246, 247, 248, 252, 254, 259, 261, 262, 265, 266, 270, 276, 279, 283, 293, 294, 297, 299, 301, 303, 304, 305, 306, 307, 311, 314, 315, 317, 319, 322, 325, 326, 328, 329, 331, 383, 398, 406, 410, 419, 423, 433, 434, 435, 437, 438, 441, 442, 447, 450, 453, 454, 465, 468, 470, 477, 478, 485, 487, 489, 490, 492, 493, 494, 495, 496, 498, 501, 502, 505, 507, 508, 509, 512, 513, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 547, 548], "method": [6, 10, 14, 42, 44, 51, 53, 54, 67, 68, 73, 77, 79, 80, 105, 107, 108, 109, 111, 113, 117, 125, 126, 129, 136, 137, 141, 145, 149, 150, 154, 156, 157, 161, 164, 165, 166, 167, 168, 169, 174, 186, 188, 199, 200, 201, 204, 209, 210, 241, 242, 243, 244, 270, 272, 278, 287, 293, 294, 296, 302, 322, 327, 328, 390, 402, 405, 406, 409, 410, 423, 434, 435, 438, 439, 441, 442, 447, 449, 452, 457, 477, 479, 485, 494, 495, 500, 505, 506, 509, 517, 525, 526, 527, 533, 534, 535, 538, 539, 546, 547, 548, 549], "b": [6, 147, 150, 201, 327, 400, 406, 409, 434, 438, 447, 461, 477, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 501, 505, 507, 508, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546], "field": [6, 7, 75, 136, 151, 173, 201, 383, 397, 406, 430, 431, 434, 439, 450, 453, 468, 488, 493, 548], "2": [6, 7, 10, 14, 19, 38, 39, 40, 44, 45, 46, 56, 57, 62, 79, 80, 101, 106, 107, 108, 118, 122, 136, 139, 147, 149, 151, 159, 166, 167, 168, 201, 204, 231, 261, 262, 271, 276, 279, 282, 283, 287, 299, 310, 311, 313, 321, 329, 383, 386, 391, 392, 398, 399, 400, 405, 409, 414, 415, 419, 424, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 453, 454, 455, 457, 459, 462, 463, 465, 470, 471, 473, 477, 478, 481, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546], "order": [6, 7, 55, 66, 77, 132, 133, 139, 158, 293, 310, 311, 328, 329, 383, 386, 391, 392, 395, 398, 400, 401, 410, 413, 414, 422, 423, 428, 433, 435, 436, 437, 438, 441, 444, 447, 448, 451, 452, 453, 464, 468, 470, 473, 478, 481, 488, 491, 501, 505, 506, 509, 510, 511, 512, 513, 519, 520, 524, 526, 528, 532, 534, 535, 542, 544], "averag": [6, 7, 14, 19, 26, 45, 201, 204, 228, 242, 243, 250, 259, 260, 273, 296, 313, 383, 391, 392, 406, 410, 468, 478, 487, 493, 505, 509, 525, 527, 534, 537, 538, 539, 542, 547, 548, 550], "exampl": [6, 10, 20, 26, 58, 107, 136, 149, 159, 161, 164, 165, 167, 168, 169, 200, 383, 388, 391, 392, 397, 398, 399, 402, 405, 407, 413, 415, 419, 421, 422, 429, 433, 434, 436, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 461, 462, 464, 468, 477, 478, 487, 488, 491, 501, 505, 506, 507, 508, 509, 512, 513, 519, 521, 524, 530, 533, 534, 535, 536, 537, 543, 547, 548, 549], "item": [6, 17, 19, 31, 48, 56, 57, 58, 62, 79, 105, 106, 107, 109, 117, 123, 126, 129, 133, 136, 139, 157, 165, 167, 188, 200, 204, 246, 313, 324, 383, 397, 402, 410, 434, 437, 453, 468, 477, 478, 509, 510, 520, 533, 542], "103": [6, 201], "phe": 6, "96": [6, 517, 547], "01": [6, 10, 130, 201, 261, 468, 499, 517, 533, 546], "gettransformmatrix": 6, "atomstructfn": 6, "startid": 6, "endid": 6, "outfn": [6, 249, 261, 335], "matrix": [6, 7, 10, 14, 19, 28, 36, 56, 65, 165, 204, 215, 228, 230, 250, 261, 314, 320, 321, 323, 335, 492, 493, 525, 535], "superimpos": [6, 10, 546], "move": [6, 29, 106, 111, 125, 129, 161, 165, 262, 299, 383, 405, 428, 434, 435, 437, 438, 442, 453, 470, 477, 508, 509, 512, 513, 524, 537, 540, 545, 547, 548], "self": [6, 14, 17, 19, 42, 66, 77, 108, 113, 125, 129, 133, 136, 141, 149, 187, 200, 201, 204, 243, 252, 262, 292, 293, 392, 399, 405, 409, 422, 429, 430, 434, 435, 437, 442, 447, 449, 450, 453, 470], "read": [6, 7, 14, 17, 29, 32, 41, 53, 54, 64, 65, 68, 73, 108, 125, 126, 136, 141, 146, 161, 187, 200, 204, 217, 246, 270, 276, 279, 303, 304, 305, 306, 307, 311, 331, 382, 383, 391, 392, 398, 399, 400, 401, 402, 409, 410, 416, 423, 433, 434, 436, 437, 438, 444, 449, 450, 453, 464, 468, 470, 506, 509, 530, 532, 546], "readfrompdbdatabas": 6, "pdbid": [6, 11], "retriev": [6, 38, 41, 79, 108, 129, 132, 133, 135, 136, 137, 140, 141, 149, 150, 154, 200, 311, 383, 428, 447, 452, 487, 492, 503, 506, 507, 509, 535, 542], "param": [6, 7, 11, 14, 17, 19, 26, 30, 38, 42, 47, 48, 49, 62, 65, 67, 75, 79, 80, 87, 105, 107, 108, 109, 111, 113, 123, 125, 129, 130, 132, 133, 136, 140, 141, 142, 145, 150, 153, 154, 160, 162, 169, 174, 184, 187, 191, 193, 200, 204, 266, 286, 297, 311, 321, 330, 337, 387, 392, 399, 410, 422, 434, 435, 437, 442, 488, 492, 493, 494, 495, 496, 511, 518, 519, 520, 523, 524, 527, 532, 534, 535, 538, 539, 541, 542, 544], "directori": [6, 42, 47, 55, 77, 101, 105, 137, 141, 150, 160, 161, 162, 165, 173, 191, 193, 204, 294, 383, 384, 387, 388, 391, 392, 395, 405, 407, 410, 413, 419, 421, 429, 434, 437, 438, 439, 447, 449, 450, 453, 460, 468, 509, 513, 515, 532, 544, 547, 548], "readlowlevel": 6, "should": [6, 14, 17, 19, 21, 22, 29, 33, 44, 49, 51, 53, 54, 56, 57, 58, 68, 73, 77, 79, 105, 106, 107, 108, 109, 110, 111, 113, 117, 121, 124, 126, 127, 129, 130, 132, 136, 137, 141, 145, 147, 149, 150, 156, 161, 164, 165, 167, 169, 174, 191, 200, 204, 234, 241, 246, 247, 248, 270, 283, 299, 310, 328, 329, 337, 383, 386, 387, 391, 392, 395, 397, 398, 399, 400, 401, 402, 406, 407, 408, 410, 414, 415, 421, 423, 428, 429, 430, 434, 435, 437, 438, 439, 441, 442, 444, 445, 449, 450, 452, 453, 460, 462, 464, 465, 468, 470, 471, 477, 481, 483, 487, 492, 493, 495, 505, 507, 508, 509, 510, 511, 512, 518, 520, 525, 527, 531, 534, 535, 537, 538, 539, 543, 544, 547, 548, 549], "coordin": [6, 7, 10, 19, 20, 21, 35, 36, 37, 54, 57, 58, 68, 84, 106, 165, 204, 205, 206, 241, 246, 248, 270, 271, 273, 311, 335, 382, 391, 406, 410, 423, 438, 451, 468, 469, 477, 480, 487, 492, 493, 494, 495, 496, 498, 504, 505, 513, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 550], "dict": [6, 17, 42, 44, 49, 58, 77, 79, 101, 125, 136, 137, 140, 141, 150, 154, 166, 167, 187, 391, 410, 442], "kk": [6, 77], "y_list": 6, "_atom_sit": 6, "cartn_i": 6, "renamechain": 6, "newchainnam": 6, "letter": [6, 129, 324, 530], "kept": [6, 19, 61, 156, 410, 414, 428, 493, 547], "multi": [6, 201, 259, 392, 410, 414, 429, 460, 537], "truncat": 6, "next": [6, 101, 129, 136, 165, 299, 383, 387, 391, 392, 397, 399, 400, 406, 407, 410, 411, 414, 422, 428, 433, 434, 435, 449, 450, 452, 453, 454, 455, 460, 468, 470, 490, 492, 493, 503, 505, 506, 507, 508, 509, 510, 511, 524, 525, 526, 527, 529, 530, 532, 547, 548], "avail": [6, 55, 59, 79, 101, 108, 111, 117, 120, 125, 129, 137, 141, 150, 159, 167, 187, 199, 200, 201, 299, 301, 382, 383, 386, 387, 391, 397, 399, 406, 408, 410, 413, 425, 427, 428, 434, 435, 442, 449, 450, 451, 453, 461, 462, 464, 468, 470, 472, 473, 474, 477, 478, 480, 481, 484, 485, 487, 489, 492, 502, 505, 506, 507, 508, 509, 510, 514, 520, 527, 534, 535, 544, 547, 548, 549, 551], "alphabet": [6, 8, 19, 55, 530], "than": [6, 7, 14, 38, 101, 106, 120, 133, 136, 137, 141, 149, 150, 158, 161, 164, 173, 193, 204, 243, 262, 270, 273, 313, 343, 383, 397, 400, 406, 409, 413, 415, 430, 436, 438, 439, 441, 449, 451, 452, 453, 460, 468, 471, 474, 477, 487, 488, 489, 490, 491, 492, 493, 501, 505, 506, 507, 509, 510, 512, 517, 519, 520, 523, 524, 525, 527, 533, 535, 536, 537, 538, 539, 547, 548], "62": [6, 201], "rais": [6, 136, 137, 147, 154, 160, 167, 193, 200, 442, 447, 448, 526], "outofchainserror": 6, "map": [6, 7, 47, 52, 53, 169, 201, 204, 206, 222, 252, 266, 276, 303, 304, 305, 306, 307, 320, 321, 331, 406, 410, 414, 430, 446, 451, 479, 484, 485, 487, 492, 493, 494, 495, 496, 498, 499, 500, 502, 504, 507, 509, 510, 511, 512, 513, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 542, 544, 545, 546], "between": [6, 9, 10, 14, 19, 25, 27, 53, 54, 56, 57, 106, 108, 110, 130, 132, 133, 136, 141, 145, 150, 165, 167, 169, 204, 217, 227, 228, 229, 241, 246, 247, 248, 250, 252, 262, 265, 271, 301, 302, 303, 311, 316, 322, 329, 383, 391, 392, 397, 402, 406, 410, 415, 430, 432, 435, 437, 439, 468, 470, 481, 487, 490, 491, 492, 493, 495, 501, 505, 507, 509, 510, 511, 512, 513, 515, 519, 520, 524, 525, 527, 528, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 547, 548], "old": [6, 149, 150, 410, 434, 460, 481, 510, 512, 546], "well": [6, 10, 159, 201, 383, 398, 400, 406, 410, 413, 425, 436, 437, 442, 460, 468, 470, 483, 487, 492, 500, 501, 502, 505, 506, 509, 510, 511, 512, 513, 519, 520, 525, 527, 535, 537, 538, 539, 542, 544], "modifi": [6, 19, 28, 52, 56, 79, 80, 101, 110, 133, 136, 140, 150, 165, 167, 174, 215, 244, 314, 386, 388, 392, 399, 400, 406, 410, 422, 434, 435, 438, 439, 442, 444, 447, 449, 450, 453, 460, 478, 492, 493, 509, 519, 520, 524, 525, 526, 531, 539, 543, 547, 548], "renumberchain": 6, "offset": [6, 106, 130, 161, 468, 505, 528, 532, 543], "transformation_matrix": 6, "sampl": [6, 7, 19, 41, 44, 52, 68, 165, 201, 205, 241, 243, 246, 247, 248, 283, 293, 294, 296, 299, 301, 406, 435, 436, 437, 445, 452, 453, 454, 468, 470, 473, 504, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 536, 545, 547, 548], "4x4": [6, 10], "appli": [6, 10, 14, 19, 30, 32, 48, 56, 57, 107, 108, 111, 117, 127, 129, 165, 201, 213, 215, 283, 284, 285, 287, 323, 335, 391, 392, 410, 424, 434, 435, 439, 453, 457, 464, 465, 468, 473, 476, 477, 478, 489, 491, 501, 503, 505, 509, 511, 512, 513, 519, 520, 525, 526, 527, 533, 534, 538, 539, 547, 548], "voxel": [6, 304, 305, 307, 329, 468, 505, 520, 526, 528, 529, 532, 533, 534, 547], "must": [6, 19, 79, 101, 108, 145, 184, 225, 228, 243, 250, 252, 254, 311, 383, 386, 387, 391, 395, 398, 400, 406, 407, 410, 414, 416, 422, 434, 435, 436, 437, 438, 441, 444, 447, 450, 452, 453, 460, 463, 464, 465, 468, 472, 473, 481, 547], "multipli": [6, 27, 136, 167, 434, 438], "samplingr": [6, 7, 19, 30, 43, 47, 62, 67, 237, 437, 447, 452, 543], "rotat": [6, 10, 14, 56, 159, 201, 252, 267, 308, 309, 310, 323, 332, 335, 389, 396, 406, 410, 432, 465, 468, 477, 487, 519, 528, 547, 548], "numpi": [6, 10, 14, 19, 48, 56, 57, 145, 271, 335, 481], "arrai": [6, 9, 10, 14, 84, 261, 271, 320, 321, 323, 335], "809017": 6, "309017": 6, "30917": 6, "translat": [6, 7, 10, 19, 261, 396, 424, 503, 517], "vector": [6, 10, 19, 56], "d": [6, 35, 80, 136, 164, 167, 201, 321, 391, 392, 400, 406, 410, 442, 449, 450, 451, 459, 460, 461, 487, 492, 493, 507, 508, 509, 510, 511, 512, 519, 520, 530, 532, 535, 546], "writeascif": 6, "ciffil": [6, 70], "Be": [6, 50, 218, 437, 519], "awar": [6, 218, 435, 437], "lossless": 6, "convers": [6, 10, 14, 49, 54, 167, 200, 383, 391, 392, 402, 406, 410, 468, 551], "writeaspdb": 6, "pdbfile": [6, 11, 19, 525], "possibl": [6, 14, 19, 26, 54, 55, 84, 105, 108, 110, 113, 117, 121, 126, 129, 149, 150, 166, 204, 329, 383, 392, 400, 406, 409, 410, 421, 424, 428, 433, 435, 442, 444, 447, 452, 455, 460, 461, 468, 470, 477, 478, 481, 485, 487, 489, 492, 505, 506, 507, 509, 510, 512, 513, 519, 520, 522, 523, 524, 526, 527, 530, 531, 535, 537, 538, 539, 542, 547, 548], "otherwis": [6, 10, 36, 58, 75, 101, 105, 106, 107, 136, 140, 150, 166, 189, 200, 204, 391, 397, 416, 422, 438, 445, 447, 450, 471, 474, 481, 492, 505, 509, 511, 512, 515, 519, 520, 523, 525, 527, 530, 532, 534, 542, 547], "except": [6, 51, 86, 87, 102, 107, 111, 133, 136, 137, 141, 147, 160, 167, 168, 200, 329, 387, 391, 410, 414, 447, 450, 472, 509, 510, 512, 520, 527, 535], "addscipionattribut": 6, "cifdic": [6, 70], "attributescoresd": 6, "attrnam": [6, 70, 133, 136], "recipi": 6, "add": [6, 14, 19, 59, 65, 79, 106, 108, 113, 115, 117, 118, 124, 127, 129, 130, 132, 133, 136, 145, 149, 150, 158, 161, 167, 184, 187, 188, 191, 200, 204, 211, 254, 279, 337, 383, 390, 392, 397, 405, 407, 408, 410, 414, 415, 422, 428, 436, 437, 439, 442, 449, 450, 453, 454, 460, 468, 471, 473, 477, 478, 488, 492, 493, 494, 495, 496, 509, 510, 512, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 551], "attribut": [6, 19, 20, 48, 56, 57, 58, 70, 79, 80, 101, 103, 106, 108, 110, 122, 133, 136, 149, 150, 154, 174, 187, 188, 200, 204, 294, 383, 392, 410, 416, 430, 431, 434, 435, 436, 437, 438, 452, 471, 473, 532, 543], "form": [6, 10, 29, 79, 80, 87, 104, 125, 133, 136, 145, 149, 150, 168, 169, 174, 229, 243, 271, 278, 291, 293, 383, 392, 398, 399, 402, 405, 410, 422, 430, 433, 434, 435, 437, 439, 441, 452, 453, 460, 468, 470, 471, 477, 478, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 504, 505, 506, 507, 508, 509, 510, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "spec": [6, 7], "ciftopdb": 6, "fncif": 6, "fnpdb": 6, "fromciftopdb": 6, "infilenam": [6, 7], "outfilenam": [6, 7, 8, 77], "log": [6, 11, 62, 77, 87, 101, 125, 126, 145, 150, 154, 155, 162, 165, 383, 388, 392, 400, 402, 409, 410, 413, 415, 422, 427, 428, 429, 434, 435, 439, 442, 445, 449, 453, 460, 461, 464, 468, 470, 474, 477, 492, 525, 547], "fromciftommcif": 6, "frompdbtocif": 6, "getenviron": [6, 68, 73, 137, 199, 442], "partiallycleaningfold": 6, "program": [6, 7, 49, 59, 62, 68, 74, 75, 101, 127, 137, 150, 184, 197, 199, 200, 204, 230, 271, 293, 294, 300, 304, 311, 314, 338, 340, 352, 383, 391, 399, 406, 410, 425, 442, 444, 460, 464, 470, 480, 481, 483, 487, 492, 500, 506, 507, 509, 510, 512, 513, 520, 532, 538, 539, 540, 546, 547, 548, 551], "cwd": [6, 68, 141, 145, 160, 162, 437, 460], "pdbtocif": 6, "retri": [6, 481], "runenvirom": 6, "arg": [6, 17, 19, 20, 22, 25, 29, 30, 39, 44, 45, 46, 47, 48, 49, 53, 54, 66, 68, 70, 71, 73, 79, 96, 97, 103, 105, 107, 108, 113, 117, 118, 121, 123, 124, 125, 126, 127, 129, 130, 132, 133, 135, 139, 145, 149, 157, 169, 187, 188, 189, 191, 199, 209, 210, 211, 212, 217, 220, 222, 226, 227, 228, 229, 230, 232, 234, 235, 237, 238, 239, 240, 241, 243, 249, 250, 252, 254, 259, 261, 262, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 282, 283, 284, 285, 286, 287, 289, 293, 294, 295, 296, 298, 303, 304, 305, 306, 307, 309, 311, 316, 317, 318, 319, 320, 321, 323, 325, 326, 331, 332, 333, 334, 337, 399, 405, 437, 450, 512, 517], "listatomstruct": 6, "clean_dir": 6, "scipionmmcifio": 6, "mmcifio": 6, "initialis": 6, "tocif": 6, "outciffil": 6, "topdb": 6, "outpdbfil": 6, "serv": [7, 24, 25, 53, 105, 106, 108, 129, 132, 141, 149, 150, 174, 204, 391, 392, 424, 430, 435, 495], "ccp4": [7, 410, 464, 488, 500, 511, 514, 516, 517, 537, 538, 539, 542, 545], "todo": [7, 106, 129, 150, 380, 545], "specif": [7, 19, 64, 66, 67, 105, 106, 108, 111, 117, 120, 122, 126, 127, 129, 130, 133, 150, 187, 188, 201, 204, 383, 391, 392, 396, 405, 406, 408, 410, 422, 425, 429, 430, 433, 435, 436, 437, 438, 439, 441, 442, 444, 447, 449, 453, 460, 464, 468, 477, 492, 493, 494, 495, 496, 507, 509, 510, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548], "ccp4header": 7, "readhead": 7, "origin": [7, 10, 19, 36, 50, 52, 58, 68, 132, 161, 167, 181, 220, 226, 383, 398, 400, 450, 460, 468, 470, 476, 478, 492, 493, 494, 495, 496, 504, 505, 510, 513, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 545, 547, 548, 550], "spite": [7, 485, 509], "mrc2014": 7, "format": [7, 8, 10, 14, 42, 47, 55, 101, 133, 136, 141, 147, 149, 161, 164, 167, 181, 183, 187, 193, 200, 201, 204, 248, 254, 297, 311, 325, 383, 392, 395, 398, 402, 406, 410, 415, 419, 423, 428, 432, 437, 444, 448, 451, 470, 473, 478, 490, 503, 504, 507, 510, 512, 513, 520, 530, 532, 535, 544, 550, 551], "mrc": [7, 14, 19, 35, 165, 204, 260, 263, 303, 306, 321, 406, 410, 423, 438, 454, 470, 478, 520, 521, 522, 523, 527, 532, 533, 544], "typic": [7, 164, 165, 201, 414, 422, 429, 447, 470], "call": [7, 19, 29, 38, 49, 51, 54, 66, 68, 73, 79, 80, 105, 107, 108, 109, 111, 117, 120, 121, 125, 126, 129, 136, 137, 141, 145, 150, 154, 157, 161, 169, 174, 228, 250, 292, 311, 314, 383, 387, 388, 391, 392, 397, 398, 405, 406, 410, 414, 415, 422, 424, 429, 430, 433, 434, 435, 437, 439, 444, 445, 447, 448, 449, 451, 452, 464, 468, 471, 477, 479, 510, 520, 547, 548], "xorigin": 7, "yorigin": 7, "zorigin": 7, "2000": [7, 10, 201], "nearli": [7, 406], "ident": [7, 449, 485, 487, 488, 490, 492, 496, 505, 506, 511, 512, 520, 522, 525, 527, 533, 535, 539], "rai": [7, 165, 406, 457, 502, 506, 509, 510, 524, 525, 536, 546], "coot": [7, 410, 488, 500, 510, 511, 512, 525, 537, 538, 539, 542, 545], "expect": [7, 8, 10, 14, 64, 140, 150, 154, 167, 204, 294, 297, 398, 399, 406, 422, 430, 435, 436, 437, 438, 460, 463, 468, 470, 487, 509, 534, 536, 537, 538, 539, 547, 548], "organis": 7, "56": [7, 406, 410, 428, 459, 462, 534], "word": [7, 130, 413, 414, 453, 505, 528, 531, 536, 543], "follow": [7, 10, 19, 105, 108, 109, 117, 121, 126, 129, 149, 150, 165, 191, 200, 218, 383, 386, 387, 388, 391, 392, 395, 396, 399, 400, 401, 404, 405, 406, 408, 409, 410, 413, 414, 415, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 447, 448, 449, 452, 453, 455, 459, 460, 461, 463, 464, 465, 468, 470, 474, 477, 479, 480, 481, 489, 490, 491, 492, 498, 504, 506, 507, 508, 509, 510, 511, 512, 514, 520, 521, 522, 524, 525, 528, 530, 534, 535, 538, 547, 548, 549, 550], "space": [7, 14, 111, 141, 167, 313, 392, 401, 410, 414, 424, 439, 453, 455, 470, 478, 487, 501, 510, 511, 512, 524, 525, 526, 527, 532, 537, 538, 542, 545, 546, 547, 548], "ten": [7, 520], "80": [7, 107, 415, 418, 428], "charact": [7, 10, 38, 62, 127, 530, 532], "nc": 7, "column": [7, 10, 17, 65, 66, 105, 107, 108, 111, 113, 117, 122, 126, 129, 133, 156, 188, 211, 254, 303, 337, 410, 423, 430, 431, 470, 476, 477, 478, 488, 490, 493, 507, 519], "fastest": [7, 415], "chang": [7, 10, 19, 20, 28, 29, 42, 56, 79, 106, 108, 109, 125, 129, 130, 132, 133, 135, 136, 139, 141, 157, 159, 167, 181, 187, 188, 201, 227, 235, 254, 266, 282, 311, 317, 319, 326, 327, 383, 386, 387, 392, 395, 398, 402, 403, 406, 414, 415, 422, 425, 428, 434, 435, 437, 439, 441, 442, 444, 445, 451, 452, 453, 458, 462, 468, 474, 478, 507, 509, 511, 512, 513, 520, 524, 531, 533, 534, 546, 547, 548, 549], "nr": [7, 535], "row": [7, 10, 17, 19, 65, 77, 105, 107, 108, 111, 112, 113, 115, 118, 119, 120, 121, 125, 133, 136, 156, 165, 188, 193, 200, 204, 246, 337, 383, 392, 398, 430, 431, 445, 449, 450, 468, 478], "n": [7, 9, 14, 19, 99, 136, 145, 161, 164, 165, 167, 184, 191, 201, 271, 296, 311, 392, 400, 406, 410, 415, 435, 442, 460, 485, 487, 488, 493, 501, 503, 507, 510, 521, 522, 523, 524, 528, 536, 537, 538, 539, 542, 546], "slowest": 7, "mode": [7, 17, 19, 32, 53, 66, 77, 79, 101, 102, 108, 136, 139, 141, 150, 165, 167, 200, 201, 269, 271, 311, 313, 386, 392, 399, 403, 410, 413, 414, 423, 426, 427, 428, 437, 439, 453, 460, 468, 470, 477, 481, 492, 493, 494, 495, 496, 505, 509, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "envelop": [7, 538, 539], "store": [7, 14, 17, 19, 29, 39, 57, 66, 79, 80, 82, 105, 106, 107, 108, 111, 126, 127, 132, 133, 136, 137, 139, 140, 141, 146, 149, 150, 200, 204, 205, 220, 221, 232, 252, 272, 309, 311, 317, 319, 335, 383, 391, 400, 402, 405, 406, 422, 423, 428, 431, 434, 435, 436, 437, 438, 444, 449, 453, 464, 470, 532, 547, 548], "sign": [7, 150, 165, 409, 449], "byte": [7, 161, 435], "128": [7, 406], "lowest": [7, 79, 409, 493, 534], "127": 7, "highest": [7, 79, 487, 534, 536, 537, 538, 539, 542], "integ": [7, 30, 48, 108, 133, 136, 159, 167, 268, 383, 392, 410, 431, 437, 453, 460, 477, 519, 532], "real": [7, 133, 386, 391, 406, 409, 410, 428, 441, 487, 501, 505, 510, 511, 512, 524, 537, 538, 542, 545, 546, 547], "complex": [7, 48, 56, 57, 130, 169, 201, 383, 391, 392, 406, 407, 409, 424, 441, 442, 445, 457, 477, 485, 487, 488, 489, 490, 491, 492, 505, 512, 525, 546, 548, 551], "normal": [7, 19, 29, 64, 101, 106, 108, 125, 150, 161, 165, 167, 201, 261, 267, 276, 287, 303, 335, 383, 392, 403, 410, 414, 423, 447, 477, 478, 495, 503, 505, 507, 509, 510, 517, 524, 527, 535, 537, 538, 539, 547], "mai": [7, 10, 47, 58, 66, 118, 145, 161, 167, 173, 187, 193, 228, 233, 250, 271, 299, 310, 317, 319, 327, 346, 347, 388, 391, 392, 397, 400, 406, 407, 409, 422, 423, 429, 432, 433, 434, 436, 437, 448, 449, 452, 457, 462, 464, 468, 470, 476, 477, 479, 481, 483, 496, 500, 504, 506, 507, 509, 510, 511, 513, 517, 521, 522, 523, 524, 525, 538, 539, 547, 548], "NOT": [7, 387, 391, 453], "ncstart": 7, "nrstart": 7, "nsstart": 7, "8": [7, 56, 113, 149, 167, 391, 406, 409, 414, 418, 426, 427, 437, 445, 449, 457, 459, 460, 465, 468, 474, 477, 478, 481, 485, 487, 488, 489, 490, 491, 505, 506, 507, 509, 510, 511, 513, 517, 520, 524, 527, 531, 546], "nx": 7, "interv": [7, 79, 159, 435, 445, 468, 477, 534], "along": [7, 68, 432, 510, 519, 533, 534, 536, 538, 547, 548], "9": [7, 56, 149, 167, 201, 406, 414, 426, 427, 430, 445, 457, 459, 468, 474, 477, 478, 485, 487, 489, 490, 491, 492, 505, 507, 509, 510, 512, 513, 517, 520, 524, 525, 535, 546], "ny": 7, "nz": 7, "z": [7, 10, 14, 19, 56, 84, 112, 165, 251, 308, 391, 406, 432, 468, 492, 493, 494, 495, 496, 504, 505, 509, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548], "11": [7, 56, 79, 149, 156, 167, 201, 391, 398, 406, 414, 418, 428, 457, 461, 468, 477, 481, 482, 487, 489, 490, 491, 499, 505, 509, 510, 517, 525, 527, 546], "cell": [7, 77, 406, 410, 468, 487, 490, 492, 498, 501, 502, 505, 510, 511, 519, 525, 528, 538, 539, 546], "dimens": [7, 14, 19, 36, 68, 111, 254, 282, 321, 402, 430, 437, 468, 520, 521, 522, 523, 524, 526, 527, 528, 531, 532, 533, 534, 538, 539, 543, 547, 548], "12": [7, 56, 68, 77, 106, 107, 156, 201, 414, 426, 427, 428, 432, 435, 438, 453, 457, 461, 468, 477, 487, 489, 490, 491, 505, 509, 510, 512, 517, 525, 528, 532, 536, 537, 546, 548], "13": [7, 56, 70, 189, 400, 414, 426, 427, 457, 462, 468, 477, 487, 490, 492, 499, 505, 509, 510, 511, 512, 514, 517, 525, 528, 529, 532, 536, 537, 538, 539, 540, 546], "14": [7, 415, 418, 422, 430, 457, 477, 487, 488, 490, 491, 492, 509, 512, 517, 523, 525, 528, 530, 546, 547], "angl": [7, 10, 19, 20, 65, 204, 227, 294, 317, 319, 322, 323, 335, 410, 478, 505, 510, 517, 525, 528, 536, 537, 538, 539, 547, 548], "degre": [7, 65, 323, 335, 343, 432, 468, 519, 525], "15": [7, 108, 201, 406, 415, 435, 457, 459, 465, 473, 477, 482, 487, 488, 490, 493, 499, 509, 513, 517, 519, 520, 524, 525, 528, 531, 546], "beta": [7, 10, 392, 415, 462, 464, 479, 481, 502, 503, 504, 505, 506, 507, 509, 510, 511, 537, 538, 539], "16": [7, 10, 406, 414, 415, 418, 426, 427, 435, 457, 459, 460, 461, 465, 477, 487, 488, 489, 491, 509, 514, 517, 525, 532, 536, 537, 538, 539, 540, 546], "gamma": [7, 10, 510, 536], "17": [7, 201, 406, 414, 457, 477, 481, 488, 491, 509, 514, 517, 525, 533, 536, 537, 538, 539, 540, 541, 546], "mapc": 7, "axi": [7, 10, 19, 65, 68, 83, 84, 113, 165, 310, 335, 406, 432, 468, 470, 473, 492, 493, 494, 495, 496, 505, 518, 519, 521, 522, 523, 524, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 547, 548], "correspond": [7, 17, 19, 31, 79, 129, 136, 141, 150, 169, 200, 204, 211, 225, 228, 250, 254, 311, 322, 391, 392, 407, 410, 423, 430, 437, 438, 441, 452, 468, 470, 477, 487, 492, 493, 495, 512, 520, 528, 533, 535, 547, 548], "col": [7, 66, 79, 105, 107, 111, 112, 115, 118, 119, 120, 121, 125, 129, 165, 188, 193, 450], "18": [7, 10, 414, 428, 458, 459, 461, 462, 477, 488, 489, 490, 499, 514, 517, 525, 527, 534, 536, 537, 538, 539, 540, 541, 542, 546], "mapr": 7, "19": [7, 201, 410, 415, 457, 477, 514, 525, 535, 536, 537, 538, 539, 540, 541, 542, 546], "sect": 7, "20": [7, 107, 150, 163, 201, 311, 406, 415, 428, 432, 435, 457, 461, 462, 465, 468, 477, 481, 483, 493, 494, 495, 496, 509, 514, 525, 530, 536, 537, 538, 539, 540, 541, 542, 546], "amin": 7, "minimum": [7, 19, 77, 105, 107, 111, 115, 118, 119, 120, 121, 125, 188, 193, 271, 415, 435, 468, 476, 487, 488, 490, 492, 493, 533, 539, 547, 548], "densiti": [7, 201, 300, 484, 485, 489, 494, 495, 496, 498, 501, 502, 503, 505, 508, 509, 510, 512, 513, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "21": [7, 201, 391, 400, 410, 414, 426, 427, 428, 457, 477, 506, 517, 525, 536, 537, 539, 546], "amax": 7, "maximum": [7, 19, 133, 201, 259, 262, 343, 391, 392, 415, 435, 437, 460, 468, 492, 493, 505, 509, 519, 525, 533, 534, 535, 536, 537, 542, 547, 548], "22": [7, 77, 201, 428, 457, 461, 477, 512, 517, 525, 538, 546], "amean": 7, "mean": [7, 14, 122, 127, 145, 150, 161, 228, 250, 252, 271, 335, 391, 392, 400, 406, 410, 414, 422, 442, 444, 452, 453, 460, 463, 468, 470, 474, 487, 492, 493, 503, 505, 510, 513, 525, 527, 528, 530, 535, 537, 540, 547], "23": [7, 10, 189, 391, 422, 457, 477, 490, 509, 517, 539, 546], "ispg": 7, "group": [7, 14, 19, 79, 126, 136, 145, 149, 200, 212, 236, 293, 294, 299, 317, 319, 383, 392, 397, 402, 406, 409, 410, 415, 424, 428, 434, 438, 441, 445, 477, 493, 494, 502, 507, 508, 509, 510, 512, 513, 517, 519, 524, 526, 530, 537, 539, 547], "24": [7, 10, 150, 406, 418, 457, 490, 492, 499, 517, 528, 540, 546], "nsymbt": 7, "oper": [7, 19, 25, 30, 48, 53, 56, 58, 107, 117, 129, 133, 136, 164, 165, 188, 280, 281, 283, 284, 383, 392, 406, 409, 410, 414, 423, 432, 434, 438, 451, 461, 468, 473, 477, 478, 481, 488, 492, 505, 509, 510, 511, 512, 513, 517, 520, 522, 523, 524, 526, 533, 545, 547], "25": [7, 10, 150, 153, 410, 457, 490, 499, 517, 537, 538, 539, 541, 546], "lskflg": 7, "flag": [7, 19, 20, 127, 136, 184, 187, 191, 193, 391, 422, 442, 449, 462, 481, 492], "skew": 7, "foll": 7, "26": [7, 201, 428, 457, 490, 492, 517, 542, 546], "34": [7, 167, 406, 428, 517, 534], "skwmat": 7, "s11": 7, "s12": 7, "s13": 7, "s21": 7, "ne": 7, "35": [7, 167, 201, 517], "37": [7, 400, 406, 517], "skwtrn": 7, "t": [7, 10, 83, 84, 149, 151, 161, 165, 200, 201, 204, 228, 250, 311, 387, 390, 391, 395, 397, 399, 400, 401, 406, 407, 410, 422, 428, 430, 434, 437, 438, 439, 442, 445, 450, 452, 464, 468, 471, 475, 481, 487, 492, 505, 507, 512, 519, 520, 528, 530, 532, 533, 546], "standard": [7, 14, 19, 105, 127, 130, 145, 159, 167, 168, 188, 230, 293, 406, 410, 424, 432, 433, 435, 444, 447, 449, 460, 468, 471, 478, 509, 514, 524, 525, 527, 530, 542], "orthogon": [7, 10, 432], "frame": [7, 10, 14, 19, 26, 44, 51, 79, 105, 106, 107, 108, 112, 115, 118, 123, 124, 125, 127, 129, 130, 149, 188, 193, 247, 262, 392, 410, 423, 452, 453, 470, 476, 477, 481, 486, 487, 490, 491, 492, 493, 520, 547, 548], "xo": 7, "38": [7, 517, 546], "msubsx": 7, "routin": [7, 433, 449], "mapbrick": 7, "mapcont": 7, "frodo": 7, "zero": [7, 261, 293, 468, 527, 537], "50": [7, 107, 119, 130, 154, 201, 406, 465, 481, 505, 517, 528, 537, 547], "52": 7, "pixel": [7, 14, 19, 27, 77, 165, 204, 230, 271, 289, 410, 433, 468, 470, 526, 528, 529, 531, 532, 533, 538, 539, 543, 547], "unit": [7, 10, 79, 150, 392, 410, 447, 465, 494, 496, 498, 501, 508, 509, 510, 512, 513, 519, 520, 525, 532, 538, 539, 545], "fourier": [7, 14, 19, 201, 209, 210, 261, 283, 306, 313, 392, 478, 509, 520, 525, 537, 538, 539, 547], "53": [7, 414, 426, 427, 462, 465, 509, 517], "identifi": [7, 122, 136, 150, 388, 405, 406, 413, 431, 444, 447, 453, 468, 471, 477, 485, 492, 507, 509, 512, 513, 517, 519, 520, 522, 523, 530, 538, 539, 547, 548], "54": [7, 415, 423, 517], "machst": 7, "stamp": 7, "indic": [7, 127, 132, 228, 250, 329, 409, 452, 468, 477, 487, 488, 489, 490, 491, 492, 502, 504, 505, 507, 508, 509, 510, 511, 513, 514, 515, 517, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 547], "wrote": 7, "55": [7, 406, 418, 517], "arm": 7, "deviat": [7, 14, 230, 335, 468, 478, 493, 509, 510, 517, 524, 525, 527, 537, 538, 539, 540, 542], "nlabl": 7, "being": [7, 311, 386, 391, 395, 397, 399, 406, 410, 415, 422, 425, 430, 433, 434, 437, 444, 451, 452, 468, 477, 481, 492, 525, 527, 547, 548], "57": [7, 517], "256": [7, 313], "ie": [7, 141, 415], "a4": 7, "record": [7, 159, 391, 406, 415, 513, 547], "ani": [7, 48, 49, 54, 59, 62, 105, 132, 141, 145, 147, 149, 150, 161, 167, 200, 201, 299, 301, 311, 383, 386, 388, 391, 392, 395, 398, 400, 405, 406, 408, 410, 415, 422, 425, 429, 430, 431, 433, 434, 435, 436, 437, 438, 441, 442, 444, 445, 447, 449, 450, 452, 453, 454, 461, 464, 468, 470, 474, 476, 477, 478, 481, 483, 485, 487, 490, 492, 493, 494, 495, 496, 500, 504, 507, 508, 509, 510, 513, 519, 520, 522, 524, 527, 531, 533, 534, 535, 537, 538, 539, 543, 547, 548, 549, 550], "tabl": [7, 19, 20, 41, 65, 66, 77, 133, 134, 136, 156, 165, 169, 383, 388, 398, 423, 449, 459, 477, 510, 511, 512, 517, 525, 536, 537, 538, 539], "cross": [7, 209, 249, 299, 410, 468, 473, 525, 537], "termin": [7, 159, 162, 167, 410, 414, 415, 426, 428, 434, 435, 438, 450, 455, 468, 485, 487, 488, 490, 503, 510, 512, 549], "cleanfilenameannot": 7, "computesampl": 7, "copyccp4head": 7, "scipionoriginshift": 7, "originfield": 7, "disk": [7, 8, 14, 414, 418, 421, 428, 437, 449, 452, 453, 455, 470, 487, 532], "been": [7, 19, 42, 50, 111, 113, 129, 136, 137, 139, 141, 150, 166, 167, 271, 311, 327, 382, 383, 388, 391, 392, 395, 396, 402, 406, 407, 414, 417, 421, 423, 424, 425, 427, 428, 430, 434, 437, 438, 444, 445, 447, 448, 460, 468, 473, 474, 477, 483, 485, 487, 488, 490, 492, 493, 494, 504, 505, 507, 508, 509, 510, 513, 514, 519, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 542, 543, 544, 547, 548], "design": [7, 383, 392, 398, 401, 402, 406, 410, 435, 438, 441, 453, 478, 479, 492, 493, 494, 495, 496, 510, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547], "fixfil": 7, "creat": [7, 14, 19, 24, 26, 29, 31, 32, 35, 44, 58, 65, 68, 77, 79, 82, 83, 84, 91, 99, 101, 105, 106, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 145, 150, 153, 154, 159, 161, 164, 165, 167, 184, 188, 189, 191, 193, 199, 200, 204, 205, 206, 207, 211, 213, 218, 222, 230, 233, 236, 242, 243, 252, 254, 274, 280, 281, 285, 288, 293, 294, 295, 297, 304, 311, 314, 337, 383, 387, 395, 396, 398, 402, 403, 405, 406, 407, 408, 410, 413, 415, 416, 422, 423, 424, 425, 427, 429, 430, 433, 440, 441, 442, 444, 445, 446, 447, 448, 451, 454, 455, 460, 461, 464, 465, 468, 470, 473, 476, 477, 478, 481, 487, 499, 505, 509, 511, 536, 544, 545, 547, 548, 551], "fix": [7, 19, 141, 400, 402, 414, 422, 430, 432, 434, 452, 470, 477, 490, 499, 510, 511, 538, 539, 540], "getcelldimens": 7, "getdim": [7, 19], "getgridsampl": 7, "gethead": 7, "getispg": 7, "getnumberofobject": 7, "getorigin": [7, 19], "changesign": 7, "getsampl": 7, "getstartangstrom": 7, "getstartpixel": 7, "getxyzn": 7, "iscompat": 7, "setcelldimens": 7, "setdim": [7, 19], "sec": [7, 22, 123, 125, 167, 413, 435, 450, 465], "setgridsampl": 7, "sethead": 7, "newhead": 7, "setispg": 7, "setmod": 7, "setorigin": [7, 19], "origintransformshift": 7, "setsampl": 7, "setstartangstrom": 7, "setstartpixel": 7, "writehead": 7, "fixvolum": 7, "extens": [7, 14, 19, 101, 105, 130, 136, 145, 161, 168, 204, 303, 306, 383, 391, 406, 415, 422, 423, 425, 436, 452, 453, 470, 478, 509, 524, 529, 536, 547, 548], "stack": [7, 14, 19, 44, 165, 204, 285, 395, 400, 410, 445, 470, 478], "meant": [7, 101, 103, 431, 547, 548], "2014": [7, 153, 201], "accept": [7, 65, 107, 108, 117, 167, 386, 410, 444, 447, 487, 493, 509, 510, 512, 524], "noth": [7, 75, 101, 107, 108, 117, 129, 145, 161, 391, 410, 422, 460, 481], "getfileformat": 7, "setmrcsamplingr": [7, 19], "rate": [7, 19, 41, 44, 165, 205, 241, 246, 247, 248, 283, 299, 301, 436, 437, 453, 468, 504, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 545, 547, 548], "sequencehandl": 8, "iupacalphabet": 8, "isaminoacid": [8, 19], "alignseq": 8, "referenceseq": 8, "appendfil": 8, "seqid": 8, "seqdescript": 8, "fasta": [8, 503, 504, 530, 535], "append": [8, 19, 77, 125, 133, 136, 137, 150, 200, 204, 392, 405, 435, 437, 442, 460, 461], "downloadseqfromdatabas": 8, "databas": [8, 20, 46, 129, 132, 133, 134, 136, 141, 149, 150, 156, 165, 231, 311, 383, 392, 398, 406, 427, 430, 431, 449, 452, 470, 487, 492, 503, 505, 506, 507, 509, 510, 529, 530, 535, 544, 546], "gettypefromfil": 8, "accord": [8, 311, 314, 315, 326, 397, 428, 439, 451, 453, 460, 477, 487, 488, 490, 491, 492, 493, 494, 495, 496, 501, 505, 509, 510, 511, 513, 520, 521, 522, 523, 524, 525, 526, 527, 530, 533, 534, 535, 536, 537, 538, 539, 542, 544], "readsequencefromfil": 8, "isamino": [8, 19], "ther": 8, "seqid1": 8, "sequence1": 8, "descript": [8, 19, 64, 105, 117, 121, 126, 129, 150, 168, 274, 391, 392, 398, 406, 418, 428, 434, 444, 449, 460, 474, 477, 482, 499, 509, 530, 545, 547, 548, 549], "description1": 8, "alphabet1": 8, "readsequencesfromfil": 8, "savefil": 8, "specifi": [8, 10, 19, 77, 101, 108, 113, 137, 140, 149, 150, 154, 159, 165, 168, 184, 187, 271, 311, 391, 392, 395, 400, 414, 415, 419, 422, 423, 428, 434, 437, 438, 445, 460, 465, 468, 473, 476, 477, 478, 493, 507, 519, 520, 544, 547, 548], "multipl": [8, 10, 165, 167, 317, 319, 324, 383, 387, 402, 406, 407, 410, 447, 462, 464, 468, 477, 487, 507, 510, 535, 538, 548], "alignbiopairwise2sequ": 8, "structuresequenceid": 8, "structuresequ": 8, "usersequenceid": 8, "usersequ": 8, "align": [8, 19, 24, 25, 26, 27, 36, 50, 56, 165, 201, 204, 209, 210, 212, 213, 215, 221, 223, 224, 225, 244, 249, 252, 259, 263, 265, 266, 297, 299, 326, 327, 328, 383, 391, 392, 402, 409, 428, 447, 454, 464, 468, 470, 476, 477, 485, 487, 492, 493, 505, 507, 509, 520, 530, 535, 540, 547, 548], "alignclustalsequ": 8, "infil": 8, "outfil": [8, 70, 77, 423, 449], "alignmusclesequ": 8, "alphabettoindex": 8, "cleansequ": 8, "cleansequencescipion": 8, "indextoalphabet": 8, "savefilesequencestoalign": 8, "seqdic": 8, "sequencelength": 8, "matric": [9, 10, 201, 320, 321, 492, 547], "point": [9, 10, 19, 82, 102, 108, 136, 137, 150, 217, 314, 321, 324, 335, 387, 390, 391, 392, 395, 400, 406, 408, 421, 422, 429, 432, 434, 437, 439, 442, 445, 449, 452, 453, 454, 460, 461, 462, 464, 468, 470, 477, 481, 490, 504, 505, 509, 510, 511, 512, 513, 520, 524, 534, 535, 537, 538, 539], "chimera": [9, 68, 70, 169, 402, 410, 414, 421, 426, 427, 432, 478, 483, 492, 493, 494, 495, 496, 499, 508, 515, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542], "sym": [9, 266, 512, 519], "icosahedron": [9, 528], "circumscribed_radiu": 9, "orient": [9, 10, 123, 130, 201, 261, 296, 310, 406, 410, 468, 480, 487, 488, 489, 490, 509, 519, 524, 528], "222": [9, 10, 432, 519, 528], "np": [9, 10, 323, 335, 392, 444, 460], "phi": [9, 537, 538, 539], "coordinatesystemtransform": 9, "from_c": 9, "to_c": 9, "get2foldaxi": 9, "get3foldaxi": 9, "getedg": 9, "gettriangl": 9, "getvertic": 9, "icosahedralmatrixt": 9, "icosahedralsymmetrymatric": 9, "icosahedronangl": 9, "icosahedronedgelength": 9, "icosahedrongeometri": 9, "getsymmetrymatric": 9, "interfac": [9, 10, 382, 392, 397, 402, 406, 414, 451, 468, 470, 474, 507, 512, 547, 548, 551], "tupl": [9, 10, 14, 17, 19, 58, 105, 107, 108, 111, 117, 120, 121, 126, 129, 136, 137, 145, 149, 154, 167, 168, 174, 422], "let": [9, 259, 271, 311, 391, 395, 400, 422, 430, 433, 435, 437, 439, 441, 442, 445, 450, 453, 462, 468, 478, 483, 487, 489, 490, 491, 500, 509, 524, 547, 548], "u": [9, 58, 108, 201, 383, 386, 395, 400, 401, 410, 414, 415, 423, 428, 451, 468, 473, 477, 478, 481, 483, 485, 487, 489, 490, 491, 500, 502, 507, 508, 509, 524, 530, 546, 547, 548, 550, 551], "homogen": [10, 299, 406, 430, 487, 533], "quaternion": 10, "librari": [10, 101, 113, 159, 183, 184, 207, 391, 398, 406, 410, 422, 433, 442, 447, 464, 481, 537, 538, 539], "calcul": [10, 19, 27, 111, 220, 232, 259, 261, 271, 294, 300, 302, 311, 313, 328, 331, 410, 433, 435, 440, 460, 468, 473, 488, 492, 509, 518, 519, 520, 521, 522, 524, 525, 534, 537, 538, 539, 540], "scale": [10, 14, 19, 79, 83, 84, 110, 204, 241, 246, 247, 248, 299, 301, 321, 328, 384, 410, 414, 424, 426, 427, 428, 468, 473, 507, 509, 525, 534, 539], "shear": 10, "euler": [10, 19, 204], "also": [10, 19, 27, 36, 38, 54, 58, 77, 108, 122, 127, 130, 132, 133, 136, 139, 141, 150, 156, 161, 165, 200, 204, 205, 228, 241, 243, 246, 247, 248, 250, 261, 323, 335, 383, 387, 391, 392, 395, 396, 397, 398, 400, 401, 402, 403, 406, 410, 413, 414, 415, 416, 421, 422, 423, 425, 426, 428, 430, 431, 434, 435, 436, 437, 439, 442, 444, 445, 447, 449, 450, 451, 453, 456, 459, 460, 462, 464, 468, 470, 473, 477, 478, 481, 485, 487, 488, 492, 493, 494, 496, 501, 505, 506, 507, 509, 510, 511, 512, 513, 517, 519, 520, 521, 522, 523, 524, 525, 527, 528, 530, 533, 537, 539, 542, 544, 547, 548], "includ": [10, 19, 42, 58, 62, 70, 136, 137, 141, 149, 159, 165, 204, 225, 335, 386, 388, 391, 397, 400, 402, 406, 410, 414, 422, 423, 424, 432, 444, 447, 451, 452, 453, 457, 458, 461, 464, 468, 469, 473, 478, 480, 481, 487, 488, 489, 490, 492, 493, 494, 495, 496, 500, 501, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 524, 525, 527, 528, 530, 532, 535, 536, 537, 538, 539, 542, 543, 544, 547, 548, 549], "arcbal": 10, "control": [10, 20, 79, 136, 167, 386, 398, 406, 410, 411, 422, 468, 477, 487, 509, 512, 520, 524, 534, 547, 548], "decompos": 10, "christoph": 10, "gohlk": 10, "organ": [10, 110, 169, 201, 252, 383, 391, 392, 402, 410, 414, 422, 429, 437, 449, 457, 476, 477, 492, 506, 507, 513, 530, 544, 546], "laboratori": [10, 406, 448], "fluoresc": 10, "dynam": [10, 101, 166, 201, 383, 392, 406, 414, 415, 424, 431, 477, 487, 539], "univers": [10, 424, 457], "california": 10, "irvin": 10, "2013": [10, 201, 506, 507, 546], "06": [10, 400, 414, 415, 426, 427, 428, 435, 462, 546], "29": [10, 201, 457, 490, 517, 546], "cpython": 10, "speedup": 10, "api": [10, 47, 408, 435, 437, 444, 449], "stabl": [10, 386, 391, 397, 410, 426, 514], "yet": [10, 133, 136, 147, 150, 165, 311, 387, 392, 410, 411, 415, 422, 435, 437, 450, 452, 468, 470, 485, 487, 492, 547], "revis": [10, 400, 498, 545], "optim": [10, 11, 168, 201, 301, 383, 406, 410, 430, 441, 463, 481, 489, 501, 503, 505, 507, 509, 525, 533, 535, 536, 539, 547], "speed": [10, 70, 410, 473, 487, 489, 490, 533], "faster": [10, 136, 410, 439, 468, 547, 548], "implement": [10, 14, 33, 49, 51, 53, 54, 68, 69, 71, 72, 73, 74, 77, 79, 80, 83, 84, 105, 106, 107, 108, 109, 110, 113, 117, 118, 127, 129, 130, 133, 136, 137, 145, 156, 158, 161, 165, 169, 172, 174, 188, 194, 234, 236, 243, 270, 283, 285, 337, 340, 352, 382, 383, 404, 406, 410, 419, 423, 434, 435, 437, 447, 449, 451, 487, 505, 506, 509, 510, 547, 548], "document": [10, 102, 159, 377, 378, 379, 387, 391, 392, 396, 402, 406, 410, 415, 429, 433, 438, 442, 464, 468, 475, 477, 493, 494, 495, 496, 499, 514, 541, 546, 549], "gener": [10, 19, 24, 26, 30, 35, 79, 80, 101, 108, 141, 156, 168, 174, 200, 201, 210, 236, 245, 259, 293, 294, 296, 311, 314, 329, 383, 386, 391, 392, 395, 397, 402, 404, 406, 410, 413, 414, 419, 422, 423, 429, 435, 436, 437, 438, 442, 444, 447, 448, 449, 450, 451, 452, 453, 460, 461, 464, 465, 468, 480, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 548, 549], "epydoc": 10, "invert": [10, 14, 19, 165, 261, 410, 468, 473, 477, 478, 526, 547, 548], "linalg": 10, "concaten": [10, 133, 136, 200, 392, 431, 442, 451], "dot": [10, 58, 136, 164, 284, 437, 439, 520], "m0": 10, "m1": [10, 385], "shape": [10, 14, 261, 280, 281, 323, 335, 468, 473, 477, 485, 505, 526, 528, 541], "major": [10, 383, 406, 410, 492, 505, 514], "storag": [10, 19, 108, 132, 133, 135, 136, 139, 383, 402, 414, 415, 418, 421, 425, 435, 492], "contigu": 10, "convent": [10, 19, 84, 218, 392, 396, 406, 410, 422, 432, 442, 510, 547, 548], "compon": [10, 19, 108, 136, 201, 392, 401, 406, 410, 468, 478, 513, 526, 527], "transpos": 10, "graphic": [10, 106, 129, 382, 392, 406, 451, 477, 478, 492, 493, 494, 495, 496, 505, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 551], "system": [10, 59, 68, 101, 125, 132, 133, 135, 140, 141, 150, 165, 167, 168, 183, 201, 383, 386, 391, 392, 401, 406, 407, 409, 410, 415, 428, 433, 442, 445, 448, 449, 451, 453, 455, 461, 464, 477, 481, 484, 492, 513, 535, 547], "opengl": [10, 410], "glmultmatrixd": 10, "see": [10, 14, 19, 33, 49, 61, 99, 101, 107, 125, 147, 149, 157, 159, 165, 167, 184, 204, 234, 242, 271, 299, 306, 310, 327, 383, 387, 388, 391, 392, 395, 399, 400, 403, 405, 406, 407, 408, 410, 414, 415, 419, 421, 422, 426, 427, 428, 430, 431, 432, 433, 434, 437, 438, 441, 442, 445, 448, 449, 450, 451, 452, 453, 460, 461, 462, 464, 468, 470, 473, 474, 476, 477, 478, 481, 487, 488, 492, 493, 494, 495, 496, 504, 507, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "carri": [10, 201, 392, 402, 407, 468, 509, 510, 521, 522, 524], "out": [10, 150, 165, 201, 220, 392, 397, 400, 407, 410, 416, 435, 444, 446, 449, 453, 460, 468, 470, 473, 475, 477, 478, 509, 510, 520, 521, 522, 524, 537, 547, 548, 550], "float64": 10, "precis": [10, 136, 266, 492, 525], "argument": [10, 17, 19, 49, 54, 65, 66, 67, 77, 99, 107, 108, 112, 117, 126, 127, 130, 136, 137, 139, 145, 149, 150, 164, 193, 200, 293, 300, 391, 392, 395, 409, 410, 413, 422, 436, 437, 442, 452, 468, 492], "unless": [10, 101, 391, 398, 400, 428, 449, 463, 549], "radian": [10, 525], "w": [10, 108, 117, 126, 129, 167, 201, 391, 406, 415, 422, 435, 509, 524, 525, 546], "ix": [10, 245], "jy": 10, "kz": 10, "repres": [10, 19, 20, 31, 65, 108, 109, 136, 137, 145, 150, 167, 169, 200, 201, 225, 229, 271, 296, 337, 383, 386, 392, 410, 419, 423, 432, 441, 447, 455, 468, 473, 477, 487, 492, 493, 494, 495, 496, 518, 521, 522, 523, 524, 527, 528, 529, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 547], "tripl": 10, "interpret": [10, 201, 387, 407, 439, 484, 485, 487, 501, 502, 503, 513, 520, 533, 537], "wai": [10, 19, 50, 54, 58, 59, 68, 77, 149, 159, 160, 201, 271, 324, 383, 386, 387, 391, 392, 395, 399, 400, 402, 406, 408, 410, 413, 414, 415, 419, 422, 437, 439, 442, 444, 451, 452, 453, 456, 463, 468, 470, 474, 477, 487, 488, 491, 492, 496, 502, 503, 507, 509, 511, 522, 524, 527, 547, 548, 551], "encod": [10, 167, 391, 441, 449, 506], "ax": [10, 82, 83, 84, 406, 432, 492, 493, 494, 495, 496, 504, 518, 519, 521, 522, 523, 524, 525, 527, 528, 529, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542], "sxyz": 10, "ryxi": 10, "tatic": 10, "otat": 10, "remain": [10, 164, 165, 273, 406, 410, 453, 464, 477, 484, 487, 488, 490, 491, 493, 512, 519, 527, 547, 548], "success": [10, 154, 165, 229, 398, 400, 406, 501, 505, 509, 524, 533], "inner": [10, 79, 468, 505, 526, 528, 534], "rightmost": 10, "pariti": 10, "even": [10, 19, 30, 264, 383, 392, 398, 406, 407, 410, 414, 428, 430, 437, 438, 445, 451, 452, 453, 460, 468, 471, 484, 517, 547], "odd": [10, 19, 264, 398], "repetit": [10, 191, 406, 505], "static": [10, 14, 79, 101, 105, 108, 118, 121, 122, 126, 127, 132, 133, 136, 137, 141, 150, 151, 154, 157, 159, 184, 187, 323, 410, 437, 451], "ronald": 10, "goldman": 10, "gem": 10, "pp": 10, "472": [10, 406], "475": 10, "morgan": [10, 406], "kaufmann": 10, "1990": 10, "pseudo": [10, 422, 493], "perspect": [10, 406, 478], "ii": [10, 335, 451, 550], "320": 10, "323": 10, "1991": 10, "simpl": [10, 24, 26, 42, 101, 105, 109, 127, 129, 136, 137, 139, 149, 158, 167, 201, 383, 391, 392, 410, 422, 424, 437, 438, 441, 442, 447, 460, 470, 496, 507, 508, 523], "spencer": 10, "thoma": [10, 201, 546], "recov": [10, 149, 167, 512], "324": 10, "331": 10, "ken": 10, "shoemak": 10, "iv": 10, "229": [10, 415], "1994": 10, "175": [10, 201, 406], "192": 10, "attitud": 10, "jame": 10, "diebel": 10, "2006": [10, 406], "discuss": [10, 400, 449, 457, 509], "solut": [10, 433, 434, 448, 449, 451, 485, 487, 506, 509, 510, 511, 512, 527, 546], "best": [10, 113, 201, 296, 328, 383, 392, 406, 407, 410, 447, 468, 477, 483, 487, 488, 490, 500, 505, 510, 511, 512, 513, 524, 539, 542, 548], "kabsch": 10, "acta": [10, 201, 451, 546], "cryst": [10, 451], "1978": 10, "a34": 10, "827": 10, "828": 10, "close": [10, 19, 20, 50, 54, 57, 107, 108, 111, 113, 133, 134, 136, 150, 165, 188, 243, 257, 258, 324, 346, 347, 410, 434, 435, 437, 439, 442, 445, 450, 452, 453, 468, 485, 487, 492, 493, 494, 495, 496, 505, 507, 508, 509, 513, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548], "absolut": [10, 150, 161, 191, 201, 429, 487, 512], "bkp": 10, "horn": 10, "opt": [10, 111, 127, 128, 129, 130, 418, 426, 427, 460], "soc": 10, "am": 10, "1987": [10, 201], "629": 10, "642": [10, 468, 517], "sfu": 10, "ca": [10, 449, 537, 538, 539], "jwa3": 10, "cmpt461": 10, "quatut": 10, "back": [10, 17, 50, 147, 150, 191, 254, 383, 386, 391, 392, 430, 439, 442, 468, 471, 507, 509, 546], "jmp": 10, "van": [10, 406, 537, 546], "waveren": 10, "2005": [10, 201, 406, 432], "intel": [10, 201, 382, 465], "cd": [10, 387, 391, 415, 434, 436, 437, 438, 439, 442, 449, 450, 460, 549], "develop": [10, 101, 150, 379, 383, 386, 388, 391, 399, 400, 402, 406, 415, 423, 425, 441, 451, 457, 478, 483, 492, 500, 509, 534, 546], "asmo": 10, "na": 10, "eng": 10, "293748": 10, "htm": [10, 19, 127], "uniform": [10, 279, 520], "random": [10, 20, 32, 48, 56, 57, 60, 201, 259, 296, 316, 406, 477], "iii": 10, "124": [10, 406], "132": [10, 391, 415], "1992": [10, 506, 546], "molecular": [10, 201, 406, 487, 492, 502, 537, 538, 539], "cff": 10, "karnei": 10, "mol": [10, 201, 546], "graph": [10, 87, 101, 104, 106, 110, 125, 139, 141, 150, 155, 212, 392, 397, 402, 437, 444, 477, 509, 538, 539], "mod": [10, 157], "595": 10, "604": 10, "itzhack": 10, "bar": [10, 164, 165, 387, 436, 453, 461, 474, 477, 505, 509, 510, 534], "contr": 10, "1085": 10, "1087": 10, "geometri": [10, 111, 468, 478, 501, 510, 525, 526, 536, 537, 538, 539, 540], "comput": [10, 14, 54, 56, 57, 58, 59, 150, 165, 201, 211, 228, 230, 241, 246, 247, 248, 250, 254, 265, 296, 302, 309, 311, 322, 343, 383, 392, 399, 406, 410, 415, 424, 448, 449, 451, 453, 455, 460, 465, 470, 477, 487, 492, 493, 499, 501, 505, 507, 509, 510, 511, 512, 513, 519, 520, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 547, 548], "vision": [10, 201], "hartlei": 10, "zissermann": 10, "cambridg": [10, 410, 457], "press": [10, 82, 108, 165, 201, 391, 403, 406, 414, 428, 434, 441, 445, 468, 471, 474, 477, 488, 490, 492, 493, 494, 495, 496, 507, 508, 509, 510, 511, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "2nd": [10, 457], "ed": 10, "2004": [10, 201, 406, 509, 510, 525, 537, 546], "chapter": [10, 400, 507, 512, 546], "algorithm": [10, 109, 110, 201, 220, 221, 223, 226, 243, 244, 252, 271, 295, 296, 299, 300, 311, 406, 410, 468, 477, 484, 505, 506, 527, 533, 547], "130": 10, "steve": 10, "hollasch": 10, "net": [10, 401, 406, 444, 456, 547], "cgindex": 10, "math": [10, 435], "vec": 10, "123": 10, "234": [10, 406, 546], "345": 10, "xaxi": 10, "yaxi": 10, "zaxi": 10, "identity_matrix": 10, "rx": 10, "rotation_matrix": 10, "ry": 10, "rz": 10, "concatenate_matric": 10, "euler_from_matrix": 10, "rxyz": 10, "allclos": 10, "euler_matrix": 10, "is_same_transform": 10, "al": [10, 201, 380, 432, 451, 479, 484, 485, 487, 492, 493, 494, 495, 496, 498, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520, 524, 525, 527, 533, 534, 536, 537, 538, 539, 540, 541, 542], "ga": 10, "qx": 10, "quaternion_about_axi": 10, "qy": 10, "qz": 10, "q": [10, 201, 406, 410, 415, 455, 460, 519, 546], "quaternion_multipli": 10, "rq": 10, "quaternion_matrix": 10, "scale_matrix": 10, "translation_matrix": 10, "shear_matrix": 10, "random_rotation_matrix": 10, "rand": 10, "tran": [10, 201], "persp": 10, "decompose_matrix": 10, "tan": 10, "compose_matrix": 10, "v0": 10, "v1": [10, 391, 397, 453], "random_vector": 10, "angle_between_vector": 10, "vector_product": 10, "v2": [10, 435, 492], "unit_vector": 10, "downloadpdb": 11, "getsubsetbydefocu": 11, "inputctf": 11, "inputm": [11, 26, 41, 262], "nmic": 11, "subset": [11, 14, 19, 27, 29, 58, 118, 136, 220, 259, 311, 392, 402, 410, 423, 468, 476, 477, 547], "cover": [11, 392, 406, 468, 479, 480, 487, 488, 492, 511, 512, 520, 547, 548], "whole": [11, 14, 19, 65, 113, 137, 150, 165, 262, 337, 383, 391, 392, 406, 410, 423, 429, 451, 452, 453, 460, 468, 470, 496, 498, 501, 505, 510, 511, 513, 518, 520, 525, 528, 538, 539, 545, 548], "rang": [11, 19, 26, 62, 79, 149, 164, 167, 406, 410, 414, 428, 468, 476, 478, 505, 509, 510, 512, 520, 527, 533, 534, 536, 547], "defocu": [11, 19, 33, 49, 201, 211, 230, 234, 236, 254, 299, 316, 410, 448, 449, 476], "pick": [11, 30, 54, 108, 126, 150, 165, 201, 204, 241, 246, 247, 248, 269, 270, 271, 272, 273, 275, 295, 311, 313, 383, 391, 423, 451, 469, 470, 473, 477, 481, 550], "micrograph": [11, 19, 20, 21, 26, 32, 36, 37, 39, 41, 49, 50, 53, 54, 58, 60, 165, 201, 204, 205, 206, 211, 234, 237, 241, 246, 247, 248, 262, 268, 269, 270, 271, 272, 289, 311, 313, 323, 327, 347, 383, 391, 395, 410, 423, 428, 430, 438, 448, 449, 450, 451, 457, 473, 477, 478, 479, 550], "image_handl": [12, 13], "imagehandl": [14, 285, 410], "sever": [14, 19, 38, 59, 65, 79, 80, 107, 108, 112, 146, 149, 156, 161, 165, 169, 174, 222, 229, 267, 271, 292, 299, 302, 310, 311, 335, 337, 383, 384, 386, 392, 398, 402, 406, 410, 423, 431, 435, 437, 444, 445, 451, 453, 470, 477, 478, 481, 487, 489, 490, 492, 495, 505, 506, 507, 509, 512, 513, 518, 519, 520, 523, 524, 531, 532, 535, 537, 538, 539, 542, 543, 544, 547, 548, 551], "manipul": [14, 423], "addnois": 14, "inputfil": [14, 68], "outputfil": 14, "std": [14, 150, 335, 478, 481], "avg": [14, 19, 478], "gaussian": [14, 165, 279, 283, 327, 410, 423, 468, 473, 477, 478, 512, 520, 525, 526, 534, 548], "nois": [14, 201, 242, 243, 275, 279, 311, 313, 327, 468, 473, 478, 527, 534], "produc": [14, 33, 55, 56, 58, 150, 165, 204, 212, 213, 229, 266, 311, 327, 383, 392, 406, 410, 413, 434, 448, 451, 470, 476, 477, 493, 494, 507, 520, 521, 522, 523, 533, 535], "noisi": [14, 547], "noisestd": 14, "applytransform": [14, 19, 323, 335], "transformmatrix": 14, "fillvalu": 14, "dowrap": 14, "over": [14, 17, 19, 24, 42, 107, 117, 150, 156, 158, 161, 165, 166, 200, 204, 242, 259, 293, 294, 335, 337, 386, 387, 392, 406, 410, 468, 473, 477, 478, 506, 508, 525, 527, 537], "ydim": [14, 19, 112], "xdim": [14, 19, 112, 200, 296, 298], "empti": [14, 17, 19, 79, 80, 92, 129, 136, 145, 149, 150, 154, 161, 164, 165, 166, 168, 174, 204, 317, 319, 392, 397, 410, 430, 435, 437, 439, 442, 445, 452, 453, 454, 460, 477, 492, 493, 509, 526, 527, 528, 534, 535, 538, 547], "region": [14, 26, 322, 406, 414, 415, 428, 441, 468, 478, 487, 489, 491, 493, 504, 505, 507, 509, 510, 520, 526, 527, 536, 537, 538, 539, 547, 548], "due": [14, 66, 137, 165, 402, 406, 434, 468, 477, 487, 490, 492, 502, 505, 507, 542], "wrap": [14, 17, 108, 127, 130, 141, 165, 383, 392, 478, 526], "comparedata": 14, "locationobj1": 14, "locationobj2": 14, "toler": [14, 58, 137, 167, 271, 299, 410, 438, 468], "0001": 14, "compar": [14, 19, 99, 136, 159, 191, 227, 228, 229, 230, 250, 254, 261, 332, 392, 406, 410, 422, 445, 487, 488, 490, 491, 492, 505, 507, 509, 510, 517, 520, 533, 535, 540, 547], "computeaverag": 14, "inputset": [14, 19, 56, 215, 263], "either": [14, 17, 19, 26, 67, 77, 137, 141, 150, 161, 168, 193, 204, 269, 282, 285, 293, 383, 399, 414, 415, 423, 425, 442, 449, 453, 455, 470, 473, 476, 478, 481, 503, 547, 548], "setofimag": [14, 19, 169, 204, 243, 324, 383, 476], "subclass": [14, 33, 38, 44, 49, 53, 54, 67, 105, 106, 107, 108, 127, 129, 132, 133, 136, 137, 145, 150, 154, 156, 166, 234, 270, 391, 431, 435, 452], "iter": [14, 17, 19, 24, 33, 38, 42, 49, 51, 122, 132, 133, 135, 136, 141, 149, 150, 154, 156, 158, 161, 164, 166, 200, 201, 204, 223, 224, 234, 257, 258, 292, 293, 294, 298, 299, 301, 327, 331, 335, 383, 392, 473, 477, 478, 505, 510, 525, 533, 539, 547], "computethumbnail": [14, 26], "inputfn": [14, 26, 213], "outputfn": [14, 26, 204, 213, 218, 287], "scalefactor": [14, 26], "fliponi": 14, "fliponx": 14, "thumbnail": [14, 26, 77, 410], "ouptutfn": 14, "choos": [14, 79, 137, 193, 383, 388, 397, 407, 410, 414, 415, 426, 427, 428, 433, 434, 436, 437, 439, 445, 450, 451, 453, 454, 455, 459, 461, 468, 470, 477, 490, 492, 520, 530, 532, 535, 539, 543, 547, 548], "eg": [14, 423, 477], "smaller": [14, 58, 343, 410, 428, 468, 477, 493, 505, 520, 527, 547, 548], "inputobj": [14, 80], "outputobj": 14, "datatyp": [14, 204], "anoth": [14, 17, 19, 27, 54, 56, 58, 66, 79, 111, 132, 133, 136, 141, 149, 150, 244, 328, 329, 383, 391, 392, 395, 398, 403, 406, 409, 410, 415, 428, 430, 432, 435, 437, 442, 444, 445, 468, 470, 473, 477, 509, 513, 519, 524, 532, 543, 547, 548], "_converttoloc": 14, "convertstack": 14, "firstimg": 14, "lastimg": 14, "informat": 14, "outformat": 14, "infomat": 14, "infer": [14, 137, 184, 205, 463, 487, 501, 502, 513, 519], "firstfram": [14, 19], "lastfram": [14, 19], "dm4": [14, 410, 470], "img": [14, 42, 65, 105, 106, 117, 121, 126, 129, 204, 261, 299, 449, 450], "allow": [14, 19, 24, 42, 58, 75, 79, 80, 99, 101, 106, 107, 108, 117, 130, 133, 136, 137, 150, 156, 161, 165, 167, 168, 188, 201, 229, 254, 286, 296, 383, 391, 399, 400, 402, 406, 407, 410, 414, 415, 423, 424, 425, 434, 436, 441, 451, 453, 460, 468, 470, 471, 473, 477, 478, 481, 484, 485, 487, 492, 500, 501, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 547, 548, 551], "createcircularmask": 14, "radiu": [14, 54, 79, 83, 84, 106, 271, 468, 505, 520, 524, 525, 526, 528, 537, 538, 539, 547], "refimag": 14, "circular": 14, "mask": [14, 19, 21, 24, 25, 35, 37, 53, 83, 84, 265, 276, 278, 280, 281, 285, 299, 301, 322, 391, 402, 410, 441, 465, 468, 499, 505, 509, 510, 511, 512, 517, 520, 525, 527, 534, 537, 538, 539, 544, 545, 547], "less": [14, 38, 101, 149, 150, 164, 243, 327, 383, 392, 410, 444, 448, 468, 488, 492, 493, 495, 519], "dim": [14, 26, 64, 68, 111, 112], "createemptyimag": 14, "fnout": [14, 200, 301, 305], "zdim": [14, 19], "ndim": [14, 32], "createimag": 14, "existsloc": 14, "locationobj": 14, "fixxmippvolumefilenam": 14, "becaus": [14, 204, 285, 311, 383, 391, 392, 405, 406, 422, 430, 434, 435, 438, 449, 468, 487, 506, 507, 508, 509, 510, 511, 512, 517, 524, 525, 527, 528, 532, 533, 547], "distinguish": [14, 19, 204, 488, 507, 527, 536], "2d": [14, 19, 24, 25, 36, 45, 201, 204, 223, 224, 225, 232, 259, 271, 280, 335, 391, 392, 402, 406, 410, 447, 451, 453, 457, 476, 477, 478, 547, 548, 550], "getdatatyp": [14, 19], "getdimens": [14, 19, 106, 109], "where": [14, 17, 19, 79, 101, 105, 108, 117, 121, 123, 125, 126, 129, 133, 135, 136, 140, 141, 145, 146, 150, 167, 168, 184, 204, 206, 243, 271, 311, 313, 323, 383, 386, 395, 397, 400, 405, 406, 410, 415, 421, 422, 428, 434, 435, 436, 439, 442, 444, 447, 450, 452, 453, 454, 455, 456, 460, 463, 464, 468, 470, 472, 475, 477, 480, 481, 487, 492, 505, 512, 515, 519, 520, 525, 530, 549], "element": [14, 17, 19, 35, 58, 79, 80, 105, 107, 108, 117, 119, 120, 121, 123, 126, 129, 130, 132, 133, 136, 139, 149, 154, 156, 167, 168, 174, 335, 402, 422, 432, 437, 445, 451, 468, 492, 493, 501, 505, 508, 510, 511, 513, 520, 522, 525, 526, 535, 547], "getsupporteddatatyp": 14, "indatatyp": 14, "outputfilenam": [14, 303, 306], "most": [14, 91, 126, 133, 187, 201, 296, 310, 382, 383, 386, 391, 392, 396, 397, 398, 406, 410, 422, 423, 425, 432, 435, 441, 444, 445, 447, 449, 453, 456, 463, 468, 472, 477, 481, 487, 488, 492, 509, 510, 511, 520, 523, 527, 530, 533, 538, 539, 547, 548], "similar": [14, 126, 133, 136, 141, 149, 150, 161, 201, 229, 300, 313, 321, 329, 383, 386, 391, 392, 399, 406, 421, 422, 442, 449, 452, 453, 470, 477, 487, 490, 491, 492, 501, 505, 506, 507, 509, 510, 511, 513, 520, 527, 533, 535, 538, 539, 541, 546, 547], "support": [14, 17, 35, 44, 55, 127, 137, 165, 168, 184, 200, 386, 387, 388, 391, 397, 406, 410, 414, 425, 426, 427, 429, 433, 434, 442, 470, 473, 477, 478, 481, 510, 522, 524, 525, 537, 550], "getthumbnailfn": [14, 26], "replac": [14, 38, 105, 127, 136, 141, 147, 157, 161, 165, 167, 181, 261, 383, 391, 399, 410, 415, 434, 435, 442, 450, 453, 460, 462, 468, 478, 488, 493, 499, 508, 509, 510, 522, 523, 524, 530], "thumb": [14, 450], "png": [14, 55, 419, 513, 544], "getvolfilenam": 14, "invertstack": 14, "isimagefil": 14, "imgfn": 14, "bind": [14, 101, 108, 199, 423, 502, 536, 546], "locationtoxmipp": [14, 204], "str": [14, 42, 44, 107, 127, 129, 136, 167, 201, 435, 452], "removefiletyp": 14, "rotatevolum": 14, "shift": [14, 19, 26, 27, 165, 204, 294, 314, 315, 343, 389, 406, 410, 451, 468, 473, 477, 478, 526, 547, 548], "scale2dstack": 14, "finaldimens": 14, "pil": [14, 64], "scalefouri": 14, "crop": [14, 26, 282, 289, 468, 520], "scalesplin": 14, "forcevolum": 14, "spline": [14, 201, 410], "truncatemask": 14, "newdim": [14, 19], "addition": [14, 200, 383, 391, 406, 435, 453, 471, 505, 507, 510, 537, 538, 539, 551], "pair": [17, 19, 20, 39, 53, 60, 111, 146, 154, 167, 201, 204, 248, 272, 295, 414, 415, 423, 428, 453, 465, 492, 525, 536, 537, 538, 539], "addtomd": 17, "clone": [17, 19, 136, 387, 391, 397, 415, 437, 438, 462], "exactli": [17, 386, 453, 542], "containsal": 17, "containsani": 17, "least": [17, 35, 107, 140, 300, 311, 391, 398, 435, 437, 449, 452, 453, 455, 461, 473, 485, 510, 520, 524, 535, 536, 547], "containslabel": 17, "copyfromrow": 17, "getobjid": [17, 136, 141, 151, 392, 452], "getvalu": [17, 66, 129, 130, 151], "getvalueasobject": 17, "haslabel": [17, 154], "printdict": 17, "fanci": 17, "print": [17, 94, 99, 101, 136, 137, 150, 154, 157, 164, 165, 187, 392, 395, 408, 409, 415, 434, 435, 437, 442, 444, 450, 481, 524], "mainli": [17, 25, 29, 53, 108, 109, 136, 137, 150, 174, 311, 392, 399, 402, 406, 410, 451, 487, 490, 493, 509], "debug": [17, 68, 101, 136, 137, 150, 166, 327, 396, 407, 408, 410, 437, 440, 492], "readfromfil": 17, "fn": [17, 62, 150, 157, 161, 200, 204, 238, 271, 335, 450], "readfrommd": 17, "objid": [17, 58, 129, 132, 133, 135, 136, 141, 146, 164, 204], "removelabel": 17, "setvalu": [17, 19, 66, 151], "desir": [17, 58, 108, 111, 126, 167, 325, 391, 434, 436, 438, 439, 441, 453, 468, 477, 501, 504, 505, 524, 525, 529, 542, 547, 548], "writetofil": 17, "writetomd": 17, "rowmetadata": 17, "wrapper": [17, 19, 65, 67, 68, 71, 72, 73, 74, 75, 77, 108, 129, 136, 145, 150, 161, 204, 249, 263, 264, 338, 340, 352, 383, 391, 406, 411, 437, 476, 481], "setmditer": 17, "sortbylabel": 17, "keylabel": 17, "197": [17, 201, 204], "updateitemcallback": [17, 19, 67], "skipdis": 17, "skip": [17, 19, 200, 311, 387, 408, 413, 449, 453, 464, 487, 492, 506], "copyitem": [17, 19], "higher": [17, 57, 150, 189, 313, 391, 428, 468, 487, 489, 492, 493, 501, 505, 509, 510, 514, 517, 520, 535, 536, 537, 538, 539, 547, 548], "updateitem": 17, "callback": [17, 19, 78, 81, 105, 107, 108, 111, 117, 130, 136, 145, 161, 167], "filter": [17, 19, 25, 53, 57, 79, 124, 133, 136, 141, 159, 212, 235, 242, 283, 383, 391, 392, 402, 410, 413, 433, 465, 477, 512, 520, 533, 534, 547, 548], "dropcolumn": 17, "mdobj": [17, 19], "drop": [17, 435, 477], "int": [17, 107, 119, 129, 136, 167, 312], "getfirstrow": 17, "mdorfn": 17, "getlabel": [17, 66, 107, 139, 146, 149, 156, 158], "getsiz": [17, 19, 105, 136, 150, 156, 200, 335, 392, 452], "size": [17, 19, 27, 39, 65, 77, 101, 105, 107, 110, 111, 113, 115, 118, 119, 120, 121, 125, 150, 154, 161, 165, 167, 188, 193, 200, 204, 205, 243, 268, 278, 299, 301, 328, 335, 337, 398, 406, 410, 414, 415, 419, 421, 428, 432, 433, 437, 450, 453, 468, 470, 473, 476, 477, 478, 492, 493, 494, 495, 496, 505, 512, 517, 526, 527, 528, 529, 530, 531, 532, 533, 541, 543, 547, 548], "without": [17, 101, 109, 136, 150, 164, 167, 195, 201, 383, 388, 391, 392, 400, 406, 410, 411, 418, 422, 432, 433, 441, 453, 464, 468, 478, 481, 509, 520, 521, 522, 523, 524, 535, 537, 538, 539, 543, 547, 548], "entir": [17, 383, 391], "isempti": [17, 136, 139, 200], "getmdsiz": 17, "iterrow": [17, 156], "sort": [17, 38, 55, 108, 129, 167, 200, 201, 220, 410, 445, 468, 476, 477, 494, 537, 538, 539], "befor": [17, 19, 44, 97, 101, 107, 108, 117, 136, 139, 141, 145, 149, 150, 165, 204, 215, 242, 299, 329, 383, 386, 387, 391, 392, 399, 400, 401, 405, 406, 409, 410, 415, 423, 428, 435, 436, 437, 441, 447, 451, 452, 453, 461, 464, 468, 473, 474, 477, 481, 487, 489, 490, 492, 493, 501, 503, 505, 507, 508, 509, 510, 511, 520, 522, 524, 533, 535, 538, 539, 540, 542, 547, 548, 549], "joinblock": 17, "inputmd": [17, 204], "blockprefix": 17, "keepcolumn": 17, "label2python": 17, "float": [17, 30, 48, 77, 129, 133, 136, 167, 294, 383, 392, 430, 431, 434, 437, 438, 453], "bool": [17, 136], "label_int": 17, "label_doubl": 17, "basic": [19, 105, 111, 127, 130, 134, 136, 137, 145, 146, 150, 204, 278, 383, 391, 392, 399, 401, 402, 406, 415, 416, 430, 433, 438, 440, 441, 449, 451, 453, 480, 486, 492, 500, 509, 512, 524, 525, 537, 538, 539, 547, 548, 549], "hierarchi": [19, 133, 136, 220, 392, 397, 407, 419], "acquisit": [19, 41, 42, 49, 204, 205, 383, 406, 410, 430, 449, 450, 451, 453, 455, 532, 547, 548], "kwarg": [19, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 105, 106, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 120, 125, 129, 130, 133, 136, 139, 140, 141, 145, 146, 149, 150, 154, 169, 184, 187, 188, 193, 200, 204, 212, 213, 215, 216, 217, 218, 219, 221, 223, 224, 225, 227, 229, 231, 233, 235, 236, 240, 241, 242, 244, 245, 246, 247, 248, 251, 252, 255, 256, 257, 258, 260, 263, 264, 266, 270, 274, 279, 280, 281, 282, 283, 285, 287, 288, 293, 294, 297, 299, 300, 301, 302, 308, 310, 312, 313, 314, 315, 316, 317, 319, 322, 324, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 340, 343, 346, 347, 352, 392, 430, 435, 447], "emobject": [19, 20, 77, 137, 204], "copyinfo": [19, 200], "getamplitudecontrast": 19, "getdoseiniti": 19, "getdoseperfram": 19, "getmagnif": 19, "getsphericalaberr": 19, "getvoltag": 19, "setamplitudecontrast": 19, "setdoseiniti": 19, "setdoseperfram": 19, "setmagnif": 19, "setsphericalaberr": 19, "setvoltag": 19, "atomstruct": [19, 70, 80, 492, 493, 494, 495, 496, 518, 520, 521, 522, 523, 524, 529, 535, 541, 542], "pseudoatom": [19, 492, 493, 494, 495, 496, 518, 520, 521, 522, 523, 524, 525, 529, 535, 541, 542], "emfil": 19, "getpseudoatom": 19, "getvolum": 19, "hasorigin": 19, "hasvolum": 19, "neworigin": 19, "setpseudoatom": 19, "setvolum": 19, "ctfmodel": [19, 49, 204, 283, 410], "ctf": [19, 21, 32, 33, 37, 41, 49, 58, 165, 201, 204, 205, 234, 235, 236, 237, 254, 283, 293, 294, 316, 343, 383, 391, 392, 402, 423, 430, 448, 449, 451, 452, 454, 477, 478, 550], "defocus_ratio_error_valu": 19, "defocus_v_minimum_valu": 19, "equalattribut": [19, 136], "ignor": [19, 66, 68, 136, 154, 430, 437, 464, 468, 493, 509, 526, 537, 538, 539], "verbos": [19, 99, 136, 163, 168, 395], "overrid": [19, 44, 66, 111, 118, 125, 145, 464, 481], "behaviour": [19, 111, 132, 133, 271, 434, 435, 447, 538, 539], "psdfile": 19, "getdefocu": 19, "defocusu": [19, 136, 410, 450], "defocusv": [19, 410, 450], "defocusangl": 19, "getdefocusangl": 19, "getdefocusratio": 19, "getdefocusu": 19, "getdefocusv": 19, "getfitqu": 19, "getmicrograph": 19, "getphaseshift": 19, "getpsdfil": 19, "getresolut": 19, "hasphaseshift": 19, "hasresolut": 19, "setdefocusangl": 19, "setdefocusu": 19, "setdefocusv": 19, "setfitqu": 19, "setmicrograph": 19, "mic": [19, 32, 39, 41, 165, 204, 205, 237, 248, 262, 271, 273, 311, 323], "setphaseshift": 19, "setpsdfil": [19, 204], "setresolut": 19, "setstandarddefocu": 19, "emx": [19, 45, 402, 470], "_standard": 19, "conform": [19, 201, 244, 524, 537, 538, 539], "180": [19, 391, 432, 510, 519], "defocusang": 19, "determin": [19, 61, 150, 154, 157, 201, 217, 228, 250, 296, 306, 391, 392, 406, 410, 422, 457, 464, 468, 502, 503, 510, 525, 528, 533, 534, 538, 539, 546, 547, 548], "defocusratio": 19, "detail": [19, 118, 188, 382, 383, 391, 392, 395, 399, 405, 406, 408, 410, 413, 414, 415, 425, 428, 429, 434, 436, 442, 444, 445, 448, 449, 453, 455, 461, 464, 468, 470, 473, 474, 477, 481, 487, 488, 489, 490, 491, 492, 501, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 519, 520, 524, 526, 527, 533, 535, 536, 537, 538, 539, 549], "i2pc": [19, 101, 102, 103, 173, 201, 306, 382, 388, 391, 397, 410, 421, 425, 427, 453, 457, 465], "cnb": [19, 101, 201, 218, 386, 401, 406, 410, 414, 422, 424, 428, 448, 449, 451, 456, 457, 465, 483, 500, 550], "csic": [19, 101, 201, 218, 380, 386, 401, 406, 410, 422, 424, 428, 448, 449, 451, 456, 465, 483, 500, 550], "loaddictionaryformat": 19, "class2d": [19, 20, 136, 204, 447], "setofparticl": [19, 53, 54, 204, 211, 221, 230, 239, 244, 282, 285, 288, 311, 392, 410, 430, 433, 452, 477], "usual": [19, 54, 58, 129, 141, 204, 205, 231, 241, 272, 383, 391, 392, 395, 398, 399, 400, 406, 409, 410, 414, 422, 442, 451, 452, 453, 464, 465, 470, 478, 487, 494, 495, 505, 506, 510, 513, 520, 521, 522, 527, 533, 535, 536, 537, 539, 547, 548], "kind": [19, 58, 169, 205, 311, 392, 398, 406, 433, 449, 460, 468, 476], "_mapperpath": 19, "properti": [19, 20, 41, 47, 66, 87, 133, 136, 150, 155, 156, 166, 169, 204, 270, 335, 383, 392, 397, 398, 460, 478, 524, 528, 537, 547, 548], "_size": 19, "class3d": [19, 204], "reconstruct": [19, 56, 201, 294, 297, 298, 299, 327, 391, 406, 410, 468, 477, 501, 503, 504, 511, 512, 513, 519, 520, 527, 544, 546, 547, 548, 550], "rep_typ": 19, "alia": [19, 20, 111, 151, 158, 184, 263, 285, 400, 414, 426, 428, 461], "classvol": [19, 204], "setofvolum": [19, 47, 256, 282, 285, 288, 430, 476, 533], "hold": [19, 105, 108, 136, 149, 156, 188, 383, 430, 477, 478], "posit": [19, 79, 80, 84, 106, 109, 110, 125, 129, 130, 165, 167, 204, 311, 335, 391, 392, 395, 402, 406, 407, 413, 432, 437, 442, 468, 487, 492, 493, 494, 495, 496, 509, 510, 512, 518, 519, 521, 522, 523, 524, 525, 527, 528, 529, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 547], "associ": [19, 41, 101, 105, 108, 111, 122, 126, 136, 139, 141, 150, 169, 188, 204, 241, 246, 248, 262, 311, 391, 398, 410, 414, 423, 425, 453, 460, 464, 470, 477, 502, 506, 509, 512, 513, 518, 520, 521, 522, 523, 524, 525, 527, 529, 532, 535, 537, 538, 539, 541, 542, 543, 544, 547, 548], "coord": [19, 39, 82, 128, 204, 271, 410, 470], "getmicid": [19, 271], "getmicnam": 19, "getposit": [19, 139], "select": [19, 30, 58, 59, 79, 80, 96, 105, 106, 107, 108, 115, 117, 118, 120, 123, 125, 126, 127, 129, 130, 132, 133, 135, 139, 141, 149, 156, 165, 174, 188, 201, 222, 234, 256, 270, 271, 296, 314, 335, 346, 347, 383, 391, 392, 395, 397, 398, 402, 407, 410, 413, 414, 415, 428, 434, 436, 444, 445, 449, 450, 453, 460, 468, 469, 470, 471, 473, 477, 478, 480, 487, 488, 489, 490, 492, 493, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 542, 543, 544, 547, 548], "top": [19, 77, 79, 106, 115, 165, 188, 383, 388, 399, 400, 407, 409, 414, 426, 427, 428, 435, 436, 437, 442, 444, 445, 451, 453, 461, 468, 470, 474, 477, 478, 492, 493, 494, 495, 496, 501, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "left": [19, 26, 79, 80, 84, 105, 106, 108, 115, 118, 125, 165, 188, 222, 387, 391, 392, 407, 414, 415, 426, 427, 428, 434, 435, 437, 444, 453, 468, 470, 474, 477, 478, 487, 501, 505, 507, 509, 510, 520, 534, 535, 547, 548], "corner": [19, 84, 387, 414, 426, 427, 428, 468, 470, 487, 492, 507, 535], "getx": [19, 139, 335], "geti": [19, 110, 139, 335], "inverti": 19, "both": [19, 26, 44, 58, 67, 154, 187, 227, 248, 262, 287, 288, 294, 322, 328, 383, 386, 391, 392, 402, 406, 410, 414, 415, 421, 426, 429, 432, 434, 436, 437, 441, 442, 447, 449, 468, 470, 471, 474, 476, 485, 487, 490, 491, 492, 493, 503, 505, 507, 509, 510, 511, 512, 517, 520, 523, 527, 528, 534, 535, 538, 539, 547, 548, 551], "setmicid": 19, "micid": [19, 49, 237, 248, 271, 273], "setmicnam": 19, "micnam": [19, 49, 54, 271, 273], "belong": [19, 150, 435, 453, 468, 476, 519], "setposit": [19, 139], "setx": [19, 139, 335], "seti": [19, 139, 335], "shiftx": 19, "shifti": 19, "defocusgroup": [19, 204], "addctf": 19, "min": [19, 68, 136, 149, 261, 465, 468, 525, 527, 534, 537], "max": [19, 68, 136, 149, 261, 410, 451, 460, 468, 525, 527, 534, 536, 537, 542], "containsctf": 19, "getdefocusavg": 19, "getdefocusmax": 19, "getdefocusmin": 19, "getfilenam": [19, 67, 105, 136, 200], "_objvalu": 19, "setfilenam": 19, "getfil": [19, 20, 42, 60, 136, 150, 154, 161, 438, 447], "filepath": [19, 20, 161, 165, 167], "emset": [19, 20, 77, 452], "prefix": [19, 20, 58, 62, 122, 125, 133, 136, 150, 157, 161, 167, 204, 383, 391, 395, 415, 422, 447, 460, 473, 492, 507, 508, 509, 510, 511, 512, 521, 522, 523, 535], "mapperclass": [19, 20, 136, 150], "classesdict": [19, 20, 129, 136], "dummi": [19, 444], "otherset": 19, "itemdataiter": [19, 67], "copydis": 19, "doclon": 19, "apart": [19, 399, 408, 468, 547, 548, 549], "special": [19, 20, 38, 42, 65, 135, 136, 150, 169, 174, 187, 294, 337, 391, 399, 402, 406, 410, 435, 448, 451, 452, 460, 463, 464, 477, 478, 505, 509, 511, 512, 544, 547], "_appenditem": 19, "come": [19, 42, 58, 136, 149, 204, 297, 410, 437, 441, 442, 447, 451, 468, 478, 510, 547, 548], "star": [19, 45, 297, 386, 392, 410, 415, 423, 468, 470, 478, 490], "By": [19, 107, 108, 117, 132, 133, 136, 145, 150, 159, 386, 392, 405, 414, 422, 433, 444, 445, 455, 468, 470, 474, 492, 505, 507, 508, 509, 510, 511, 513, 518, 519, 520, 524, 526, 530, 532, 535, 536, 537, 539, 547, 548], "disabl": [19, 29, 59, 126, 149, 150, 165, 173, 188, 311, 397, 410, 464, 477, 478], "enabl": [19, 29, 101, 130, 136, 156, 165, 188, 311, 383, 399, 406, 410, 415, 430, 451, 459, 461, 477, 478, 487], "insert": [19, 79, 105, 108, 117, 121, 126, 129, 132, 133, 135, 136, 150, 188, 311, 383, 392, 430, 434, 435, 437, 453, 477], "overhead": [19, 386, 445], "outputpath": 19, "suffix": [19, 36, 60, 161, 167, 243, 293, 294, 473, 494, 495, 496, 507, 508], "deduc": [19, 133], "classnam": [19, 58, 108, 132, 133, 135, 136, 137, 141, 154, 419, 431, 436], "addit": [19, 164, 199, 323, 335, 388, 391, 395, 401, 410, 422, 432, 435, 449, 451, 452, 453, 464, 468, 483, 487, 490, 492, 493, 494, 495, 496, 500, 501, 505, 508, 509, 510, 511, 512, 513, 514, 518, 519, 520, 521, 523, 524, 525, 527, 528, 530, 535, 537, 541, 542, 544], "sqlite": [19, 29, 41, 45, 65, 77, 87, 131, 134, 136, 141, 150, 156, 206, 261, 311, 383, 402, 410, 422, 423, 430, 435, 437, 470, 478], "createcopi": 19, "creation": [19, 80, 108, 111, 133, 136, 141, 387, 397, 402, 406, 410, 423, 427, 431, 526], "fsc": [19, 69, 245, 265, 302, 410, 476, 478, 512, 513, 520, 525, 537, 538, 539, 544], "shell": [19, 62, 201, 306, 406, 433, 442, 449, 461, 478, 525, 527, 537, 538, 539], "correl": [19, 209, 212, 222, 223, 224, 225, 230, 249, 261, 299, 301, 320, 323, 406, 410, 473, 478, 509, 510, 517, 525, 533, 535, 537, 538, 539], "calculateresolut": 19, "threshold": [19, 84, 149, 165, 201, 243, 261, 262, 273, 287, 302, 311, 313, 346, 347, 410, 423, 435, 448, 473, 489, 490, 493, 505, 510, 512, 526, 534, 536, 537, 538, 539], "143": [19, 538, 539], "resolut": [19, 65, 70, 79, 113, 201, 234, 299, 301, 302, 303, 304, 305, 307, 327, 328, 331, 337, 343, 391, 406, 410, 450, 455, 485, 489, 490, 491, 493, 494, 495, 496, 499, 500, 502, 503, 505, 506, 508, 509, 510, 512, 513, 517, 520, 525, 527, 533, 534, 536, 537, 538, 539, 541, 542, 546, 550], "getdata": [19, 335, 450], "loadfrommd": 19, "labelx": 19, "labe": 19, "frequenc": [19, 149, 322, 525, 533, 534, 537, 538, 539], "setdata": [19, 392], "xdata": 19, "ydata": 19, "framesrang": 19, "firstframeindex": 19, "csvlist": [19, 136], "movi": [19, 26, 32, 44, 50, 51, 165, 201, 204, 247, 249, 260, 261, 262, 263, 286, 391, 395, 405, 428, 429, 436, 441, 448, 449, 451, 452, 453, 454, 455, 479, 550], "alwai": [19, 38, 107, 108, 117, 140, 145, 383, 386, 400, 410, 422, 430, 450, 453, 464, 468, 481, 496, 505, 520, 527, 547], "initi": [19, 25, 79, 101, 107, 108, 117, 129, 130, 141, 167, 173, 201, 204, 252, 259, 292, 293, 294, 295, 296, 299, 300, 311, 386, 391, 392, 397, 402, 406, 408, 410, 414, 425, 428, 435, 445, 451, 452, 461, 468, 480, 485, 493, 494, 495, 496, 500, 501, 503, 505, 507, 509, 510, 512, 517, 518, 524, 525, 528, 535, 536, 541, 542, 547, 548, 550], "import": [19, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 60, 79, 101, 124, 137, 140, 141, 149, 150, 156, 165, 167, 174, 187, 193, 195, 204, 205, 383, 390, 391, 392, 397, 401, 402, 406, 407, 408, 414, 426, 427, 428, 434, 435, 437, 438, 439, 441, 442, 447, 449, 451, 452, 453, 454, 460, 474, 477, 480, 487, 489, 492, 493, 494, 495, 496, 503, 505, 507, 509, 510, 513, 520, 533, 534, 542, 544, 545], "count": [19, 106, 133, 136, 158, 409, 434, 444, 505, 509, 513, 520, 536], "goe": [19, 56, 57, 108, 159, 391, 435, 442, 453, 468, 480, 509, 528], "underli": [19, 20, 108, 136, 149, 383, 470], "keep": [19, 29, 57, 66, 110, 125, 130, 136, 188, 227, 229, 322, 383, 399, 400, 402, 406, 410, 415, 424, 431, 437, 450, 451, 453, 456, 460, 468, 488, 524, 526], "again": [19, 383, 391, 399, 400, 401, 422, 428, 429, 430, 434, 437, 450, 464, 468, 471, 474, 487, 488, 490, 492, 493, 494, 495, 496, 508, 509, 510, 511, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549], "getfirstfram": 19, "getfirstframeindex": 19, "getlastfram": 19, "getrang": 19, "rangestr": [19, 167], "setfirstfram": 19, "setfirstframeindex": 19, "setlastfram": 19, "copyloc": 19, "getacquisit": [19, 42], "getbasenam": 19, "getctf": 19, "redund": [19, 79, 513, 519], "easier": [19, 422, 447, 448, 468, 473, 481, 505, 520, 524, 527, 533, 542, 547, 548], "getformat": [19, 39, 40], "getindex": [19, 127, 130, 150, 151], "getloc": 19, "sens": [19, 147, 191, 392, 437, 452, 485, 490, 512, 537, 542], "getsamplingr": 19, "pix": [19, 27], "getshiftsfromorigin": 19, "gettransform": 19, "getxdim": 19, "getydim": 19, "hasacquisit": 19, "hasctf": [19, 136, 204, 392], "hastransform": 19, "originresampl": 19, "originnotresampl": 19, "oldsampl": 19, "setacquisit": 19, "setctf": 19, "newctf": 19, "setindex": [19, 127, 150], "setloc": 19, "impli": [19, 36, 204, 392, 406, 414, 510, 547, 548], "no_index": 19, "setsamplingr": [19, 44, 45, 437], "setshiftsinorigin": 19, "settransform": 19, "newtransform": 19, "imagedim": [19, 430], "getz": [19, 335], "scalar": [19, 108, 136, 139, 383, 410, 452], "getmatrix": 19, "getobjvalu": [19, 136, 139, 149], "good": [19, 54, 136, 139, 242, 387, 391, 392, 406, 415, 428, 430, 437, 442, 449, 450, 464, 468, 481, 492, 493, 505, 506, 509, 512, 513, 517, 527, 533, 536, 537, 547, 548], "setmatrix": 19, "getalign": 19, "consid": [19, 129, 271, 301, 311, 406, 409, 414, 423, 434, 449, 453, 460, 464, 468, 477, 481, 489, 490, 492, 493, 501, 505, 507, 508, 509, 510, 511, 512, 513, 517, 519, 520, 523, 524, 525, 526, 527, 532, 534, 535, 536, 537, 538, 539, 542, 547, 548], "compress": [19, 47, 51, 422, 479], "getframesrang": 19, "getnumberoffram": 19, "hasalign": [19, 51, 136], "iscompress": 19, "setalign": 19, "setframesrang": 19, "moviealign": 19, "total": [19, 164, 167, 262, 405, 410, 414, 415, 435, 449, 460, 505, 509, 513, 525, 533, 536, 537, 542, 547], "getroi": 19, "getshift": [19, 36], "setroi": 19, "roilist": 19, "movieparticl": 19, "getframeid": 19, "getparticleid": [19, 229], "setframeid": 19, "frameid": 19, "setparticleid": 19, "partid": 19, "normalmod": 19, "getcollect": 19, "getmodefil": 19, "getscor": 19, "setcollect": 19, "setmodefil": 19, "setscor": 19, "getclassid": 19, "getcoordin": [19, 106], "_micid": 19, "hasclassid": 19, "hascoordin": 19, "hasmicid": 19, "scalecoordin": 19, "setclassid": 19, "classid": [19, 204], "setcoordin": 19, "aminoacid": [19, 46, 80, 487, 493, 502, 503, 507, 509, 510, 520, 526, 530, 536, 542], "nucleotid": [19, 46, 530], "ones": [19, 99, 109, 184, 193, 204, 241, 246, 247, 248, 270, 273, 335, 383, 392, 395, 402, 406, 409, 410, 429, 430, 434, 453, 468, 477, 490, 503, 505, 506, 509, 510, 517, 519, 520, 525, 530, 535, 542, 551], "appendtofil": 19, "seqfilenam": 19, "export": [19, 141, 150, 165, 391, 397, 402, 410, 435, 445, 450, 451, 453, 460, 481, 513, 543, 544], "alreadi": [19, 50, 136, 137, 141, 200, 204, 311, 383, 391, 397, 398, 400, 406, 410, 414, 422, 436, 437, 438, 439, 442, 448, 450, 453, 461, 462, 464, 481, 492, 507, 508, 510, 511, 512, 513, 517, 520, 528, 530, 535, 543, 547, 548], "exporttofil": 19, "getalphabet": 19, "getdescript": [19, 151], "getid": [19, 139, 335], "getisaminoacid": 19, "getseqnam": 19, "getsequ": [19, 80], "importfromfil": 19, "setdescript": 19, "setid": 19, "setseqnam": 19, "setsequ": 19, "setofatomstruct": [19, 70], "expose_item": 19, "item_typ": [19, 20, 136], "setofaverag": 19, "differenti": [19, 54, 485, 507, 520], "setofctf": [19, 49, 77, 204, 205, 450, 452, 477], "estim": [19, 33, 39, 49, 165, 201, 204, 230, 234, 237, 251, 261, 268, 271, 306, 310, 323, 343, 391, 392, 405, 428, 444, 449, 451, 452, 454, 465, 468, 470, 477, 493, 505, 525, 534, 538, 539, 546, 547, 548, 550], "setofclass": [19, 20, 31, 77, 136, 204, 410, 430, 452, 477], "were": [19, 105, 108, 117, 120, 126, 129, 183, 204, 383, 386, 392, 410, 414, 419, 424, 436, 468, 474, 503, 509, 512, 517, 520, 535, 538, 539, 542, 547], "setofmicrograph": [19, 41, 44, 204, 205, 383, 452, 476], "pointer": [19, 108, 136, 149, 150, 431, 434, 468, 481, 548], "result": [19, 36, 48, 57, 58, 70, 133, 136, 147, 149, 150, 154, 165, 169, 184, 200, 201, 205, 211, 220, 221, 231, 232, 241, 246, 247, 248, 252, 309, 310, 340, 383, 386, 392, 402, 406, 410, 414, 422, 423, 425, 434, 438, 441, 442, 444, 447, 450, 451, 453, 468, 470, 473, 476, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 505, 507, 508, 509, 510, 511, 512, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 550], "classif": [19, 24, 36, 58, 201, 232, 252, 271, 294, 383, 392, 402, 410, 428, 447, 451, 453, 477, 478, 480, 510, 550], "appendfromclass": 19, "classesset": [19, 31, 204], "filterclassfunc": 19, "updateclasscallback": [19, 204], "classifyitem": 19, "classifydis": 19, "iterparam": [19, 149], "classifi": [19, 204, 220, 226, 252, 317, 319, 391, 392, 402, 410, 423, 447, 453, 473, 477], "getimag": [19, 106, 107, 111, 129], "regist": [19, 42, 46, 47, 54, 60, 64, 75, 105, 111, 118, 132, 133, 137, 149, 150, 158, 231, 241, 272, 383, 392, 406, 414, 423, 433, 434, 435, 441, 452, 468, 473, 477, 478, 547, 548], "invok": [19, 42, 94, 145, 150, 200, 392, 395, 423, 433, 437, 444, 447], "loop": [19, 129, 164, 293, 410, 415, 430, 435, 437, 495, 524], "xmd": [19, 41, 45, 204, 205, 222, 270, 283, 297, 311, 314, 322, 392], "sync": [19, 159, 387, 395], "leav": [19, 128, 129, 395, 428, 437, 445, 453, 468, 547, 548], "oot": [19, 546], "getfirstitem": [19, 80, 136], "getimagespoint": 19, "hasrepres": [19, 136], "iterclassitem": 19, "iterdis": 19, "iteritem": [19, 136, 430], "orderbi": [19, 133, 136], "direct": [19, 44, 51, 56, 127, 129, 132, 133, 136, 141, 158, 201, 297, 392, 406, 410, 432, 438, 451, 452, 503, 507, 509, 513, 525, 537, 546, 550], "asc": [19, 57, 133, 136, 478], "iterrepres": 19, "setimag": [19, 130], "indirect": 19, "extend": [19, 66, 105, 106, 107, 115, 117, 118, 120, 125, 136, 382, 383, 392, 397, 406, 423, 424, 430, 530, 547, 551], "setofclasses2d": [19, 204, 220, 222, 232, 392, 410], "writestack": [19, 410], "fnstack": 19, "setofclasses3d": [19, 229], "setofclassesvol": [19, 204], "setofcoordin": [19, 41, 54, 204, 241, 246, 248, 272, 452], "encapsul": [19, 111, 448, 470], "logic": [19, 108, 129, 201, 383, 391, 392, 406, 409, 423, 434, 452], "about": [19, 62, 101, 103, 105, 107, 125, 137, 140, 146, 150, 154, 172, 382, 383, 386, 391, 392, 396, 398, 400, 401, 407, 415, 422, 424, 425, 432, 434, 436, 437, 439, 444, 453, 457, 460, 461, 464, 465, 468, 470, 474, 477, 479, 483, 487, 488, 489, 492, 493, 500, 503, 504, 506, 507, 509, 513, 519, 520, 526, 532, 534, 538, 539, 542, 544, 547, 548, 549], "tiltpair": [19, 20, 410, 423], "boxsiz": [19, 30, 204, 246, 275, 410], "getboxs": [19, 20, 205, 241, 246], "itercoordin": 19, "perform": [19, 25, 49, 53, 54, 165, 212, 229, 235, 238, 259, 266, 271, 276, 299, 311, 314, 329, 383, 386, 387, 392, 395, 398, 402, 405, 406, 408, 410, 428, 433, 444, 445, 449, 450, 468, 480, 487, 488, 489, 490, 491, 492, 505, 507, 508, 509, 510, 511, 512, 513, 518, 520, 521, 522, 524, 527, 533, 535, 536, 539, 542, 544, 547, 548, 550], "itermicrographcoordin": 19, "itermicrograph": 19, "setboxs": 19, "setofdefocusgroup": 19, "getavgset": 19, "getmaxset": 19, "getminset": 19, "setavgset": 19, "setmaxset": 19, "setminset": 19, "grouprang": 19, "1000": [19, 133, 149, 164, 207, 406, 410, 509, 537, 538, 539, 542], "groupmins": 19, "impos": [19, 406], "getgroupbyctf": 19, "getgroupbynam": 19, "groupnam": [19, 149], "setoffsc": 19, "appendfromimag": 19, "imagesset": 19, "everi": [19, 66, 149, 154, 313, 414, 422, 430, 431, 437, 444, 445, 447, 449, 451, 452, 453, 460, 468, 473, 502, 507, 509, 510, 520, 522, 524, 525, 536, 542], "hasalignment2d": [19, 447], "hasalignment3d": 19, "hasalignmentproj": 19, "isamplitudecorrect": 19, "isoddx": 19, "isphaseflip": 19, "limit": [19, 62, 133, 136, 410, 414, 415, 425, 437, 473, 490, 491, 492, 494, 495, 496, 501, 512, 520, 525, 537, 547, 548], "redefin": [19, 391, 442, 477], "readstack": 19, "postprocessimag": 19, "popul": [19, 79, 105, 117, 120, 129, 133, 188, 204, 243, 299, 392, 406, 442, 477], "setalignment2d": 19, "setalignment3d": 19, "setalignmentproj": 19, "setdownsampl": 19, "downfactor": 19, "scannedpixels": 19, "downsampl": [19, 58, 201, 241, 246, 247, 248, 286, 299, 301, 477, 547, 548], "sethasctf": 19, "setisamplitudecorrect": 19, "setisphaseflip": 19, "adjust": [19, 150, 201, 211, 322, 328, 423, 450, 520], "setofmicrographsbas": 19, "voltag": [19, 42, 60, 165, 174, 452], "spheric": [19, 83, 84, 165, 201, 410, 453, 527, 537], "aberr": [19, 165, 343, 453], "getscannedpixels": 19, "setscannedpixels": 19, "setofmovieparticl": 19, "setofmovi": [19, 44, 204, 437], "som": [19, 252], "plu": [19, 136, 159, 165, 414, 432, 512], "inherit": [19, 54, 79, 136, 200, 241, 272, 402, 430, 434, 435, 438, 447, 460, 547, 548], "getdark": 19, "getgain": 19, "setdark": 19, "dark": [19, 26, 77, 398, 410, 477, 487], "setgain": 19, "gain": [19, 26, 51, 77, 249, 261, 410, 448, 449, 453], "setofnormalmod": 19, "getpdb": 19, "setpdb": 19, "setofpdb": 19, "purpos": [19, 24, 42, 59, 101, 136, 146, 150, 387, 395, 398, 422, 428, 430, 441, 464, 477, 508, 509, 511, 512, 531, 542, 543, 547], "concept": [19, 149, 441, 451, 468, 479], "setofprincipalcompon": 19, "princip": [19, 105, 107, 111, 115, 118, 119, 120, 121, 125, 188, 193, 201, 478, 547, 548], "setofsequ": 19, "mirror": [19, 392, 410], "rot_x_90_clockwis": 19, "rotx90c": 19, "rot_x_90_counterclockwis": 19, "rotx90cc": 19, "rot_y_90_clockwis": 19, "roty90c": 19, "rot_y_90_counterclockwis": 19, "roty90cc": 19, "rot_z_90_clockwis": 19, "rotz90c": 19, "rot_z_90_counterclockwis": 19, "rotz90cc": 19, "composetransform": 19, "getmatrixaslist": 19, "getrotationmatrix": 19, "scaleshift": 19, "setshift": 19, "setshiftstupl": 19, "fixmrcvolum": 19, "gethalfmap": 19, "hashalfmap": 19, "sethalfmap": 19, "listfilenam": 19, "volumemask": [19, 43, 285, 526, 531], "conic": [20, 60, 201, 477], "tilt": [20, 39, 60, 65, 165, 201, 204, 217, 238, 248, 272, 295, 323, 406, 410, 423, 477, 547, 548], "triplet": [20, 537, 538, 539], "getangl": [20, 310], "setangl": 20, "anglei": 20, "angley2": 20, "angletilt": 20, "coordinatestiltpair": 20, "tiltpairset": 20, "getmicspair": 20, "setmicspair": 20, "micspair": 20, "micrographstiltpair": [20, 204], "particlestiltpair": 20, "getcoordspair": 20, "setcoordspair": 20, "coordspair": 20, "setofangl": 20, "untilt": [20, 60, 165, 204, 217, 248, 272, 465], "gettilt": 20, "getuntilt": 20, "settilt": 20, "setuntilt": 20, "made": [20, 132, 133, 135, 136, 139, 150, 164, 167, 337, 391, 406, 410, 425, 435, 451, 453, 462, 492, 493, 494, 495, 496, 513, 518, 521, 522, 523, 524, 525, 529, 535, 541, 542], "protocol_export_db": [21, 34], "dataimport": [21, 37, 199, 203], "There": [21, 50, 105, 108, 136, 145, 147, 165, 204, 313, 382, 383, 388, 391, 392, 397, 398, 403, 410, 414, 415, 423, 426, 427, 428, 432, 435, 439, 447, 448, 449, 455, 461, 463, 464, 470, 477, 487, 492, 509, 519, 547, 551], "sub": [21, 37, 51, 88, 166, 174, 243, 267, 290, 291, 292, 293, 320, 321, 392, 402, 487], "prottestparallel": 22, "awakestep": 22, "endstep": 22, "itern": [22, 293, 294], "initstep": 22, "subsequ": [22, 313, 445, 509], "sleep": [22, 164, 435, 439, 442, 452], "depend": [22, 97, 101, 108, 126, 141, 147, 150, 161, 165, 183, 199, 299, 301, 392, 398, 405, 407, 410, 415, 421, 422, 425, 428, 429, 433, 437, 438, 442, 444, 461, 468, 487, 490, 494, 495, 496, 505, 507, 508, 510, 517, 521, 522, 524, 528, 532, 535, 541, 547, 548], "sleepstep": 22, "forcefail": 22, "emprotocol": [23, 24, 25, 29, 30, 31, 32, 35, 38, 48, 49, 50, 52, 53, 55, 56, 57, 58, 61, 229, 240, 245, 255, 256, 257, 258, 274, 308, 314, 315, 322, 324, 328, 435, 437], "common": [23, 26, 40, 42, 49, 53, 54, 58, 108, 111, 137, 141, 161, 194, 200, 227, 243, 252, 282, 285, 311, 383, 391, 392, 399, 402, 406, 410, 419, 423, 424, 430, 444, 450, 453, 460, 464, 468, 477, 481, 490, 503, 505, 506, 509, 520, 522, 524, 525, 532, 533, 547, 548], "allowsdelet": [23, 150], "obj": [23, 29, 58, 69, 71, 72, 73, 105, 107, 108, 117, 120, 121, 125, 126, 129, 132, 133, 135, 141, 150, 169, 204, 234, 301, 323], "prot2d": [24, 316, 447], "protalign2d": [24, 27, 28, 213, 221, 223, 224, 225], "receiv": [24, 67, 118, 140, 147, 149, 160, 200, 224, 388, 392, 425, 434, 435, 453, 477], "protanalysis2d": [24, 222], "protclassify2d": [24, 219, 220, 226, 232, 243, 252, 259, 392], "protcreatemask2d": [24, 280], "those": [24, 30, 48, 54, 58, 79, 101, 150, 165, 169, 174, 204, 243, 262, 268, 299, 311, 313, 346, 347, 383, 386, 391, 392, 399, 407, 422, 430, 448, 451, 452, 453, 460, 464, 477, 489, 492, 501, 503, 506, 509, 511, 512, 513, 519, 520, 524, 527, 533, 535, 537, 539, 542, 544, 547, 548, 549], "who": [24, 132, 133, 406, 442, 446], "protevenclassify2d": 24, "createoutputstep": [24, 26, 27, 28, 29, 33, 36, 39, 46, 47, 49, 51, 53, 54, 58, 150, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 247, 248, 250, 252, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 268, 269, 271, 274, 275, 276, 279, 280, 281, 286, 288, 289, 294, 295, 296, 297, 300, 302, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 319, 322, 323, 324, 325, 326, 328, 329, 330, 331, 392], "fullish": 24, "prot3d": 25, "protalignvolum": [25, 209, 210], "protpreprocessvolum": [25, 251, 288, 310], "protanalysis3d": [25, 211, 212, 216, 227, 228, 230, 233, 250, 254, 265, 266, 267, 276, 302, 303, 304, 305, 306, 307, 317, 319, 320, 321, 325, 326, 330, 331, 332], "protclassify3d": [25, 294, 298, 318], "protcreatemask3d": [25, 281], "protfiltervolum": [25, 283], "protfitting3d": 25, "protinitialvolum": [25, 231, 295, 296, 300, 329], "protmaskvolum": [25, 285], "protoperatevolum": [25, 284], "protpreprocessparticl": [25, 53], "resiz": [25, 53, 108, 111, 282, 286, 414, 426, 427, 428, 455], "inputvolum": [25, 210], "outputvolum": [25, 47], "protreconstruct3d": [25, 297, 327], "protrefine3d": [25, 238, 279, 294, 299, 301], "protalignmovi": [26, 249, 260, 263], "protprocessmovi": [26, 51, 261, 262, 286], "motioncorr": [26, 410, 414, 426, 452, 453, 454], "crosscorrel": [26, 293, 410], "optic": [26, 165, 201, 244, 263, 454, 464, 476], "flow": [26, 201, 244, 263, 406, 451, 476, 477], "sum": [26, 136, 150, 434, 435, 438, 525, 537], "interest": [26, 407, 414, 415, 435, 446, 449, 451, 468, 487, 492, 504, 505, 506, 507, 509, 510, 512, 513, 520, 526, 531, 534, 543, 547, 548], "averagemovi": 26, "outputmicfn": 26, "binfactor": 26, "roi": [26, 410], "splineord": 26, "outxmd": [26, 204], "take": [26, 27, 42, 49, 53, 54, 57, 68, 101, 105, 111, 130, 141, 150, 154, 161, 165, 241, 243, 246, 247, 248, 271, 294, 311, 379, 383, 387, 391, 392, 395, 396, 397, 400, 405, 406, 421, 422, 428, 430, 434, 435, 437, 447, 448, 450, 451, 452, 453, 460, 464, 465, 468, 470, 479, 481, 487, 490, 491, 492, 503, 504, 505, 507, 508, 509, 510, 511, 520, 525, 528, 529, 532, 535, 542, 544, 547, 548, 551], "correct": [26, 51, 149, 150, 235, 244, 261, 271, 311, 410, 429, 447, 461, 468, 470, 473, 509, 533, 547, 548], "composepsd": 26, "psd1": 26, "psd2": 26, "outputfnuncorrect": 26, "outputfncorrect": 26, "composepsdimag": 26, "psdimg1": 26, "psdimg2": 26, "compos": [26, 42, 101, 108, 118, 165, 391, 392, 406, 430, 431, 453, 460, 468, 547], "psd": [26, 112, 204, 323, 410, 449], "uncorrect": 26, "computepsd": 26, "oroot": [26, 392], "384": [26, 414, 517], "overlap": [26, 410, 451, 501, 510, 511, 512, 520, 524, 534, 537, 538, 539, 540], "computepsdimag": 26, "fnuncorrect": 26, "fncorrect": 26, "correctgain": 26, "moviefn": [26, 261], "gainfn": [26, 249, 452], "darkfn": 26, "evenoddcap": 26, "protaveragefram": 26, "veri": [26, 141, 146, 149, 271, 291, 293, 383, 387, 391, 392, 398, 400, 401, 406, 407, 410, 422, 439, 441, 442, 444, 449, 451, 455, 456, 460, 465, 468, 470, 477, 490, 492, 505, 509, 510, 511, 517, 520, 527, 533, 548], "collect": [26, 191, 386, 391, 406, 410, 430, 435, 444, 445, 449, 453, 468, 487], "session": [26, 407, 410, 414, 426, 427, 428, 437, 442, 449, 455, 457, 487, 492, 508, 521, 523, 524, 537, 545], "saniti": [26, 30], "createalignmentplot": 26, "meanx": 26, "meani": 26, "cumul": [26, 300, 468], "protalignmentassign": 27, "protalignmentinverthand": 28, "handed": [28, 240, 410], "batchprotocol": 29, "launch": [29, 61, 66, 68, 73, 87, 89, 91, 93, 94, 95, 97, 98, 101, 118, 137, 141, 142, 146, 150, 154, 165, 193, 194, 199, 293, 300, 352, 383, 391, 397, 402, 407, 414, 415, 421, 423, 428, 434, 435, 437, 438, 439, 445, 447, 450, 451, 452, 455, 460, 462, 464, 468, 474, 477, 509, 547, 548], "through": [29, 38, 51, 56, 57, 137, 145, 150, 154, 157, 165, 201, 232, 242, 299, 300, 392, 398, 400, 406, 410, 414, 415, 421, 422, 423, 426, 427, 428, 429, 430, 437, 447, 453, 457, 460, 468, 477, 478, 481, 492, 493, 494, 495, 496, 502, 508, 509, 528, 535, 538, 549], "gui": [29, 42, 54, 59, 86, 87, 101, 102, 159, 169, 174, 193, 241, 272, 311, 382, 383, 391, 392, 402, 407, 408, 410, 423, 433, 434, 435, 438, 439, 445, 451, 452, 453, 460, 470, 473, 474, 487, 488, 489, 490, 491, 492, 508, 509, 515, 550], "batch": [29, 311, 324, 410, 415, 438, 460, 527, 547], "execut": [29, 68, 93, 95, 98, 108, 111, 125, 133, 134, 141, 142, 144, 145, 146, 147, 150, 154, 160, 162, 165, 167, 168, 184, 188, 220, 232, 311, 386, 387, 391, 402, 405, 406, 407, 408, 410, 411, 413, 415, 422, 423, 434, 436, 437, 441, 442, 444, 445, 447, 449, 450, 451, 453, 454, 460, 465, 468, 469, 477, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 551], "protcreatefsc": 29, "setinputfsclist": 29, "fsclist": 29, "setinputobj": 29, "protcreatemask": 29, "createmaskstep": [29, 331], "protusersubset": [29, 311, 423], "script": [29, 68, 94, 141, 150, 168, 169, 173, 176, 177, 199, 207, 311, 383, 387, 402, 406, 407, 410, 413, 416, 422, 429, 435, 439, 442, 445, 451, 452, 453, 454, 460, 464, 481, 509, 524, 542], "pw_create_image_subset": [29, 311], "temporari": [29, 311, 410, 435, 439], "createsetobject": 29, "statu": [29, 107, 119, 122, 123, 125, 150, 159, 188, 386, 398, 400, 410, 414, 437, 460, 468, 471, 474, 477, 502, 507, 535, 537, 547, 548], "createsetstep": 29, "getdefaultsummari": 29, "protboxsizeparamet": 30, "mathemat": [30, 48, 468], "applyformulastep": 30, "formula": [30, 48, 56, 57, 79, 80, 493, 533], "user": [30, 42, 54, 56, 59, 61, 79, 101, 102, 108, 126, 137, 140, 149, 150, 161, 165, 167, 174, 241, 249, 252, 254, 259, 270, 272, 310, 311, 382, 388, 391, 392, 395, 398, 399, 400, 401, 405, 406, 410, 414, 415, 416, 422, 423, 424, 425, 427, 429, 436, 441, 442, 444, 449, 451, 452, 455, 456, 460, 461, 468, 470, 472, 473, 477, 478, 487, 492, 493, 494, 495, 496, 507, 509, 517, 518, 519, 521, 522, 523, 524, 526, 527, 529, 530, 531, 532, 533, 535, 538, 539, 542, 544, 547, 548], "calculateconsensusparam": 30, "calculategautomatchparam": 30, "calculateparticleextractionparam": 30, "calculaterelionparam": 30, "calculatetopazparam": 30, "createoutput": [30, 56, 57, 212, 231, 233, 243, 251, 298, 299, 301, 310, 318], "modifiedset": [30, 56, 57], "createresultsoutput": 30, "allowspoint": [30, 48, 268], "initparam": 30, "outputstodefin": 30, "registerevenboxs": 30, "registeroutput": 30, "outputnam": [30, 271, 273], "transform2evennumb": 30, "var": [30, 38, 108, 147, 150, 161, 167, 191, 313, 391, 410, 442, 445, 449, 450, 453, 460], "protclassesselector": 31, "extractel": 31, "createsetfromimag": 31, "createsetfromrepres": 31, "teh": 31, "protcreatestreamdata": 32, "setofxxxx": 32, "stream": [32, 42, 53, 54, 107, 119, 145, 150, 167, 193, 224, 225, 243, 311, 324, 428, 440, 452, 532, 551], "memori": [32, 66, 77, 122, 141, 165, 167, 402, 410, 423, 428, 444, 445, 449, 455, 460, 492, 547], "randommicrograph": 32, "createcoordinatesstep": 32, "micidx": 32, "createparticlesstep": 32, "createrandommicstep": 32, "createstep": 32, "counter": [32, 123, 125, 136, 311, 334, 434, 452], "delaystep": [32, 59, 324], "gettimeinterv": 32, "protctfassign": 33, "protctfmicrograph": [33, 49, 234, 237], "particular": [33, 58, 68, 73, 77, 105, 113, 149, 169, 200, 383, 388, 392, 400, 406, 433, 487, 488, 492, 505, 506, 507, 508, 509, 519, 520, 521, 522, 524, 525, 526, 531, 533, 535, 543, 544], "share": [33, 49, 165, 200, 234, 252, 311, 383, 397, 400, 406, 415, 422, 429, 438, 449, 453, 456, 470, 506], "ctffind": [33, 49, 234, 402, 410, 450, 470, 476], "recalcul": [33, 49, 234, 477, 478], "wa": [33, 49, 66, 94, 101, 107, 141, 149, 150, 165, 167, 168, 188, 200, 234, 299, 313, 384, 392, 398, 404, 406, 410, 421, 424, 427, 431, 442, 447, 460, 468, 487, 489, 490, 492, 502, 506, 509, 510, 511, 513, 517, 519, 520, 522, 535, 536], "els": [33, 49, 140, 145, 234, 311, 392, 400, 410, 435, 437, 450, 463], "protexportdatabas": [35, 391], "submit": [35, 147, 165, 245, 409, 415, 460, 505, 510, 513, 544], "emdb": [35, 47, 245, 406, 410, 437, 485, 489, 502, 513, 520, 532, 543, 544], "sinc": [35, 42, 67, 83, 84, 108, 133, 136, 149, 150, 161, 173, 291, 293, 383, 387, 388, 391, 400, 406, 410, 415, 428, 430, 435, 442, 445, 449, 452, 453, 455, 464, 470, 473, 478, 483, 485, 487, 488, 489, 492, 494, 500, 501, 503, 505, 506, 507, 509, 510, 512, 513, 518, 519, 520, 524, 527, 530, 533, 534, 536, 538, 539, 542, 547, 548], "partial": [35, 425, 509, 524, 528, 542], "hope": [35, 403, 471], "additionalvolumedir": 35, "addmap": [35, 544], "additionalvolumenam": 35, "map_": 35, "02d": 35, "coordinatefilenam": 35, "halfvolumenam": 35, "half_map_": 35, "maskdir": 35, "masknam": 35, "mask_": 35, "symplified_struct": [35, 47], "symplified_atom_structur": [35, 47, 544], "volumenam": [35, 156], "main_map": [35, 544], "createdirectorystep": 35, "dirpath": 35, "exportadditionalvolumestep": 35, "exportatomstructstep": 35, "exportfscstep": 35, "exportimagestep": 35, "exportmasksstep": 35, "exportvolumestep": 35, "getfnpath": [35, 52], "protextractcoord": 36, "protparticlepickingauto": [36, 54, 270], "mayb": [36, 149, 156, 509, 512], "clean": [36, 58, 62, 136, 141, 150, 165, 177, 180, 191, 271, 311, 391, 392, 468, 477, 512, 520, 530], "handi": [36, 462, 478, 547], "visual": [36, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 105, 108, 112, 121, 123, 124, 125, 127, 164, 165, 169, 174, 188, 192, 193, 276, 338, 340, 352, 382, 383, 392, 400, 402, 406, 410, 423, 432, 444, 446, 449, 455, 464, 468, 473, 476, 477, 478, 487, 489, 490, 491, 492, 493, 494, 495, 496, 504, 505, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548], "extractcoordin": 36, "partsid": [36, 58], "extractcoordsstep": 36, "geometryfrommatrix": [36, 204], "inversetransform": [36, 204], "getinputparticl": 36, "aligntyp": [36, 204], "is2d": [36, 204], "invtransform": [36, 204], "getsuffix": 36, "gettmpoutputpath": 36, "loadinput": 36, "protimport": [38, 43, 392, 452], "protimportfil": [38, 39, 40, 42, 46, 47, 60], "_getimportopt": 38, "mark": [38, 141, 150, 397, 399, 470, 477, 530, 532], "_importfil": 38, "fileid": [38, 39], "import_from_fil": [38, 46, 47, 231, 328, 447, 452], "filemodifi": 38, "filetimeout": 38, "modif": [38, 136, 140, 141, 161, 391, 407, 410, 422, 449, 487, 503, 510, 524, 525, 526, 537], "timeout": [38, 61, 66, 133, 153, 435, 452, 453, 487], "getcopyorlink": [38, 44], "getmatchfil": 38, "getpattern": 38, "usernam": [38, 146, 167, 414, 437, 449], "digit": [38, 149, 410, 424], "isblacklist": [38, 44], "iterfil": 38, "worksinstream": [38, 50, 150], "protimportcoordin": [39, 391], "protparticlepick": [39, 54, 269, 271, 272, 275, 311], "import_from_auto": [39, 40], "import_from_dogpick": 39, "import_from_eman": [39, 45], "import_from_relion": [39, 45], "import_from_scipion": [39, 40, 44, 45], "import_from_xmipp": 39, "correctcoordinateposit": 39, "importfrom": [39, 40, 44, 45, 447, 452], "getdefaultboxs": 39, "getimportclass": [39, 40, 44, 45], "charg": [39, 40, 44, 45, 383, 386, 415, 423, 428, 447, 507, 525, 535, 547, 548], "getimportfrom": 39, "getinputmicrograph": [39, 49, 54, 237, 241, 246, 248, 270, 272, 275, 323], "getmatchingm": 39, "coordfil": [39, 205], "protimportcoordinatespair": 39, "getmatchingcoord": 39, "micu": 39, "mict": 39, "getsummari": [39, 54, 187, 270, 279], "coordset": [39, 54, 204, 270, 271], "readcoordin": [39, 204], "registercoord": [39, 54, 241, 272, 423], "coordsdir": [39, 54, 241, 272], "readfromextra": [39, 272], "protimportctf": [40, 391], "import_from_eman2": 40, "import_from_gctf": 40, "import_from_grigorieff": 40, "import_from_xmipp3": [40, 44, 45], "importctfstep": 40, "scipionimport": 41, "sqlitefil": [41, 118], "getmicctf": 41, "importcoordin": [41, 205], "importmicrograph": [41, 60, 205], "importparticl": [41, 205], "loadacquisitioninfo": [41, 42, 44, 205], "try": [41, 68, 108, 110, 126, 127, 137, 141, 150, 156, 161, 165, 166, 187, 200, 205, 286, 301, 310, 321, 330, 388, 391, 392, 397, 398, 402, 406, 422, 433, 437, 439, 442, 445, 447, 450, 455, 468, 470, 477, 481, 487, 492, 493, 509, 510, 511, 520, 525, 527, 534, 535, 544], "error": [41, 42, 44, 62, 101, 103, 107, 111, 137, 141, 149, 150, 154, 159, 160, 161, 165, 167, 169, 200, 205, 286, 321, 329, 330, 387, 391, 392, 410, 415, 419, 433, 442, 444, 447, 450, 452, 460, 461, 468, 474, 483, 487, 489, 490, 492, 493, 500, 525, 530, 537, 538, 539], "validatemicrograph": [41, 205], "validateparticl": [41, 205], "protimportimag": [42, 44, 45, 47], "fillacquisit": 42, "acquit": 42, "build": [42, 49, 54, 66, 109, 129, 130, 132, 133, 141, 147, 149, 150, 169, 184, 386, 391, 392, 396, 397, 406, 422, 424, 425, 453, 477, 492, 493, 494, 495, 496, 498, 499, 500, 505, 510, 512, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546], "getact": [42, 61, 193], "stop": [42, 62, 141, 147, 159, 165, 383, 410, 414, 415, 428, 435, 437, 439, 449, 452, 453, 468, 477, 487, 492, 505, 509, 533], "action": [42, 64, 105, 108, 117, 118, 120, 122, 124, 125, 126, 127, 129, 136, 139, 141, 150, 184, 398, 406, 409, 410, 414, 422, 423, 428, 435, 441, 468, 471, 474, 477, 478, 547, 548, 549, 550], "appear": [42, 59, 83, 84, 125, 392, 397, 406, 407, 414, 422, 426, 427, 428, 434, 436, 437, 439, 453, 471, 474, 477, 478, 481, 487, 489, 490, 492, 493, 503, 504, 507, 509, 512, 513, 515, 520, 522, 524, 527, 528, 529, 530, 531, 532, 533, 535, 537, 543, 547, 548], "click": [42, 54, 64, 79, 105, 106, 108, 117, 120, 126, 129, 165, 222, 241, 272, 392, 397, 407, 410, 414, 419, 423, 426, 427, 428, 434, 436, 437, 441, 444, 445, 447, 449, 450, 453, 455, 468, 470, 471, 473, 474, 477, 478, 487, 488, 489, 490, 492, 493, 504, 505, 507, 508, 509, 513, 520, 523, 524, 532, 537, 542, 547, 548], "handleimgh": 42, "copyorlink": 42, "src": [42, 106, 161, 234, 450, 481], "dst": [42, 106, 234], "hed": 42, "care": [42, 49, 53, 54, 56, 105, 141, 383, 391, 392, 406, 410, 428, 460, 551], "importimagesstep": 42, "sphericalaberr": [42, 60, 174, 452], "amplitudecontrast": [42, 60, 452], "magnif": [42, 165, 410, 473, 532], "importimagesstreamstep": 42, "iternewinputfil": [42, 44], "importedfil": 42, "proper": [42, 44, 49, 68, 73, 111, 126, 129, 150, 204, 254, 383, 414, 422, 435, 437], "acquistioninfo": 42, "messag": [42, 44, 77, 101, 105, 107, 111, 117, 125, 137, 150, 159, 164, 165, 167, 169, 200, 395, 400, 401, 413, 434, 435, 436, 442, 447, 449, 460, 487, 492, 493, 530], "processimportdict": [42, 150], "importdict": [42, 150], "importdir": [42, 150], "json": [42, 101, 141, 150, 159, 173, 187, 193, 402, 410, 436, 437, 450, 452, 453, 460, 470], "stopimport": 42, "actual": [42, 80, 108, 141, 150, 156, 191, 383, 392, 406, 410, 422, 437, 438, 442, 460, 509, 517, 537, 538, 539, 547, 548], "mechan": [42, 391, 406, 422, 435, 485], "streaminghasfinish": 42, "validatepath": 42, "pathstr": 42, "importmaskoutput": 43, "enum": [43, 44, 47, 49, 53, 54, 108, 150, 167, 410], "enumer": [43, 44, 47, 49, 130, 167, 408, 468], "outputmask": 43, "protimportmask": [43, 391], "importmaskstep": 43, "maskpath": 43, "importmicsoutput": 44, "outputmicrograph": [44, 452], "importmoviesoutput": 44, "outputmovi": [44, 437, 452], "protimportmicbas": 44, "protimportmicrograph": [44, 391], "protimportmovi": [44, 391, 452], "getblacklisteditem": 44, "getitemstoblacklistfromfil": 44, "acquisitioninfo": 44, "micset": [44, 50, 77, 204, 234, 311], "import_from_emx": [44, 45], "importmicrographsstep": 44, "detector": [44, 51], "camera": [44, 51, 261, 410, 532], "ignorecopi": 44, "dest": [44, 106, 160, 161], "individu": [44, 201, 222, 392, 402, 406, 410, 437, 460, 470, 487, 492, 496, 501, 505, 509, 510, 518, 536, 538, 539], "delimit": [44, 161, 236, 468, 505, 509, 517, 526, 528, 542, 547], "express": [44, 57, 127, 335, 392, 410, 460, 547, 548], "simplic": [44, 429, 430, 435, 437, 442, 468], "movieset": 44, "protimportaverag": [45, 391], "protimportparticl": [45, 391, 447], "import_from_cryosparc": 45, "import_from_frealign": 45, "aligntypelist": 45, "importext": 45, "par": [45, 470], "lst": 45, "importformat": 45, "xmipp3": [45, 197, 377, 410, 464, 465, 470, 503, 505, 513, 526, 527, 528, 533, 534], "relion": [45, 150, 204, 230, 391, 402, 410, 413, 414, 423, 426, 427, 428, 462, 463, 464, 470, 473, 533], "frealign": [45, 402, 410, 414, 426, 465, 470, 476], "eman": [45, 383, 402, 406, 410, 414, 426, 427, 428, 462, 465, 473, 476, 477, 479, 548], "cryosparc": [45, 410, 413, 447], "importparticlesstep": 45, "imgset": [45, 204, 261, 392], "protimportsequ": 46, "import_from_nucleotide_fil": 46, "import_from_nucleotide_genebank": 46, "import_from_nucleotide_plain_text": 46, "import_from_nucleotide_structur": 46, "import_from_plain_text": 46, "import_from_protein_genebank": 46, "import_from_structur": 46, "import_from_uniprot": 46, "import_structure_from_fil": 46, "import_structure_from_id": 46, "filedownloadstep": 46, "sequencefil": 46, "getrawsequencestep": 46, "rawsequ": 46, "getsequenceofchainstep": 46, "sequencedatabasedownloadstep": 46, "sequencedb": 46, "download": [46, 47, 99, 101, 150, 184, 231, 395, 397, 402, 405, 407, 410, 414, 422, 425, 428, 429, 432, 438, 439, 445, 449, 453, 455, 463, 465, 479, 481, 489, 490, 494, 495, 496, 503, 504, 509, 510, 513, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 549], "uniprot": [46, 487, 492, 530], "genebank": [46, 530], "importvolumeoutput": 47, "protimportpdb": [47, 391], "import_from_id": [47, 231], "atomstructpath": 47, "pdbdownloadstep": [47, 231], "file_list": [47, 231], "unzip": [47, 231], "protimportsetofatomstruct": 47, "protimportvolum": [47, 388, 391], "import_from_emdb": 47, "importfromemdbstep": 47, "importfromfilestep": 47, "setorigcoord": 47, "fetch_emdb_map": 47, "tmpdirectori": 47, "emd": [47, 468, 485, 489, 490, 491, 502, 503, 512, 513, 520], "3dmap": 47, "fetch_fil": 47, "url_rest_api": 47, "minimum_file_s": 47, "8192": [47, 460], "save_dir": 47, "tmp_dir": 47, "save_nam": 47, "3dmapfil": 47, "emb": 47, "rest": [47, 165, 299, 301, 395, 410, 415, 422, 430, 452, 453, 468, 485, 488, 490, 494, 505, 509, 512, 513, 519, 520, 526, 548], "ai": 47, "ask": [47, 99, 107, 149, 193, 398, 399, 430, 436, 453, 477, 509, 520, 535, 547, 550], "temporarili": [47, 435], "gunzip": [47, 503], "gzpath": 47, "protmathematicaloper": 48, "param1": 48, "x1": [48, 106], "param2": 48, "x2": [48, 106], "computestep": 48, "attr1": 48, "attr2": 48, "numer": [48, 149, 161, 201, 322, 410, 438, 468, 536, 537, 538, 539], "_resolut": [48, 56, 57], "randint": [48, 56, 57], "createresultoutput": 48, "formulaneedsinput": 48, "formulaneedsparam": 48, "getparam1": 48, "getparam2": 48, "protctfmicoutput": 49, "outputctf": [49, 452], "protmicrograph": [49, 268, 323], "estimatectfliststep": 49, "micnamelist": [49, 54], "estimatectfstep": 49, "micdict": [49, 53, 54, 323], "_estimatectf": [49, 165], "getctfparamsdict": 49, "global": [49, 111, 113, 140, 141, 244, 254, 299, 306, 400, 406, 410, 415, 429, 430, 445, 464, 492, 501, 509, 510, 524, 533, 539], "getinputmicrographspoint": [49, 54, 270, 275, 323], "getrecalctfparamsdict": 49, "reestimatectfstep": 49, "_restimatectf": 49, "protpreprocessmicrograph": [49, 51, 264, 289, 477], "protmovieeras": 50, "remov": [50, 108, 127, 129, 136, 139, 150, 156, 161, 165, 167, 187, 188, 241, 242, 273, 287, 289, 299, 387, 398, 400, 410, 422, 428, 439, 442, 445, 462, 481, 484, 490, 492, 493, 498, 499, 503, 507, 509, 512, 520, 526, 527, 547, 548], "warn": [50, 62, 101, 111, 132, 136, 150, 206, 387, 410, 414, 435, 465, 487, 492, 493, 503, 519, 520, 528, 529, 532, 535], "sure": [50, 145, 165, 386, 391, 397, 428, 437, 442, 447, 461, 468, 511, 519, 520, 527], "understand": [50, 233, 388, 391, 392, 396, 406, 410, 435, 439, 440, 468, 530], "consequ": [50, 410, 468, 538, 539, 547, 548], "deletemoviesstep": 50, "delet": [50, 99, 107, 117, 132, 133, 140, 141, 150, 165, 188, 383, 395, 398, 402, 410, 415, 428, 434, 435, 450, 471, 473, 477, 478, 493, 509, 512, 520, 527, 547, 548], "until": [50, 53, 61, 66, 99, 101, 122, 129, 141, 153, 160, 161, 167, 311, 324, 386, 391, 395, 406, 410, 414, 415, 428, 435, 437, 452, 454, 468, 474, 475, 477, 492, 509, 524, 533, 547, 548], "protextractmovieparticl": [51, 247], "protextractparticl": [51, 53, 241, 246], "protmovieassigngain": 51, "_processmovi": 51, "convert_to_mrc": [51, 260, 263], "correct_gain": 51, "convertinputstep": [51, 212, 213, 217, 218, 220, 221, 227, 235, 236, 252, 257, 258, 259, 266, 268, 272, 276, 279, 284, 288, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 312, 316, 317, 318, 319, 325, 326, 330, 331, 392], "getfinalcorrectionimagepath": 51, "correctionimag": 51, "doe": [51, 107, 108, 117, 154, 159, 165, 184, 293, 299, 311, 387, 391, 392, 397, 400, 407, 408, 415, 423, 428, 435, 436, 437, 442, 444, 445, 450, 452, 453, 463, 477, 487, 496, 505, 506, 508, 509, 510, 517, 519, 527, 531, 533, 543, 547], "getgainanddark": 51, "processmoviestep": 51, "moviedict": [51, 261], "protorigsampl": 52, "assignstep": 52, "protparticl": [53, 54], "deriv": [53, 54, 191, 383, 404, 410, 447, 468, 488, 491, 505, 507, 508, 510, 512, 513, 520, 533, 535, 537, 538, 539, 544, 546], "_extractmicrograph": 53, "extractmicrographliststep": 53, "mickeylist": [53, 241], "extractmicrographstep": 53, "mickei": 53, "grab": [53, 105], "readpartsfromm": [53, 246], "micdonelist": [53, 54], "outputpart": [53, 246], "protextractparticlesoutput": 53, "predefin": [53, 56, 57, 111, 164, 410, 434, 438, 463], "outputparticl": [53, 392, 447], "protextractparticlespair": [53, 248], "protfilterparticl": [53, 283], "protprocessparticl": [53, 215, 218, 235, 236, 242, 244, 288, 312, 313, 333, 334], "protmaskparticl": [53, 285], "protoperateparticl": [53, 284], "inputparticl": [53, 210, 392, 447], "output_prefix": 54, "outputcoordin": [54, 273], "getcoord": [54, 241, 246, 247, 248, 272], "getcoordsdir": [54, 269, 270], "getcoordstiltpair": 54, "getmethod": [54, 270], "readsetofcoordin": [54, 204, 270], "workingdir": [54, 270, 409, 435, 450], "picker": [54, 204, 241, 271, 272, 346, 382, 403, 410, 423, 470, 477], "java": [54, 66, 241, 272, 379, 382, 397, 459], "button": [54, 102, 105, 107, 108, 111, 117, 125, 130, 150, 241, 272, 392, 423, 434, 436, 437, 445, 450, 453, 468, 470, 473, 477, 492, 493, 494, 495, 496, 507, 508, 509, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "interact": [54, 83, 84, 106, 113, 141, 150, 222, 383, 392, 401, 406, 410, 424, 428, 441, 460, 472, 478, 487, 509, 513, 519, 523, 524, 537, 538, 539, 546, 547, 548], "candid": [54, 430, 542], "pickmicrographliststep": 54, "pickmicrographstep": 54, "_pickmicrograph": 54, "readcoordsfromm": [54, 270], "outputdir": [54, 66, 77, 204], "outputcoord": 54, "protparticlepickingoutput": 54, "protpickingdiffer": 54, "neg": [54, 68, 84, 165, 311, 410, 507, 519, 525, 535, 547], "inputid": [54, 77, 242, 259, 392], "negid": 54, "protpdfreport": 55, "report": [55, 154, 165, 167, 201, 299, 388, 396, 415, 424, 437, 440, 444, 451, 453, 456, 487, 509, 551], "tex": 55, "jpg": [55, 400, 450], "0010": 55, "mytext": 55, "0020": 55, "afigur": 55, "0030": 55, "anotherfigur": 55, "0040": 55, "apap": 55, "0050": 55, "anothertext": 55, "front": [55, 165, 432, 478, 547, 548], "createreport": 55, "validateinstal": [55, 137, 150, 442], "pdfto": 55, "latex": [55, 499], "protseteditor": 56, "edit": [56, 66, 79, 107, 108, 117, 149, 165, 383, 388, 391, 402, 410, 415, 422, 423, 429, 434, 439, 441, 449, 453, 457, 461, 464, 470, 471, 477, 483, 500, 509, 511, 514, 524, 551], "extrem": [56, 228, 250, 398, 406, 513], "easili": [56, 106, 383, 391, 396, 400, 403, 406, 407, 410, 424, 439, 442, 455, 461, 468, 470, 471, 476, 477, 511, 521, 522, 523, 547, 548], "consist": [56, 259, 310, 383, 386, 391, 406, 438, 447, 468, 502], "offer": [56, 59, 106, 150, 391, 410, 414, 425, 428, 438, 441, 468, 471, 477, 507, 547, 548], "choice_formula": [56, 57], "choice_label": [56, 57], "icosahedr": [56, 406, 519, 520, 528], "choice_rotate_icosahedr": 56, "choice_rotate_vector": 56, "local_sym_nam": 56, "i1": [56, 528], "i2": [56, 385, 528], "i3": [56, 528], "i4": [56, 528], "i5": 56, "i6": 56, "i7": [56, 465], "i8": 56, "formulastep": [56, 57], "exec": [56, 57], "rotateicostep": [56, 287], "rotatestep": [56, 308], "protsetfilt": 57, "evalu": [57, 80, 108, 136, 149, 150, 165, 200, 211, 301, 313, 410, 428, 480, 510, 535, 538, 547], "expres": 57, "distanc": [57, 110, 201, 222, 232, 320, 321, 423, 468, 493, 507, 512, 513, 519, 520, 528, 535, 538, 539], "choice_distance_between_coord": 57, "choice_distance_cent": 57, "rank": [57, 326, 410, 492, 509, 542], "choice_rank": 57, "distancebetweencoorstep": 57, "too": [57, 123, 125, 191, 415, 430, 444, 468, 477, 493, 513, 519, 547], "distancecenterstep": 57, "transfer": [57, 201, 383, 444, 449, 450, 532], "gettoprankitem": 57, "iset": 57, "finalnumb": 57, "direc": 57, "parsetoprankparam": 57, "rankingstep": 57, "proport": 57, "lower": [57, 106, 130, 252, 313, 316, 383, 450, 468, 492, 501, 505, 506, 507, 509, 510, 513, 517, 519, 520, 525, 527, 533, 535, 537, 538, 539], "chosen": [57, 79, 316, 384, 414, 438, 468, 505, 509, 544, 547, 548], "union": [58, 229, 311, 528], "split": [58, 62, 147, 264, 318, 320, 321, 324, 335, 410, 429, 487, 488, 493, 518, 547, 548], "protset": 58, "protsplitset": [58, 391], "protsubset": [58, 391], "referenc": 58, "bigger": [58, 161, 262, 421, 428, 452, 477, 493, 533, 547, 548], "somehow": 58, "set_differ": 58, "set_intersect": 58, "protsubsetbycoord": 58, "micsid": 58, "protsubsetbym": 58, "protunionset": [58, 391], "type_ctf": 58, "type_volum": 58, "type_volume_index": 58, "cleanextraattribut": 58, "verifyattr": 58, "commonattribut": 58, "within": [58, 92, 165, 188, 193, 271, 317, 319, 383, 386, 387, 391, 395, 406, 410, 428, 438, 442, 447, 451, 477, 478, 510, 512, 513, 519, 526, 546, 547, 549], "duplicatedid": 58, "duplic": [58, 439, 470, 532], "renumb": 58, "begin": [58, 167, 391, 392, 407, 428, 434, 437, 438, 442, 450, 468, 474, 477], "getallsetsattribut": 58, "getobjdict": [58, 136, 150], "includeclass": [58, 136], "includebas": [58, 136], "nest": [58, 133, 136, 431], "kei": [58, 68, 79, 105, 107, 108, 117, 120, 121, 126, 129, 133, 135, 136, 149, 150, 154, 165, 166, 167, 187, 201, 204, 383, 391, 392, 400, 406, 407, 409, 414, 415, 421, 422, 427, 428, 429, 442, 449, 451, 453, 460, 468, 477, 478, 490, 492, 507, 535, 547, 548], "comment": [58, 108, 120, 133, 136, 165, 391, 400, 406, 430, 431, 434, 436, 477], "objlabel": [58, 136, 435, 447, 452], "objcom": [58, 136], "nos": 59, "regular": [59, 127, 252, 383, 384, 410, 435, 460, 509, 524, 547], "hide": [59, 108, 130, 383, 397, 406, 433, 487, 488, 492, 493, 520], "prevent": [59, 184, 392, 406, 433, 452, 453, 464, 481, 487], "tree": [59, 79, 87, 104, 105, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 125, 126, 139, 141, 165, 188, 386, 400, 402, 410, 422, 427, 437, 444, 445, 453, 464, 474], "protstress": 59, "prottest": 59, "stress": [59, 410], "variou": [59, 397, 406, 480, 547], "ng": 59, "stressstep": 59, "isdis": [59, 150], "protimportmicrographstiltpair": 60, "output_nam": 60, "outputmicrographstiltpair": 60, "createtiltedpairsstep": 60, "protmanualcheckpoint": 61, "conveni": [61, 383, 391, 410, 464, 496, 511], "appropri": [61, 157, 390, 391, 392, 414, 442, 489, 490, 493, 494, 495, 496, 506, 507, 508, 509, 510, 512, 513, 524, 534, 544, 547, 548], "gettimeoutinsecond": 61, "stopwait": [61, 324], "waitinghasfinish": [61, 324], "waitingstep": 61, "cleanfilenam": 62, "might": [62, 150, 187, 379, 390, 391, 395, 400, 401, 406, 414, 415, 419, 425, 428, 435, 436, 437, 439, 442, 446, 453, 455, 459, 461, 463, 470, 481, 487, 492, 509, 510, 512, 520, 527, 537, 539, 546, 547, 548, 549], "caus": [62, 168, 227, 235, 266, 317, 319, 326, 386, 398, 410, 422, 444, 460, 481], "convertpixtolength": 62, "getcmdpath": 62, "getpwempath": 62, "gettemplatepath": 62, "loadsetfromdb": 62, "dbname": [62, 65, 129, 133, 134, 207, 430], "dbprefix": 62, "runprogram": [62, 68], "splitrang": 62, "minvalu": [62, 149], "maxvalu": [62, 149], "splitnum": 62, "roundto": 62, "divid": [62, 383, 386, 411, 434, 438, 468, 525, 527, 547, 548], "round": [62, 311, 435, 490, 512], "decim": [62, 145], "handler": [64, 105, 122, 126, 159, 423], "browser": [64, 87, 104, 165, 173, 387, 397, 410, 415, 421, 424, 425, 428, 449, 455, 477, 487, 490, 492, 509, 513, 526, 529, 530, 531, 532, 535], "chimerahandl": 64, "getfileact": [64, 105], "objfil": [64, 105], "done": [64, 101, 105, 133, 141, 145, 150, 167, 188, 200, 242, 324, 383, 391, 392, 396, 400, 406, 407, 408, 410, 414, 415, 417, 422, 424, 434, 435, 436, 438, 439, 452, 460, 463, 468, 470, 473, 477, 510, 513], "displai": [64, 66, 68, 69, 71, 72, 73, 77, 79, 105, 106, 107, 108, 109, 111, 113, 117, 120, 121, 123, 125, 126, 127, 129, 130, 139, 150, 164, 165, 169, 188, 211, 383, 392, 395, 399, 410, 423, 432, 433, 434, 436, 441, 444, 445, 449, 450, 453, 460, 468, 473, 474, 477, 478, 485, 487, 488, 489, 505, 509, 513, 519, 520, 521, 524, 525, 527, 534, 537, 538, 539, 547, 548], "context": [64, 105, 108, 117, 120, 126, 129, 313, 401, 406, 417, 460, 471, 520, 547, 548], "menu": [64, 105, 108, 111, 117, 120, 126, 129, 139, 140, 192, 392, 397, 398, 407, 414, 423, 426, 427, 428, 434, 437, 439, 445, 449, 453, 471, 474, 477, 478, 487, 488, 489, 490, 492, 493, 494, 495, 496, 504, 505, 507, 508, 509, 510, 511, 512, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "doubl": [64, 102, 105, 108, 117, 120, 123, 125, 126, 129, 410, 434, 441, 444, 445, 450, 453, 468, 477, 525, 547, 548], "getfileicon": [64, 105], "icon": [64, 105, 107, 108, 111, 115, 117, 118, 119, 120, 121, 124, 125, 126, 129, 139, 165, 188, 193, 384, 391, 400, 407, 414, 426, 427, 434, 439, 449, 468, 474, 477, 509, 547, 548], "imagefilehandl": 64, "getfilepreview": [64, 105], "preview": [64, 79, 105, 112, 117, 121, 126, 129, 402, 410, 453, 547, 548], "mdfilehandl": 64, "particlefilehandl": 64, "stackhandl": 64, "volfilehandl": 64, "getimagefrompath": 64, "imagepath": [64, 77, 130], "tk": [64, 102, 105, 107, 108, 111, 112, 115, 118, 119, 120, 121, 123, 125, 127, 169, 188, 193, 402, 481], "getpilimag": 64, "imagexmipp": 64, "gettkimag": 64, "emplott": [65, 337], "maintitl": [65, 113, 337], "plot": [65, 69, 79, 82, 83, 84, 113, 169, 327, 337, 352, 402, 410, 423, 435, 448, 478, 487, 490, 492, 509, 510, 524, 525, 536, 537, 538, 539, 542], "matplotlib": [65, 82, 112, 113, 337], "figur": [65, 82, 112, 113, 337, 392, 431, 436, 437, 438, 441, 444, 453, 468, 473, 474, 477, 504, 505, 525, 548], "grid": [65, 108, 113, 337, 380, 406, 415, 457, 509, 539], "figsiz": [65, 112, 113, 337], "dpi": [65, 112, 113, 337, 525], "100": [65, 107, 111, 113, 119, 120, 127, 130, 164, 224, 225, 337, 410, 423, 435, 444, 493, 520, 524, 537], "windowtitl": [65, 113, 337], "window": [65, 68, 77, 79, 89, 91, 105, 107, 108, 111, 112, 113, 115, 117, 118, 119, 120, 121, 123, 124, 125, 130, 165, 168, 179, 188, 193, 194, 337, 383, 392, 397, 398, 403, 406, 407, 410, 414, 423, 434, 436, 439, 441, 445, 449, 468, 470, 471, 477, 487, 488, 489, 490, 492, 493, 494, 495, 496, 505, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "createfromfil": 65, "dbpreffix": 65, "plottyp": 65, "columnsstr": 65, "colorsstr": 65, "linesstr": 65, "markersstr": 65, "xcolumn": 65, "ylabel": [65, 113], "xlabel": [65, 113], "ordercolumn": 65, "orderdirect": 65, "plotangulardistribut": 65, "rot": [65, 238, 251], "weight": [65, 105, 107, 111, 115, 118, 119, 120, 121, 124, 125, 188, 193, 259, 299, 300, 312, 335, 337, 502, 525, 533], "max_p": 65, "40": [65, 161, 164, 201, 406, 414, 447, 517], "min_p": 65, "color": [65, 68, 70, 79, 101, 106, 108, 117, 122, 124, 127, 130, 139, 154, 161, 165, 167, 184, 191, 337, 384, 402, 410, 432, 468, 471, 473, 487, 488, 490, 492, 493, 494, 495, 496, 505, 509, 520, 534, 547], "blue": [65, 106, 165, 167, 184, 191, 337, 398, 432, 453, 468, 487, 492, 493, 494, 495, 496, 504, 505, 507, 509, 511, 512, 518, 520, 521, 522, 523, 524, 527, 528, 529, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 547], "subplot": [65, 113, 337], "angular": [65, 201, 215, 218, 227, 228, 238, 250, 254, 293, 317, 319, 337, 410, 468, 476, 537], "distribut": [65, 211, 337, 397, 406, 410, 415, 477, 481, 502, 509, 527, 534, 536, 537, 538, 539], "plotangulardistributionfrommd": 65, "mdfile": [65, 205], "mdl_angle_rot": [65, 337], "mdl_angle_tilt": [65, 337], "mdl_weight": [65, 337], "plotangulardistributionhistogram": 65, "plotdata": 65, "xvalu": 65, "yvalu": 65, "shortcut": [65, 68, 105, 107, 111, 126, 139, 161, 199, 397, 403, 407, 410, 414, 426, 427, 428, 434, 455, 468, 477], "show": [65, 68, 69, 73, 77, 79, 80, 96, 105, 107, 108, 111, 113, 117, 126, 127, 150, 169, 174, 183, 188, 392, 395, 398, 400, 407, 413, 415, 432, 434, 437, 438, 441, 444, 445, 447, 449, 453, 455, 462, 468, 474, 477, 478, 480, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 545, 547, 548, 550], "marker": [65, 495, 547, 548], "linestyl": 65, "plotdatabar": 65, "width": [65, 77, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 164, 165, 188, 192, 193, 468, 520], "plothist": 65, "nbin": [65, 313, 337], "histogram": [65, 70, 201, 212, 337, 346, 347, 410, 478, 505, 534, 536], "plotmatrix": 65, "vmindata": 65, "vmaxdata": 65, "cmap": 65, "jet": [65, 79, 113], "xtickslablesmajor": 65, "ytickslablesmajor": 65, "rotationx": 65, "90": [65, 343, 487, 517, 519], "rotationi": 65, "plotscatt": [65, 83, 84], "scatter": [65, 82, 457, 478, 525], "tablenam": [65, 134, 156], "small": [65, 68, 145, 165, 201, 296, 384, 385, 392, 402, 406, 407, 410, 428, 429, 445, 453, 455, 461, 468, 477, 485, 487, 502, 506, 508, 509, 512, 517, 520, 523, 524, 526, 527, 528, 532, 533, 537, 538, 539, 542], "around": [65, 67, 108, 129, 136, 145, 150, 156, 161, 308, 406, 409, 414, 428, 432, 447, 468, 505, 509, 512, 517, 520, 525, 527, 528, 537, 538, 539, 542, 547, 548], "definit": [66, 79, 108, 149, 150, 166, 167, 169, 184, 187, 207, 291, 293, 383, 397, 401, 405, 407, 409, 410, 422, 431, 432, 434, 437, 441, 460, 464, 524, 525, 547, 548], "histor": 66, "reason": [66, 299, 379, 383, 386, 398, 430, 451, 453, 455, 456, 468, 481, 494, 504, 507], "tool": [66, 70, 112, 134, 174, 252, 383, 386, 390, 391, 392, 397, 400, 402, 406, 410, 415, 418, 424, 428, 429, 434, 441, 445, 446, 447, 449, 451, 461, 462, 468, 473, 474, 478, 480, 490, 491, 492, 493, 494, 495, 496, 499, 501, 505, 506, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 528, 529, 532, 533, 535, 536, 537, 538, 539, 540, 544, 546, 547, 548, 550, 551], "xmipp_show": 66, "And": [66, 140, 294, 400, 410, 426, 427, 435, 487, 535], "becam": 66, "xmipp_showj": [66, 74, 75, 338, 352], "columnproperti": 66, "allowrend": 66, "defaultcolumnlayoutproperti": 66, "allowsrender": 66, "getcolumntyp": 66, "getnam": [66, 136, 137, 139, 140, 141, 146, 148, 149, 156, 158, 184], "isrender": 66, "columnsconfig": [66, 107], "defaultcolumnslayout": 66, "dataset": [66, 87, 99, 101, 154, 155, 220, 226, 271, 298, 402, 410, 437, 447, 453, 465, 470, 479, 538, 539, 547, 548], "visibl": [66, 77, 125, 139, 165, 423, 450, 464, 477, 478], "allowsetvis": 66, "render": [66, 109, 149, 165, 392, 432, 450, 476, 478], "allowsetrender": 66, "allowsetedit": 66, "renderfunc": 66, "renderfuncextra": 66, "configcolumn": 66, "colnam": [66, 156], "getcolumnproperti": 66, "propnam": 66, "getrenderablecolumn": 66, "extra": [66, 67, 77, 101, 103, 105, 107, 108, 117, 130, 136, 137, 150, 187, 199, 204, 383, 391, 405, 409, 414, 430, 435, 437, 445, 492, 493, 494, 495, 496, 509, 520, 524, 525, 534, 536, 538, 539, 542, 548, 549], "hasenablecolumn": 66, "printcolumn": 66, "mysocketserv": 66, "server_address": [66, 118], "requesthandlerclass": [66, 118], "bind_and_activ": [66, 118], "tcpserver": [66, 118], "constructor": [66, 67, 108, 112, 118, 126, 130, 139, 145, 392, 430], "serve_forev": 66, "request": [66, 118, 167, 187, 191, 391, 400, 401, 406, 410, 425, 435, 437, 456, 470, 492, 513, 535, 549, 550], "shutdown": 66, "poll": 66, "poll_interv": 66, "period": [66, 386, 435, 451, 481], "task": [66, 383, 392, 396, 398, 406, 410, 424, 437, 449, 451, 460, 477, 478, 480, 489, 490, 501, 505, 507, 508, 509, 513, 524], "thread": [66, 101, 111, 125, 141, 145, 149, 165, 392, 405, 437, 444, 445, 460, 461, 468, 477, 490, 491, 494, 495, 496, 541, 547, 548], "protocoltcprequesthandl": 66, "client_address": [66, 118], "baserequesthandl": [66, 118], "getarchitectur": 66, "getjavaijappargu": 66, "appnam": 66, "apparg": 66, "applic": [66, 107, 108, 115, 117, 137, 141, 165, 201, 383, 384, 406, 427, 429, 445, 449, 455, 468, 474, 508, 509, 524, 525, 535, 541], "imagej": [66, 410, 423, 473, 478], "amount": [66, 164, 428, 444, 450, 460, 468, 536, 547], "jvm": [66, 464, 481], "qualifi": [66, 167], "getjvmmaxmemori": 66, "initprotocoltcpserv": 66, "launchsupervisedpickergui": 66, "micsfn": 66, "pickerprop": [66, 77], "intmpfold": [66, 77], "launchtiltpairpickergui": 66, "runjavaijapp": 66, "emprotocolview": [67, 74], "protocolview": [67, 70, 139, 169, 340, 343, 346, 347, 352, 402], "createangdistributionsqlit": 67, "sqlitefn": [67, 141], "numberofparticl": 67, "createvolumessqlit": 67, "objectview": [67, 77, 105], "filenameorobject": 67, "know": [67, 101, 168, 310, 383, 388, 399, 401, 422, 423, 428, 433, 442, 460, 463, 464, 468, 477, 479, 483, 500, 506, 510, 519, 530, 532], "helper": [68, 101, 229, 287, 322, 328, 392], "createcoordinateaxisfil": 68, "bildfilenam": 68, "tmp": [68, 71, 77, 101, 150, 161, 169, 323, 392, 422, 423, 435, 437, 507, 510, 512, 513, 520], "bild": [68, 432], "r1": 68, "sphere": [68, 83, 84, 281, 432, 524, 526], "chimera_hom": [68, 464], "gethom": [68, 137, 391, 442], "fail": [68, 101, 137, 141, 147, 150, 167, 257, 258, 386, 388, 410, 435, 442, 447, 451, 461, 481, 487, 492, 547], "getprogram": [68, 442], "prognam": 68, "chimerax": [68, 410, 428, 462, 464, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 504, 505, 506, 509, 510, 511, 512, 513, 515, 517, 518, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 547], "getsymmetri": [68, 200], "scipionsym": 68, "equival": [68, 136, 218, 343, 397, 447, 460, 524], "chimeraangdist": 68, "volfil": 68, "tmpfilespath": 68, "commandview": [68, 73, 169], "createangulardistributionfil": 68, "initvolumedata": 68, "readangulardistfil": 68, "chimeraclientview": 68, "chimeraview": 68, "extern": [68, 73, 127, 141, 159, 165, 169, 261, 391, 392, 406, 418, 422, 425, 464, 468], "chimeradataview": 68, "dataview": [68, 75, 77, 338, 423, 468, 505, 527, 533], "vol": [68, 204, 244, 285, 304, 320, 321, 415, 423, 478], "viewparam": [68, 77, 100], "overwritten": [68, 73, 77, 113, 169, 193, 391, 463], "desktop": [68, 69, 71, 72, 73, 77, 113, 169, 380, 391, 392, 397, 398, 410, 414, 415, 421, 423, 425, 428, 435, 455], "generatecolorlegend": 68, "stepcolor": 68, "colorlist": 68, "threelabelsonli": 68, "legend": [68, 113], "medium": [68, 385, 415, 461, 503, 505, 527, 533], "mapvolswithcolorkei": 68, "displayvolfilenam": 68, "mapvolfilenam": 68, "voldim": [68, 320, 321], "volorigin": 68, "scriptfilenam": 68, "chimeracolor": 68, "bgcolorimag": 68, "white": [68, 77, 107, 108, 127, 167, 184, 191, 384, 386, 468, 547, 548], "showaxi": [68, 70], "fontsiz": [68, 77, 113], "surfac": [68, 432, 468, 505, 508, 526, 537, 547], "mapvolfikenam": 68, "colorkei": 68, "printcmd": 68, "cmd": [68, 118, 169, 182, 184, 464], "fscviewer": 69, "createfscobject": 69, "event": [69, 79, 82, 83, 84, 106, 107, 111, 123, 125, 126, 127, 128, 129, 130, 159, 165, 188, 222, 423, 445], "plotfsc": 69, "block": [69, 108, 113, 156, 160, 165, 204, 212, 298, 299, 301, 411, 428, 452, 453, 477, 478, 532], "chimeraattributeview": 70, "createattributesfil": 70, "chieleid": 70, "getatomstructobject": 70, "getcolor": [70, 139], "getvaluesrang": 70, "localresolutionview": 70, "binarycondit": 70, "colormap": [70, 105, 108, 112, 123, 124, 125, 127, 188, 192, 193], "createchimerascript": [70, 329, 332], "scriptfil": 70, "fnresvol": 70, "fnorigmap": 70, "samprat": 70, "numcolor": 70, "lowreslimit": 70, "highreslimit": 70, "getimgdata": 70, "imgfil": 70, "minmaskvalu": 70, "maxmaskvalu": 70, "getslic": 70, "volumedata": 70, "getsliceimag": 70, "slicenumb": 70, "dataaxi": 70, "chimerainstal": 70, "getcifkeynam": 70, "keybas": 70, "getresidueaverag": 70, "atomvalu": 70, "atomspec": 70, "getresidueposit": 70, "attrspec": 70, "attrvalu": 70, "chainnam": 70, "getstructurerecipi": 70, "makeresiduevaluesd": 70, "replaceocuppancywithattribut": 70, "instead": [70, 108, 133, 136, 137, 168, 285, 383, 391, 392, 397, 398, 410, 422, 430, 432, 435, 439, 442, 452, 453, 459, 464, 468, 470, 492, 493, 494, 495, 496, 518, 521, 522, 523, 524, 525, 526, 529, 535, 541, 542, 547, 548], "atribut": 70, "defattr": 70, "switch": [70, 299, 400, 428, 442, 445, 460, 473, 477, 547, 548], "occup": [70, 201, 222, 306, 512, 537], "notabl": 70, "colour": [70, 401, 534], "pdfreportview": 71, "tmppath": [71, 169], "sequenceview": 72, "editor": [72, 201, 397, 410, 423, 442, 450, 464, 504, 530], "vmd": 73, "help": [73, 107, 119, 149, 150, 165, 174, 187, 188, 233, 346, 347, 383, 387, 395, 397, 398, 400, 402, 403, 406, 410, 413, 415, 423, 426, 427, 433, 434, 435, 437, 439, 441, 444, 451, 460, 462, 470, 471, 474, 477, 487, 489, 492, 505, 508, 509, 511, 512, 515, 517, 518, 519, 520, 521, 522, 523, 524, 528, 529, 530, 532, 535, 537, 539, 544, 547, 548, 550, 551], "manag": [73, 87, 102, 111, 115, 118, 127, 138, 148, 173, 188, 193, 397, 400, 402, 406, 408, 410, 415, 421, 425, 429, 437, 444, 447, 448, 451, 452, 460, 461, 471, 477, 481, 509, 524, 547], "vmd_home": 73, "vmdview": 73, "vmdcommand": 73, "vmdviewer": 73, "errorwindow": 74, "tkparent": [74, 127, 169], "msg": [74, 77, 94, 107, 111, 132, 150, 154, 167, 169, 436, 447], "viewerprotimportvolum": 74, "registerconfig": 75, "registr": [75, 137, 201, 414, 547], "setofxxx": 75, "shown": [75, 77, 107, 117, 122, 130, 391, 392, 399, 400, 413, 415, 430, 431, 434, 436, 441, 453, 455, 460, 468, 471, 473, 474, 477, 478, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "classes3dview": 77, "classesview": 77, "coordinatesobjectview": 77, "mode_automat": 77, "ctfview": 77, "ctfset": [77, 204, 234, 338], "extra_label": 77, "_ctftilt_tiltaxi": 77, "_ctftilt_tiltangl": 77, "_xmipp_ctfcritfirstzero": 77, "_xmipp_ctfcritcorr13": 77, "_xmipp_ctfcritic": 77, "_xmipp_ctfcritfit": 77, "_xmipp_ctfcritnonastigmaticvalidti": 77, "_xmipp_ctfcritctfmargin": 77, "_xmipp_ctfcritmaxfreq": 77, "_xmipp_ctfcritpsdcorr90": 77, "_xmipp_ctfvppphaseshift": 77, "psd_label": 77, "_micobj": 77, "_filenam": [77, 430], "_psdfile": 77, "_xmipp_enhanced_psd": 77, "_xmipp_ctfmodel_quadr": 77, "_xmipp_ctfmodel_halfplan": 77, "plotglob": 77, "web": [77, 79, 108, 128, 150, 165, 169, 173, 174, 326, 380, 383, 384, 390, 398, 402, 406, 410, 414, 415, 416, 418, 421, 423, 424, 425, 442, 455, 498, 507, 510, 535, 546], "getpath": [77, 105, 141, 150, 154], "getshowjparam": 77, "getshowjwebparam": 77, "gettablenam": 77, "getviewparam": 77, "give": [77, 96, 132, 133, 135, 136, 137, 141, 149, 150, 154, 161, 166, 204, 254, 391, 392, 397, 398, 413, 422, 428, 435, 439, 447, 460, 487, 492, 525, 537, 543, 547, 548], "access": [77, 79, 80, 132, 139, 150, 157, 167, 174, 391, 392, 398, 402, 406, 415, 421, 425, 427, 429, 433, 437, 438, 444, 449, 450, 451, 456, 464, 473, 477, 478, 485, 492, 502, 503, 504, 506, 507, 524, 525, 529, 530, 532, 546, 549], "setmemori": 77, "imageview": 77, "getimagepath": 77, "micrographsview": 77, "render_label": 77, "psdcorr": 77, "tableview": 77, "headerlist": 77, "datalist": 77, "mesg": 77, "height": [77, 105, 106, 107, 108, 109, 110, 111, 112, 115, 118, 119, 120, 121, 123, 124, 125, 127, 130, 165, 188, 192, 193, 200, 468, 526], "400": [77, 124, 127, 161, 449, 465, 468], "pad": [77, 130, 188], "surnam": 77, "john": [77, 546], "smith": [77, 406], "larri": 77, "black": [77, 106, 107, 123, 167, 184, 191, 384, 410, 468, 477, 505, 511, 520, 527, 533], "walter": 77, "fred": 77, "becker": 77, "font": [77, 101, 107, 110, 111, 127, 130, 188, 192, 384, 398], "_1": 77, "_2": 77, "_project": 77, "strid": [77, 135, 136], "mode_md": 77, "widget": [77, 79, 87, 104, 105, 106, 107, 108, 111, 112, 117, 123, 124, 125, 127, 128, 129, 169, 188, 192, 193], "parent": [77, 79, 105, 106, 107, 108, 111, 112, 115, 117, 118, 121, 123, 124, 125, 126, 127, 129, 130, 132, 133, 136, 158, 161, 169, 188, 192, 193, 311, 410, 411, 431, 435, 445], "dump": [77, 400, 450], "csv": [77, 122, 536], "savedata": 77, "treeview": [77, 129, 188], "mask_structure_wizard": [78, 81], "mask_volume_wizard": [78, 81], "discov": [79, 80, 137, 255, 257, 392, 403, 410, 413, 431, 435, 436, 439, 453], "runtim": [79, 397, 487, 492], "usag": [79, 94, 101, 137, 149, 200, 276, 395, 410, 413, 415, 435, 444, 445, 449, 454, 472, 474, 477, 507, 509, 548], "though": [79, 452, 481, 527, 547], "bandpassfilterdialog": 79, "downsampledialog": 79, "dialog": [79, 87, 104, 105, 108, 111, 117, 137, 193, 397, 410, 423, 434, 460, 471, 473, 547, 548], "treeprovid": [79, 105, 108, 117, 121, 126, 129, 188], "addfreqslid": 79, "getfreqdecai": [79, 283], "gethighfreq": [79, 283], "getlowfreq": [79, 283], "updatefilteredimag": 79, "colorscaledialog": 79, "parentwindow": [79, 107, 119, 120, 121, 125, 193], "colorpalett": 79, "assist": [79, 80, 201, 383, 424], "palett": [79, 492, 493, 494, 495, 496], "bodi": [79, 107, 108, 117, 450, 494, 512, 523, 539], "master": [79, 94, 105, 106, 107, 108, 111, 112, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 188, 192, 193, 386, 397, 399, 415, 427, 436, 437, 442], "draw": [79, 106, 110, 113, 130, 139, 410, 478, 509, 513, 524, 547, 548], "getavailablepalett": 79, "getcolorpalett": 79, "gethighest": 79, "getinterv": 79, "getlowest": 79, "colorscalewizardbas": [79, 80], "emwizard": [79, 80], "declar": [79, 391, 398, 431, 437, 438, 441, 460], "_target": [79, 169, 174, 392, 434], "definetarget": 79, "youview": 79, "scope": [79, 444], "definecolorscaleparam": 79, "_defineparam": [79, 392, 405, 435, 437, 441], "defaulthighest": 79, "defaultlowest": 79, "defaultinterv": 79, "defaultcolormap": 79, "viewersclass": 79, "sometim": [79, 80, 174, 387, 406, 410, 468, 477, 481, 505, 512, 521, 524, 547, 548], "ctfdialog": 79, "downkeypress": 79, "getdownsampl": 79, "getfreq": 79, "freqslid": 79, "highlightinnerslid": 79, "highlightouterslid": 79, "makebigg": 79, "makesmal": 79, "managemaskv": 79, "setfreq": 79, "val": [79, 245, 509], "showvalu": [79, 130], "var2set": 79, "labslid": 79, "outer": [79, 468, 505, 526, 528, 547, 548], "sampling_r": 79, "upkeypress": 79, "updatefreqr": 79, "updatesliderinnerradiu": 79, "updatesliderouterradiu": 79, "ctfdownsampledialog": 79, "ctfwizard": 79, "getview": [79, 137, 169, 174], "deprec": [79, 108, 149, 174, 410], "respond": [79, 111, 130, 169, 174], "web_django": [79, 169, 174], "px": [79, 165, 468, 526, 528, 531, 532, 543, 547, 548], "imagepreviewdialog": 79, "downsamplewizard": 79, "filterparticleswizard": 79, "filterwizard": 79, "filtervolumeswizard": 79, "formuladialog": 79, "attibut": 79, "formul": 79, "load": [79, 80, 105, 118, 124, 126, 136, 137, 139, 141, 146, 150, 159, 166, 167, 188, 200, 292, 311, 391, 398, 410, 415, 423, 437, 438, 441, 445, 449, 451, 452, 453, 468, 473, 474, 477, 478, 505, 509, 510, 512, 520, 521, 523, 524, 532, 547, 548], "addattributetoformula": 79, "evaluateformula": 79, "getformula": 79, "getitem": 79, "gaussianfilterdialog": 79, "getfreqsigma": 79, "gaussianparticleswizard": 79, "gaussianwizard": 79, "gaussianvolumeswizard": 79, "previewdialog": 79, "maskpreviewdialog": 79, "addradiusbox": 79, "getradiu": 79, "radiusslid": 79, "getradiusangstrom": 79, "setradiu": 79, "updatesliderradiu": 79, "maskradiipreviewdialog": 79, "maskradiiwizard": 79, "maskradiuswizard": 79, "setvar": [79, 108, 434], "pdbvolumewizard": 79, "particlemaskradiuswizard": 79, "particlesmaskradiiwizard": 79, "layout": [79, 106, 108, 110, 115, 410, 450], "panel": [79, 105, 118, 188, 391, 397, 410, 428, 437, 449, 468, 474, 487, 488, 492, 493, 494, 495, 496, 507, 508, 509, 511, 512, 518, 520, 521, 522, 523, 524, 525, 527, 528, 529, 532, 533, 535, 541, 542, 547], "bottom": [79, 84, 106, 108, 165, 188, 387, 398, 423, 445, 450, 453, 468, 474, 477, 478, 492, 493, 494, 495, 496, 501, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "bodyfram": [79, 107, 108, 117], "focu": [79, 107, 108, 117, 383, 406, 434, 448, 479, 484, 501, 512, 524], "overridden": [79, 107, 108, 117, 166], "__init__": [79, 107, 108, 117, 145, 149, 189, 383, 390, 392, 395, 405, 435, 437, 438, 442], "variablewizard": [79, 80], "paramnam": [79, 108, 137, 149, 150, 392], "addtarget": [79, 184], "targetparamnam": 79, "filterpresentinput": 79, "inputparam": [79, 80], "flexibl": [79, 133, 271, 383, 406, 410, 435, 451, 468, 481, 495, 496, 524, 525, 533, 539, 542, 545], "enumparam": [79, 108, 149, 433], "intparam": [79, 149, 268, 392, 435, 437], "hei": 79, "getinputoutput": 79, "volumemaskradiiwizard": 79, "volumemaskradiuswizard": 79, "inserttext": 79, "texttoinsert": 79, "abl": [80, 149, 169, 383, 387, 391, 392, 398, 400, 401, 406, 407, 408, 410, 422, 435, 436, 437, 439, 441, 442, 444, 449, 451, 452, 453, 455, 459, 464, 471, 477, 487, 489, 492, 502, 509, 519, 526, 542, 547, 548, 551], "changeoriginsamplingwizard": 80, "colorscalewizardrmsd": 80, "getstructurechainswizard": 80, "editionlistofchain": 80, "listofchain": 80, "getmodelschainsstep": 80, "modelslength": 80, "modelsfirstresidu": 80, "importacquisitionwizard": 80, "importcoordinatesboxsizewizard": 80, "importoriginvolumewizard": 80, "pythonformulawizardx1": 80, "pythonformulawizardx2": 80, "pythonformulaewizard": 80, "pythontoprankwizard": 80, "selectattributewizard": 80, "getinputattribut": 80, "selectchainwizard": 80, "open": [80, 91, 101, 127, 136, 150, 165, 169, 173, 188, 201, 257, 258, 382, 383, 387, 391, 398, 400, 402, 406, 407, 410, 415, 424, 425, 428, 434, 435, 437, 438, 439, 441, 442, 444, 445, 448, 449, 450, 453, 455, 456, 460, 461, 468, 473, 477, 478, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 504, 505, 507, 508, 509, 510, 511, 512, 513, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 550, 551], "selectresiduewizard": 80, "editionlistofresidu": 80, "getresidu": 80, "chainstr": 80, "finalresidueslist": 80, "idx": [80, 224, 225, 238], "draggablepoint": 82, "dragabbl": 82, "disconnect": [82, 414, 426, 427, 428, 468, 487], "getxyz": 82, "lock": [82, 145, 444, 474], "on_mot": 82, "on_press": 82, "on_releas": [82, 83, 84], "reset": [82, 127, 141, 150, 165, 410], "remove_projection_direct": 82, "prev_point": 82, "maskstructurewizard": 83, "change_view": [83, 84], "downsamplingpc": [83, 84], "voxel_s": [83, 84], "get_sphere_param": [83, 84], "initializeplot": [83, 84, 222], "is_window_clos": [83, 84, 222], "plot_spher": [83, 84], "press_shift": [83, 84], "release_shift": [83, 84], "set_axes_equ": [83, 84], "cube": [83, 84, 468, 526, 527], "set_aspect": [83, 84], "don": [83, 84, 161, 387, 391, 397, 400, 401, 410, 422, 439, 442, 450, 481, 512], "maskvolumewizard": 84, "changethreshold": 84, "mass_cent": 84, "remove_outli": 84, "app": [86, 87, 101, 189, 398, 407, 410, 423, 429, 435, 439, 445], "mapper": [86, 87, 107, 108, 126, 136, 137, 150], "webservic": [86, 87, 388], "templat": [86, 87, 137, 147, 191, 193, 194, 204, 252, 270, 288, 390, 392, 402, 410, 415, 437, 438, 440, 449, 450, 451, 452, 460, 487, 490, 492, 495, 499, 509, 517, 522, 545, 546], "pw_manag": [87, 88], "pw_plot": [87, 88], "pw_project": [87, 88], "pw_protocol_list": [87, 88], "pw_protocol_mpirun": [87, 88], "pw_protocol_remot": [87, 88], "pw_protocol_run": [87, 88, 435, 439, 445], "pw_run_test": [87, 88, 101, 435], "pw_schedule_run": [87, 88], "pw_sleep": [87, 88], "pw_sync_data": [87, 88, 395], "pw_viewer": [87, 88], "canva": [87, 104, 109, 123, 125, 130, 423], "graph_layout": [87, 104], "matplotlib_imag": [87, 104], "tooltip": [87, 104, 105, 107, 117, 130, 402, 450, 468], "sqlite_db": [87, 131], "xmlmapper": [87, 131], "executor": [87, 142, 150], "test_util": [87, 152, 413, 435], "echo": [87, 155, 407, 442, 460, 461], "profil": [87, 155, 396, 423, 442, 444, 461, 468], "progressbar": [87, 155], "notifi": [87, 170, 386], "openproject": [91, 124], "projectnam": [91, 140, 141, 193, 450], "recent": [91, 140, 187, 406, 435, 459, 481, 485, 489, 490, 500, 546], "getfirstlin": 92, "doc": [92, 101, 102, 157, 159, 383, 391, 392, 396, 406, 415, 435, 444, 449, 519], "non": [92, 113, 136, 160, 201, 296, 391, 398, 406, 410, 414, 428, 435, 437, 452, 453, 460, 474, 477, 507, 513, 519, 527, 530, 536, 537, 538, 539, 548], "hasdoubleinherit": 92, "classref": 92, "respons": [93, 95, 98, 99, 147, 189, 383, 386, 391, 395, 422, 424, 430, 444, 447, 449, 450, 472], "intend": [94, 242, 379, 396, 399, 464], "ssh": [94, 395, 400, 414, 421, 427, 428, 449], "job": [94, 141, 146, 147, 150, 165, 383, 392, 410, 414, 422, 445, 460, 492, 507, 535], "_launchloc": [94, 439], "jobid": [94, 150], "track": [94, 125, 142, 144, 150, 229, 383, 400, 406, 410, 477, 507, 508, 535, 546, 547, 548, 551], "tester": 96, "gettestscommand": 96, "printtest": 96, "modulenam": [96, 101, 166, 195], "runsingletest": 96, "runtest": [96, 154], "runschedul": 97, "logger": [97, 159], "met": [97, 149, 262, 437, 503, 509, 517], "getinitialsleeptim": 97, "getsleeptim": 97, "schedul": [97, 108, 141, 147, 159, 165, 193, 386, 410, 436, 453], "parsearg": 97, "synchron": [99, 101, 145, 395, 444], "scipion_test": [99, 101, 395], "question": [99, 107, 127, 130, 149, 165, 166, 191, 392, 398, 477, 506, 509, 510, 513, 520, 527, 530, 532, 545, 550], "continu": [99, 141, 150, 165, 252, 392, 402, 406, 410, 424, 425, 428, 434, 448, 451, 452, 453, 468, 469, 483, 487, 500, 509, 510, 511, 512, 520, 524, 547], "updatemanifest": 99, "remot": [99, 141, 146, 147, 150, 167, 187, 380, 387, 391, 395, 410, 414, 415, 421, 428, 449, 506], "checksum": [99, 395], "createmanifest": 99, "manifest": [99, 395], "md5": 99, "below": [99, 167, 377, 378, 391, 392, 399, 406, 407, 410, 413, 414, 419, 422, 426, 427, 428, 431, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 447, 448, 449, 452, 453, 461, 464, 468, 473, 492, 493, 494, 495, 496, 509, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549], "destin": [99, 161, 392, 421, 464], "mention": [99, 406, 407, 430, 448, 452, 453, 461, 468, 474, 487, 489, 506, 512, 520, 522, 547, 548], "get_pars": 99, "argpars": 99, "parser": [99, 189], "listdataset": 99, "md5sum": 99, "fname": [99, 161, 181, 183], "hash": 99, "workingcopi": 99, "upload": [99, 165, 173, 187, 311, 395, 428, 429, 449, 450, 453, 490, 492], "login": [99, 391, 395, 414, 421, 425, 427, 428, 437, 449, 453, 455], "remotefold": [99, 395], "showdir": 100, "showfil": 100, "scipion_hom": [101, 154, 391, 392, 408, 436, 438, 439, 442, 445, 453, 463, 464, 481], "no_color": 101, "someth": [101, 386, 391, 395, 400, 408, 422, 430, 435, 442, 453, 462, 481], "deactiv": [101, 388, 403], "compli": 101, "scipion_cancel_fastcopi": 101, "cancel": [101, 107, 165, 460, 474], "fast": [101, 201, 209, 210, 392, 410, 447, 460], "shutil": [101, 161, 437], "happen": [101, 102, 184, 391, 398, 435, 437, 439, 449, 468, 547, 548], "gpf": [101, 429], "scipion_config": 101, "scipion_cwd": 101, "tmpnm60srsi": 101, "de7f4e4efc93d97553ee860b82c51c1a7a7029af": 101, "scipion_domain": [101, 464], "scipion_font_nam": [101, 464], "helvetica": [101, 107, 398, 464], "scipion_font_s": 101, "scipion_gui_cancel_auto_refresh": 101, "refresh": [101, 123, 125, 127, 137, 141, 150, 165, 402, 450, 451, 468, 477], "scipion_gui_refresh_initial_wait": 101, "wait": [101, 102, 141, 147, 153, 154, 165, 324, 405, 410, 414, 415, 422, 428, 435, 437, 439, 442, 452, 453, 454, 535, 547, 548], "scipion_gui_refresh_in_thread": 101, "unstabl": 101, "instal": [101, 107, 119, 126, 137, 146, 148, 150, 165, 173, 176, 177, 200, 207, 383, 387, 388, 398, 406, 407, 410, 413, 414, 415, 418, 419, 421, 425, 428, 429, 437, 438, 442, 445, 446, 448, 450, 452, 453, 454, 457, 459, 460, 464, 472, 477, 483, 492, 515, 545, 547, 548, 550, 551], "scipion_softwar": [101, 463, 464], "scipion_host": 101, "cof": 101, "queue": [101, 108, 141, 146, 147, 150, 165, 383, 410, 477], "engin": [101, 165, 201, 399, 406, 415, 463, 464], "hpc": [101, 406, 460], "scipion_local_config": 101, "scipion_devel": [101, 414], "scipion_log": [101, 159, 464], "scipionuserdata": [101, 421, 429, 435, 453, 460, 464, 470], "scipion_logo": 101, "gif": [101, 111, 115, 124, 165, 391], "scipion_user_data": [101, 383, 416, 447, 453], "scipion_log_config": [101, 159], "fine": [101, 243, 392, 437, 468], "tune": [101, 243, 406, 410, 468], "scipion_log_format": 101, "logrecord": 101, "scipion_log_level": [101, 159], "among": [101, 150, 188, 383, 384, 392, 399, 406, 410, 422, 430, 442, 481, 487, 489, 501, 505, 509, 512, 513, 519, 535, 536, 546], "critic": [101, 392, 468, 470], "notset": 101, "scipion_notes_arg": [101, 391], "scipion_notes_fil": [101, 391], "scipion_notes_program": [101, 391], "scipion_notifi": [101, 388, 391, 464], "almost": [101, 156, 252, 410, 468, 470, 492, 500, 502, 505, 525, 527, 533, 538, 539, 550], "improv": [101, 201, 383, 392, 402, 403, 444, 451, 468, 481, 485, 489, 490, 492, 503, 507, 508, 509, 510, 511, 512, 517, 527, 533, 535, 537, 538, 546, 551], "scipion_plugin_json": 101, "scipion_plugin_repo_url": 101, "getplugin": [101, 137, 187, 391], "scipion_priority_package_list": [101, 410], "scipion_protocol": 101, "scipion_scratch": [101, 161], "mount": [101, 415, 421, 428], "scratch": [101, 161, 165, 391, 433, 442, 547], "drive": [101, 487, 512], "ssd": [101, 428], "scipion_steps_check_sec": [101, 410], "streamifi": [101, 107, 119, 410, 437], "scipion_support_email": 101, "scipion_tests_cmd": 101, "scipion_tests_output": [101, 447], "scipion_test_nosync": 101, "ye": [101, 107, 108, 165, 167, 391, 392, 409, 422, 444, 460, 468, 470, 476, 492, 505, 509, 513, 519, 520, 524, 525, 526, 527, 532, 534, 535, 539, 543, 544, 547, 548], "scipion_tmp": 101, "scipion_update_set_attempt": 101, "attempt": [101, 406], "scipion_update_set_attempt_wait": 101, "scipion_url": 101, "scipion_url_softwar": 101, "scipion_url_testdata": 101, "wizard_mask_color": 101, "125": 101, "909": 101, "972": 101, "colorsintermin": 101, "undefin": [101, 108, 442], "debugon": 101, "scipion_debug": 101, "activ": [101, 113, 137, 141, 145, 165, 386, 387, 388, 392, 403, 410, 435, 442, 445, 453, 454, 456, 461, 468, 471, 473, 477, 481, 492, 523, 524, 546, 547, 548], "debugsqlon": 101, "getbindingsfold": 101, "sy": [101, 154, 167, 407, 464], "cl": [101, 136, 150, 154, 163, 222, 391, 392, 435, 438, 442, 444, 447], "getlibfold": [101, 184, 391], "getdomain": [101, 141], "getexternaljsontempl": [101, 195], "getlogsfold": 101, "getprioritypackagelist": 101, "getpythonlibfold": 101, "getstepschecksecond": 101, "getupdatesetattempt": 101, "getupdatesetattemptswait": 101, "getvar": [101, 137, 442], "getwizardmaskcolor": 101, "printvar": 101, "mostli": [101, 445, 481, 509, 524], "refreshinthread": 101, "setdomain": 101, "moduleornameorpath": 101, "toggledebug": 101, "toggledebugsql": 101, "findresourc": 101, "gennoteshead": 101, "getappspath": 101, "getmodulefold": [101, 195], "getpwprotmpirunscript": 101, "getpyworkflowpath": 101, "getschedulescript": 101, "getsyncdatascript": 101, "gettestsscript": 101, "getviewerscript": 101, "docsiteurl": 102, "site": [102, 187, 387, 391, 397, 406, 415, 418, 422, 425, 464, 498, 546], "config_sect": 102, "contactu": 102, "contact": [102, 103, 201, 386, 398, 410, 424, 428, 451, 481, 499, 513, 537, 538, 539, 545, 546, 547, 550, 551], "host_config": 102, "plugin_manag": [102, 177, 180], "wait_for": 102, "enter": [102, 111, 128, 129, 150, 165, 299, 415, 421, 428, 439, 546], "kp_enter": 102, "left_click": 102, "left_double_click": 102, "treeview_clos": 102, "treeviewclos": 102, "treeview_open": 102, "treeviewopen": 102, "pyworkflowexcept": 103, "solv": [103, 398, 406, 422, 444, 457, 468, 479, 498, 500, 501, 509, 538, 539, 545, 547, 548], "geturl": [103, 137, 150], "validationexcept": 103, "searchprotocol": [104, 114], "searchrun": [104, 114], "viewdata": [104, 114], "viewproject": [104, 114], "viewprotocol": [104, 114, 120, 445], "viewprotocols_extra": [104, 114], "objectbrows": 105, "concret": [105, 406, 468, 480], "filebrows": [105, 129, 410], "inspect": [105, 122, 161, 165, 166, 391, 410, 449, 450, 453, 507, 508, 509, 513, 520, 522, 524, 547, 548], "browserwindow": [105, 121], "minsiz": [105, 107, 111, 115, 118, 119, 120, 121, 124, 125, 188, 193], "setbrows": 105, "initialdir": 105, "selectiontyp": 105, "selectionsingl": 105, "allowfilt": 105, "filterfunct": 105, "previewdim": 105, "144": [105, 406, 507], "showhidden": 105, "selectbutton": 105, "entrylabel": [105, 107], "entryvalu": 105, "showinfo": [105, 107, 111], "onlyfold": 105, "tkinter": [105, 106, 108, 109, 113, 127, 130, 137, 165, 402], "select_non": 105, "select_fil": 105, "select_fold": 105, "select_path": 105, "hidden": [105, 149, 392, 509, 524], "entri": [105, 107, 108, 117, 121, 122, 126, 129, 133, 150, 204, 390, 399, 402, 406, 437, 468, 492, 513, 535, 547, 548], "_showinfo": 105, "getcurrentdir": 105, "getentryvalu": 105, "onclos": 105, "init": [105, 150, 391], "filebrowserwindow": 105, "onselect": 105, "registerhandl": 105, "filetreeprovid": 105, "fileinfo": 105, "getdat": 105, "getdatestr": 105, "getsizestr": 105, "human": [105, 167, 391, 470, 487, 488, 489, 490, 491, 492, 498, 502, 506, 508, 509, 510, 511, 512, 513, 520, 546], "readabl": [105, 108, 126, 136, 150, 167, 401, 409, 435, 470], "isdir": 105, "islink": [105, 140, 141], "currentdir": 105, "file_column": 105, "size_column": 105, "filekei": 105, "getdir": 105, "getfilehandl": 105, "getobjectact": [105, 108, 117, 120, 126, 129], "getobjectinfo": [105, 108, 117, 121, 126, 129], "getobjectpreview": [105, 117, 121, 126, 129], "desc": [105, 117, 121, 126, 129, 478], "getobject": [105, 108, 117, 121, 126, 129, 137, 141], "registerfilehandl": 105, "setdir": 105, "newpath": 105, "showpreview": 105, "showpreviewtop": 105, "construct": [105, 106, 108, 112, 123, 124, 125, 127, 130, 145, 184, 188, 192, 193, 227, 317, 319, 406, 433, 441], "resourc": [105, 106, 108, 111, 112, 123, 124, 125, 127, 130, 188, 192, 193, 384, 390, 400, 406, 414, 424, 425, 428, 487, 492, 501, 527], "background": [105, 106, 108, 112, 123, 124, 125, 127, 130, 188, 192, 193, 383, 384, 388, 398, 406, 468, 487, 520], "bd": [105, 106, 107, 108, 112, 123, 124, 125, 127, 130, 188, 192, 193], "bg": [105, 106, 107, 108, 112, 123, 124, 125, 127, 130, 188, 192, 193], "borderwidth": [105, 106, 108, 112, 123, 124, 125, 127, 130, 188, 192, 193], "cursor": [105, 106, 108, 112, 123, 124, 125, 127, 130, 188, 192, 193, 407, 468], "highlightbackground": [105, 106, 108, 112, 123, 124, 125, 127, 130, 188, 192, 193], "highlightcolor": [105, 106, 108, 112, 123, 124, 125, 127, 130, 188, 192, 193], "highlightthick": [105, 106, 108, 112, 123, 124, 125, 127, 130, 188, 192, 193], "relief": [105, 106, 107, 108, 112, 123, 124, 125, 127, 130, 188, 192, 193], "takefocu": [105, 106, 108, 112, 123, 124, 125, 127, 130, 188, 192, 193], "getselect": [105, 106, 130], "factori": [105, 136], "sqlfilehandl": 105, "textfilehandl": 105, "texticon": 105, "isstandardimag": 105, "texbox": 106, "edg": [106, 109, 165, 406, 477, 528, 538, 539], "drag": [106, 453, 468, 477, 548], "cabl": 106, "srcconnector": 106, "dstconnector": 106, "dstmove": 106, "dx": [106, 125, 201, 391, 465], "dy": [106, 125], "paint": [106, 109, 165], "paintplug": 106, "srcmove": 106, "updatecoord": 106, "tooltipcallback": 106, "tooltipdelai": 106, "1500": [106, 128], "scrollabl": [106, 108, 127, 129, 130], "realli": [106, 165, 387, 410, 422, 432, 509], "scrollbar": [106, 129, 130, 477], "closeenough": [106, 130], "confin": [106, 130], "insertbackground": [106, 127, 130], "insertborderwidth": [106, 127, 130], "insertofftim": [106, 127, 130], "insertontim": [106, 127, 130], "insertwidth": [106, 127, 130], "scrollregion": [106, 130], "selectbackground": [106, 127, 130], "selectborderwidth": [106, 127, 130], "selectforeground": [106, 127, 130], "state": [106, 120, 127, 129, 130, 150, 188, 201, 204, 243, 311, 332, 335, 383, 391, 400, 414, 428, 429, 437, 468, 477, 485, 525, 546], "xscrollcommand": [106, 127, 130, 188], "xscrollincr": [106, 130], "yscrollcommand": [106, 127, 130, 188], "yscrollincr": [106, 130], "additem": 106, "clear": [106, 108, 112, 113, 127, 129, 133, 136, 139, 188, 252, 335, 383, 392, 401, 406, 468, 489, 520], "createc": 106, "srcsocket": 106, "dstsocket": 106, "createedg": [106, 109], "srcitem": 106, "dstitem": 106, "createroundedtextbox": 106, "bgcolor": [106, 123, 125], "99dae8": 106, "textcolor": [106, 123, 125], "createtextcircl": 106, "createtextbox": 106, "drawgraph": 106, "drawnod": 106, "nodelist": 106, "node": [106, 109, 110, 122, 125, 139, 158, 160, 402, 410, 411, 415, 428, 429, 444, 460, 468, 477], "reorgan": [106, 125, 477], "getrunsfont": 106, "hidetooltip": 106, "moveto": [106, 109, 125], "move_start": 106, "multipleitemsselect": 106, "numitemsselect": 106, "onbutton1releas": 106, "onclick": [106, 107, 127], "oncontrolclick": 106, "ondoubleclick": [106, 107], "ondrag": 106, "onleav": 106, "onmot": 106, "onrightclick": [106, 127], "reorganizegraph": 106, "selectitem": 106, "updatescrollregion": 106, "zoomerm": 106, "zoomerp": 106, "coloredconnector": 106, "fillcolor": 106, "outlin": 106, "connector": 106, "represent": [106, 108, 126, 136, 149, 167, 211, 212, 402, 445, 468], "henc": [106, 187, 429, 460, 468], "ss": [106, 460], "invis": [106, 524], "paintsocket": 106, "updatecolor": 106, "updatedst": 106, "updatesrc": 106, "addpositionlisten": 106, "listenerfunc": 106, "addselectionlisten": 106, "addsocket": 106, "socketclass": 106, "verticalloc": 106, "countsocket": 106, "getbottomconnectorcoordin": 106, "getcent": 106, "y1": 106, "y2": 106, "getconnectorscoordin": 106, "getcorn": 106, "getinputconnectorcoordin": 106, "getleftconnectorcoordin": 106, "getoutputconnectorcoordin": 106, "getrightconnectorcoordin": 106, "getsocket": 106, "getsocketcoord": 106, "getsocketcoordsat": 106, "socketscount": 106, "getsocketsat": 106, "gettopconnectorcoordin": 106, "getupdownconnectorscoordin": 106, "lift": [106, 477], "textbox": [106, 125, 392, 468], "socket": [106, 423], "relocatesocket": 106, "setselect": [106, 139, 335], "socketsepar": 106, "verticalflow": 106, "oval": 106, "radio": [106, 468], "green": [106, 125, 154, 165, 167, 184, 191, 439, 487, 489, 490, 491, 501, 505, 507, 508, 509, 510, 512, 520, 535, 546, 547], "anchor": [106, 130], "circl": [106, 165, 280, 473, 509, 520, 547], "selectionlisten": 106, "rectangl": [106, 280, 473], "roundconnector": 106, "roundedtextbox": [106, 123], "textitem": 106, "squareconnector": 106, "halfsid": 106, "textcircl": 106, "findclosestconnector": 106, "item1": 106, "item2": 106, "findclosestpoint": 106, "list1": 106, "list2": 106, "findstrictclosestconnector": 106, "findupdownclosestconnector": 106, "getconnector": 106, "itemsourc": 106, "itemdest": 106, "tksimpledialog": 107, "toplevel": [107, 192], "destroi": [107, 108, 117], "buttonbox": 107, "btnframe": 107, "imgnam": [107, 111], "getresult": 107, "resultcancel": 107, "resultno": 107, "resulty": 107, "editobjectdialog": 107, "getcom": 107, "entrydialog": 107, "entrywidth": 107, "defaultvalu": [107, 133, 136, 137, 167, 453], "headerlabel": 107, "exceptiondialog": 107, "messagedialog": 107, "filebrowsedialog": 107, "filesystem": [107, 429], "brows": [107, 117, 165, 392, 397, 410, 453, 524], "flashmessag": 107, "delai": [107, 128], "solid": [107, 317, 319, 406], "func": [107, 111, 118, 150, 167, 177, 180, 422], "floatingmessag": 107, "xpo": [107, 113], "750": 107, "ypo": [107, 113], "textwidth": 107, "280": 107, "6e6e6": [107, 165, 398], "fg": 107, "genericdialog": 107, "iconpath": 107, "mani": [107, 141, 165, 259, 382, 391, 399, 403, 406, 410, 416, 428, 434, 437, 438, 439, 445, 455, 460, 463, 468, 477, 487, 492, 493, 505, 506, 509, 511, 513, 520, 547, 551], "theirs": [107, 430], "result_run_singl": 107, "result_run_al": 107, "result_cancel": 107, "button_cancel": [107, 165], "button_select": [107, 165], "action_execut": [107, 165], "listdialog": [107, 117, 434], "validateselectioncallback": [107, 117], "allowselect": [107, 117], "allowsemptyselect": 107, "searchbasewindow": [107, 119, 120], "go": [107, 164, 165, 242, 311, 387, 390, 391, 392, 397, 398, 400, 407, 408, 410, 414, 415, 428, 430, 435, 437, 438, 439, 442, 445, 450, 451, 453, 464, 468, 469, 471, 479, 481, 484, 487, 488, 489, 490, 491, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 520, 523, 524, 528, 532, 535, 542, 547, 548, 549], "casting_method": 107, "columnconfig": [107, 119, 120], "minwidth": [107, 119], "stretch": [107, 119, 120, 546], "NO": [107, 409, 492], "300": [107, 111, 119, 120, 465, 468], "110": [107, 119, 124, 201, 432], "score": [107, 119, 228, 250, 473, 487, 488, 490, 492, 493, 506, 507, 509, 510, 511, 512, 513, 517, 524, 535, 536, 537, 538, 539, 542], "_createresultstre": 107, "_onsearchclick": 107, "searchprotocolwindow": [107, 119], "casting_index": 107, "column_kwargs_index": 107, "column_text_index": 107, "weight_index": 107, "addsearchweight": 107, "line2search": 107, "searchtext": 107, "getcolumnkei": 107, "toolbarbutton": 107, "toolbar": [107, 117, 124, 468, 474, 477, 478, 509], "toolbarlistdialog": [107, 117], "yesnodialog": 107, "answer": [107, 400, 476, 506, 509, 510, 513, 520, 545], "askcolor": 107, "defaultcolor": 107, "asksingleallcancel": 107, "askstr": 107, "askyesno": [107, 111], "askyesnocancel": 107, "createmessagebodi": 107, "framebg": 107, "textbg": 107, "textpad": 107, "fillmessagetext": 107, "showerror": [107, 111], "showwarn": [107, 111], "boolvar": 108, "intvar": 108, "combovar": 108, "combobox": [108, 115, 130, 392], "formwindow": [108, 439], "hostlist": 108, "localhost": [108, 147, 449, 460], "row1": 108, "logo": [108, 115], "expert": [108, 150, 165, 402, 477], "tab": [108, 125, 127, 130, 383, 392, 402, 434, 445, 453, 468, 470, 474, 509], "adjustsect": 108, "adjusts": 108, "getvarvalu": 108, "varnam": [108, 137, 150, 167], "getwidgetvalu": 108, "protvar": 108, "setparamfromvar": 108, "setvarfromparam": 108, "updatelabelandcommentvar": 108, "updateprotocollabel": 108, "updateprotocolparam": 108, "groupwidget": 108, "paramwidget": 108, "linewidget": 108, "visualizecallback": 108, "showbutton": 108, "multipointertreeprovid": 108, "boundtre": [108, 129], "multipointervar": 108, "addobject": 108, "getcolumn": [108, 117, 126, 129, 156], "removeobject": 108, "stringvar": 108, "getselectedobject": [108, 129], "middl": [108, 111, 453, 509, 520], "createboolwidget": 108, "radiobutton": 108, "condit": [108, 111, 133, 136, 149, 150, 153, 200, 201, 262, 271, 311, 392, 402, 406, 414, 435, 444, 447, 468, 524, 532, 547, 548], "ismultipoint": 108, "multipoint": 108, "pointervar": 108, "getpoint": [108, 136, 335], "protocolclasstreeprovid": 108, "protocolclassnam": 108, "Will": [108, 150, 161, 477, 509, 546], "queuedialog": 108, "queuedict": 108, "relationstreeprovid": 108, "relationparam": [108, 149], "subclassestreeprovid": 108, "scalartreeprovid": 108, "scalarparam": 108, "creation_column": 108, "info_column": 108, "pobj": 108, "isselect": [108, 139, 222, 335], "objectkei": 108, "scalarwithpointervar": 108, "changelisten": 108, "tcl": [108, 129], "py_varnum": 108, "omit": 108, "retain": [108, 473], "haspoint": [108, 136], "trace": [108, 136, 157, 167, 431, 445, 468, 495, 501, 503, 505, 509, 512, 520, 542], "trace_add": 108, "sectionfram": 108, "That": [108, 422, 449, 453, 464, 468, 481, 524], "red": [108, 125, 154, 165, 167, 184, 191, 398, 407, 432, 439, 477, 492, 493, 494, 495, 496, 502, 504, 507, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "adjustcont": 108, "sectionwidget": 108, "boolean": [108, 129, 133, 136, 149, 167, 294, 311, 383, 392, 399, 430, 453], "pointerparam": [108, 149, 392, 433], "id_column": [108, 129], "dure": [108, 406, 410, 414, 422, 429, 430, 437, 444, 453, 455, 464, 468, 470, 481, 504, 510, 513, 524, 527, 538, 539, 544, 545, 547, 548], "_sortingcolumnnam": 108, "textvar": 108, "verticalscrolledfram": 108, "kw": [108, 130, 188], "pure": [108, 173, 406, 448], "interior": [108, 547, 548], "pack": [108, 125, 424], "vertic": [108, 130, 432, 477, 478, 485, 487, 490, 491, 528], "scroll": [108, 130, 445, 473, 477, 478, 509, 519, 524], "editobject": 108, "area": [108, 406, 410, 434, 451, 468, 477, 505, 509, 511, 512, 520, 524, 527, 534, 538, 539, 542, 547, 548], "getobjectlabel": [108, 126], "getpointerlabelandinfo": 108, "leveltre": 109, "createnod": [109, 158], "maxlevel": 109, "9999": 109, "useposit": 109, "recomput": 109, "setcanva": 109, "had": [109, 391, 507, 547], "basiclayout": 110, "graphlayout": 110, "much": [110, 391, 401, 406, 409, 413, 428, 444, 447, 477, 487, 490, 492, 509, 510, 512, 517, 520, 525, 533, 537, 547], "alloc": [110, 414, 444, 460, 492], "plane": [110, 432, 510, 519, 547, 548], "getfontscalefactor": 110, "affect": [110, 241, 246, 247, 248, 383, 468, 547], "leveltreelayout": 110, "recurs": [110, 122, 161, 391, 509, 510], "child": [110, 111, 129, 130, 132, 133, 149, 158, 243, 431, 435, 445], "fit": [110, 299, 325, 383, 406, 410, 423, 450, 455, 468, 477, 484, 485, 490, 491, 492, 494, 495, 496, 498, 499, 501, 505, 507, 510, 511, 512, 517, 519, 520, 521, 522, 524, 525, 536, 537, 538, 539, 541, 545], "sibl": 110, "masterwindow": [111, 115], "scipion_icon": [111, 115, 124, 165], "configureweight": 111, "createclosebutton": 111, "createmainmenu": 111, "menuconfig": [111, 126, 139], "desireddimens": 111, "enqueu": 111, "percent": [111, 164, 167], "maxheight": 111, "getroot": [111, 158], "handlemov": 111, "handleres": 111, "plugin_callback": 111, "registerpluginmenu": 111, "mainloop": 111, "pop": [111, 193, 392, 400, 414, 439, 453, 468, 471, 487, 488, 492, 493, 507, 509, 531, 542, 543, 548], "aliasfont": 111, "fontalia": 111, "fontkei": 111, "centerwindow": 111, "refwindow": 111, "screen": [111, 192, 271, 312, 346, 410, 414, 426, 427, 435, 455, 468, 477, 506, 509, 534], "changefonts": 111, "999": 111, "maxsiz": [111, 127, 161], "changefontsizebydeltha": 111, "deltha": 111, "configureweigth": 111, "rowconfigur": 111, "columnconfigur": 111, "definestyl": 111, "style": [111, 130, 188, 391, 401, 402, 520], "getbigfont": 111, "getdefaultfont": 111, "getgeometri": 111, "win": 111, "imagenam": 111, "imgdict": 111, "tkimag": 111, "getnamedfont": 111, "fontnam": 111, "hasfont": 111, "saveconfig": 111, "setcommonfont": 111, "setfont": 111, "tkfont": 111, "figurefram": 112, "frameon": 112, "getcanva": [112, 113], "getfigur": [112, 113], "imagepreview": 112, "36": [112, 167, 201, 406, 517], "listenersdict": 112, "maskpreview": 112, "updatemask": 112, "outerradiu": 112, "innerradiu": 112, "setwindowtitl": 112, "updatedata": 112, "psdpreview": 112, "lf": 112, "hf": 112, "72": [112, 149, 406, 536], "creater": 112, "updatefreq": 112, "createbgimag": 112, "getpngdata": 112, "getwedgeextraparam": 112, "maxrad": 112, "backend": 113, "createcanva": 113, "createsubplot": 113, "yformat": 113, "rectilinear": 113, "plot_yformat": 113, "aitoff": 113, "hammer": 113, "lambert": 113, "mollweid": 113, "polar": 113, "getcolorbar": 113, "getlastsubplot": 113, "isclos": 113, "loc": [113, 261], "savefig": 113, "setbackend": 113, "tkagg": 113, "agg": 113, "showlegend": 113, "tightlayout": 113, "gethexcolorlist": 113, "numberofcolor": 113, "colornam": 113, "hexcolor": 113, "projectbasewindow": [115, 118, 193], "900": [115, 415], "footer": [115, 384], "addviewlist": 115, "createheaderfram": [115, 118], "getviewwidget": 115, "onabout": 115, "oncontactsupport": 115, "onexit": [115, 188], "ononlinehelp": 115, "switchview": [115, 193], "newview": [115, 193], "editlabeldialog": 117, "labelsdialog": 117, "labelstreeprovid": 117, "objlist": [117, 129], "configuretag": [117, 127, 129], "three": [118, 125, 201, 310, 386, 391, 392, 406, 410, 432, 438, 444, 449, 464, 468, 484, 487, 488, 489, 492, 493, 494, 495, 496, 498, 505, 509, 510, 512, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 530, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 546, 547, 548], "upper": [118, 130, 316, 383, 392, 468, 487, 507, 508, 509, 520, 524, 525, 528, 535, 536, 537, 538, 539], "summari": [118, 150, 165, 187, 201, 278, 400, 402, 409, 434, 437, 444, 449, 450, 451, 453, 454, 468, 492, 493, 494, 495, 496, 509, 510, 511, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 551], "projectmanagerwindow": 118, "onbrowsefil": 118, "ongener": 118, "onhost": 118, "onprotocol": 118, "onus": [118, 188], "projecttcprequesthandl": 118, "projecttcpserv": 118, "threadingmixin": 118, "projectwindow": 118, "getset": [118, 141], "initprojecttcpserv": 118, "loadproject": [118, 140], "managelabel": 118, "onaddaprotocol": 118, "ondebugmod": 118, "onexporttreegraph": 118, "onimportworkflow": 118, "onlocateaprotocol": 118, "onmanageprojectlabel": 118, "onnot": 118, "onremovetemporaryfil": 118, "onscipionlog": 118, "onsearchworkflow": 118, "onselectallprotocol": 118, "ontogglecolormod": 118, "recalculatectf": 118, "inputobjid": 118, "registerobjectcommand": 118, "runobjectcommand": 118, "inputstrid": 118, "objstrid": 118, "saveset": [118, 141], "scheduleplot": 118, "protocoltreeprovid": 119, "objecttreeprovid": [119, 129], "scoreprotocol": 119, "runstreeprovid": 120, "actionfunc": 120, "projectrunstreeprovid": [120, 129], "advanc": [120, 165, 254, 406, 410, 457, 468, 470, 473, 477, 478, 492, 493, 494, 495, 496, 507, 508, 509, 513, 519, 520, 525, 527, 532, 533, 534, 535, 538, 539, 541, 542, 547], "getactionsfromselect": 120, "searchrunwindow": 120, "runsgraph": 120, "150": [120, 124, 406, 465], "200": [120, 311, 406, 453, 465, 468], "stepstreeprovid": 121, "stepslist": 121, "stepswindow": 121, "filltoolbar": 121, "linuxhandl": 122, "oshandl": 122, "abc": [122, 194], "maximizewindow": 122, "machandl": 122, "getdistro": 122, "getplatform": 122, "abstract": [122, 129, 137, 150, 194, 201, 549], "windowshandl": 122, "getstatuscolor": 122, "add8e6": 122, "he": [122, 382, 383, 468, 487, 492], "getstatuscolorfromnod": 122, "getstatuscolorfromrun": 122, "prot": [122, 125, 149, 154, 343, 435], "inspectobj": 122, "maxdeep": 122, "inspectdetail": 122, "memorydict": 122, "member": [122, 402, 456, 513], "compound": [122, 130, 383], "deep": [122, 238, 240, 276, 311, 312, 346, 347, 410, 451, 453, 484, 505, 527, 546], "address": [122, 201, 300, 399, 406, 414, 415, 422, 428, 442, 445, 487, 509, 549, 550], "isafinalprotocol": 122, "k": [122, 136, 201, 251, 404, 406, 410, 460, 519, 533, 546], "datatextbox": 123, "projectdataview": 123, "refreshdata": 123, "initrefreshcount": [123, 125], "_automaticrefreshdata": 123, "often": [123, 125, 383, 400, 409, 410, 441, 444], "toggleitemselect": 123, "populatetre": [123, 125], "parentid": [123, 133], "projectcreatewindow": 124, "projectsview": 124, "projectimportwindow": 124, "addactionsfram": 124, "createnewproject": 124, "projnam": [124, 140, 450], "projloc": 124, "createprojectlabel": 124, "projinfo": 124, "createprojectlist": 124, "deleteproject": [124, 140], "importproject": [124, 140], "copyfil": [124, 140, 161, 285], "searchloc": [124, 140], "renameproject": [124, 140], "init_refresh_second": 125, "protocolsview": 125, "what": [125, 137, 267, 382, 386, 392, 396, 397, 400, 401, 406, 410, 428, 429, 430, 437, 439, 444, 450, 451, 453, 463, 464, 468, 481, 506, 509, 547], "runs_canvas_nam": 125, "runs_canva": 125, "size_color": 125, "1048576": 125, "1073741824": 125, "orang": [125, 468, 487, 509], "1099511627776": 125, "cleaninfo": 125, "createactiontoolbar": 125, "prepar": [125, 141, 199, 211, 311, 324, 383, 392, 406, 438, 481, 507], "createcont": 125, "pane": [125, 392, 477], "createrunitem": 125, "createrunsgraph": 125, "createrunstre": 125, "drawrunsgraph": 125, "executeprotocol": 125, "directli": [125, 149, 150, 165, 261, 383, 391, 397, 402, 410, 425, 436, 438, 439, 449, 450, 468, 470, 476, 487, 492, 504, 506, 513, 527, 532, 547], "getcurrentprotocolview": 125, "_protocolview": 125, "getprotocolview": [125, 139, 141], "getselectedprotocol": 125, "hasparenthidden": 125, "keypress": 125, "treeitem": 125, "subclasseddict": 125, "refreshdisplayedrun": 125, "checkpid": [125, 141], "_automaticrefreshrun": 125, "refreshrun": 125, "refresh_with_thread": 125, "exit": [125, 395, 413, 492, 508, 513, 520, 547, 548], "behavior": [125, 400, 422, 444, 447, 453, 465], "setvisiblenod": 125, "switchrunsview": 125, "toggledataselect": 125, "updateprotocolstre": 125, "protcfg": 125, "updaterunsgraph": 125, "updaterunstre": 125, "updaterunstreeselect": 125, "runbox": 125, "nodeinfo": 125, "scipionlogwindow": 125, "accessori": 126, "protocolconfig": 126, "addsubmenu": [126, 139], "protocoltreeconfig": 126, "all_protocol": 126, "plugin_config_protocol": 126, "tag_protocol": 126, "tag_protocol_beta": 126, "protocol_beta": 126, "tag_protocol_dis": 126, "tag_protocol_group": 126, "protocol_group": [126, 391], "tag_protocol_new": 126, "protocol_new": 126, "tag_sect": 126, "getprotocoltag": 126, "isinstal": [126, 148, 150, 187], "isbeta": [126, 150], "isnew": [126, 150], "protocolsconf": [126, 140, 141], "runiotreeprovid": 126, "loggercallback": 126, "children": [126, 127, 136, 162, 391, 411], "hyperlinkmanag": 127, "hyperlink": [127, 397], "effbot": 127, "zone": [127, 241, 415, 453, 524], "outputtext": 127, "t_refresh": 127, "consol": [127, 159, 187, 414, 415, 427, 428, 435, 461, 464], "metacharact": 127, "meta": 127, "addlin": [127, 149, 392], "dorefresh": 127, "getdefault": [127, 149, 156], "readfil": 127, "taggedtext": 127, "recogn": [127, 167, 204, 406, 407, 521, 549], "some_text": 127, "bold": [127, 165, 167, 398, 434, 437, 474, 492], "_some_text_": 127, "ital": [127, 167, 398], "some_link": 127, "some_label": 127, "exportselect": [127, 130], "foreground": [127, 130, 188], "padx": [127, 130], "padi": [127, 130], "setgrid": [127, 130], "autosepar": [127, 130], "maxundo": [127, 130], "spacing1": [127, 130], "spacing2": [127, 130], "spacing3": [127, 130], "undo": [127, 130, 165, 474], "mailto": 127, "email": [127, 386, 398, 408, 410, 425, 428], "matchhypertext": 127, "openlink": 127, "addnewlin": 127, "addtext": 127, "copytoclipboard": 127, "gettext": [127, 129, 130], "gobegin": 127, "goend": 127, "highlight": [127, 165, 397, 398, 410, 453, 468, 474, 477, 501, 507, 520, 535, 546], "regexp": 127, "stackoverflow": [127, 130, 166], "3781670": 127, "isatend": 127, "openfil": 127, "openpath": 127, "setreadonli": [127, 139, 141], "settext": 127, "updatemenu": 127, "textfileview": 127, "filelist": [127, 169], "allowsearch": 127, "allowrefresh": 127, "allowopen": 127, "30": [127, 153, 167, 201, 406, 414, 432, 454, 457, 468, 477, 490, 499, 507, 509, 517, 525, 546], "labelbgcolor": 127, "addbind": 127, "addfil": 127, "buildsearchlist": 127, "matchcas": 127, "changefont": 127, "changeposit": 127, "createwidget": 127, "findprevtext": 127, "findtext": 127, "nextsearchindex": 127, "refreshal": 127, "textarea": 127, "refreshoutput": 127, "selectedtext": 127, "configurecolortag": 127, "find_prog": 127, "opentextfil": 127, "opentextfileeditor": 127, "showtextfileview": 127, "create_cont": 128, "motion": [128, 201, 410, 476, 537], "attributestreeprovid": 129, "listtreeproviderstr": [129, 434], "fetch": [129, 481], "getcolumnkeybycolumnnam": 129, "columnnam": [129, 156], "getobjectfromid": 129, "treeid": 129, "itemconfig": 129, "iterselectedobject": 129, "setprovid": 129, "sorttre": 129, "head": [129, 435], "pend": [129, 425, 468], "dbtreeprovid": 129, "listtreeprovid": 129, "getobj": 129, "listtreeprovidertempl": 129, "run_column": 129, "state_column": 129, "time_column": 129, "runskei": 129, "setrefresh": 129, "act": [129, 136, 149, 549], "ttk": [129, 130, 188], "getfirst": [129, 167], "moveitemdown": 129, "moveitemup": 129, "moveselectiondown": 129, "moveselectionup": 129, "previou": [129, 136, 150, 164, 165, 225, 270, 273, 281, 293, 299, 311, 383, 392, 400, 405, 407, 410, 414, 424, 434, 437, 438, 450, 452, 453, 460, 464, 468, 470, 473, 488, 490, 491, 492, 494, 496, 498, 505, 507, 508, 509, 510, 512, 517, 520, 523, 524, 525, 526, 531, 532, 535, 547, 548, 549], "fromselect": 129, "flat": [129, 133, 383], "selectchild": 129, "selectchildbyindex": 129, "sortbycolumn": 129, "revers": [129, 293], "cast": [129, 434, 453], "treview": 129, "sortingcolumnnam": 129, "sortingascend": 129, "feed": [129, 438], "getsortingcolumnnam": 129, "issortingascend": 129, "setsortingparam": 129, "ascend": [129, 410, 445], "sorten": 129, "suppos": [130, 184, 200, 204, 391, 422, 470, 519, 547, 548], "autoscrollbar": 130, "cnf": 130, "itself": [130, 187, 410, 422, 430, 445, 464, 492, 501, 505, 506, 533], "activebackground": 130, "activerelief": 130, "elementborderwidth": 130, "jump": [130, 410], "repeatdelai": 130, "repeatinterv": 130, "troughcolor": 130, "lo": [130, 380], "hi": [130, 406, 453, 487, 492, 537], "fraction": [130, 301, 493, 501, 505, 509, 512, 518, 520, 525, 528, 534, 537, 542], "slider": [130, 468], "activeforeground": 130, "bitmap": 130, "disabledforeground": 130, "justifi": 130, "textvari": 130, "underlin": [130, 165, 407, 453], "wraplength": 130, "overrelief": 130, "choic": [130, 150, 387, 391, 392, 433, 450, 507, 533], "onchang": 130, "len": [130, 136, 165, 435], "setchangecallback": 130, "explanationtext": 130, "d9d9d9": 130, "border": [130, 289, 425, 468, 478, 501, 526], "explan": [130, 391, 398, 400, 408, 428, 447, 465, 468, 487, 505], "updateexptext": 130, "gradientfram": 130, "gradient": [130, 547], "11892521": 130, "hotbutton": 130, "firebrick": [130, 165, 398], "iconbutton": 130, "hot": 130, "labelslid": 130, "from_": 130, "labelwidth": 130, "tickinterv": 130, "person": [130, 477], "highlightlabel": 130, "removehighlightfromlabel": 130, "widgetclass": 130, "horizont": [130, 477, 481, 485, 487, 490, 491], "bindwidget": 130, "gethscrol": 130, "getvscrol": 130, "scrollh": 130, "scrollv": 130, "dictclass": [132, 133, 135], "sql": [132, 133, 136, 383], "xml": [132, 135, 154, 167, 383, 437, 513, 544], "original_class_name_attribut": 132, "oldclassnam": 132, "annotateclassnam": 132, "annot": [132, 406, 538, 539, 550], "deleterel": [132, 133], "creatorobj": [132, 133], "getfullnam": 132, "full": [132, 150, 164, 168, 194, 200, 201, 224, 299, 301, 408, 410, 419, 442, 444, 445, 468, 471, 480, 481, 507, 538, 539, 546, 547, 548, 550], "grandpar": 132, "objnam": [132, 150, 188], "getobjectpersistingclassnam": 132, "getpar": [132, 133, 158, 169], "getrelationchild": [132, 133], "relnam": [132, 133], "parentobj": [132, 133], "getrelationpar": [132, 133], "childobj": [132, 133], "getrelationsbycr": [132, 133], "insertrel": [132, 133], "selectal": [132, 133, 135, 430], "selectbi": [132, 133], "meet": [132, 133, 136, 149, 383, 391, 406, 457], "criteria": [132, 133, 261, 262, 311, 410, 437, 468, 509], "selectbyclass": [132, 133], "includesubclass": [132, 133], "selectbyid": [132, 133, 135, 430], "selectfirst": 132, "prioriti": [132, 409, 442], "updatefrom": [132, 133, 135], "updateto": [132, 133, 135], "sqliteflatdb": 133, "tableprefix": 133, "pragma": [133, 134], "sqlitedb": [133, 134], "queri": [133, 134, 139, 140, 200, 383, 392, 449], "class_map": 133, "aggreg": [133, 136, 449, 547], "operationlabel": [133, 136], "groupbylabel": [133, 136], "createt": [133, 207], "objdict": [133, 136], "deleteal": 133, "db": [133, 136, 141, 150, 165, 204, 207, 391, 398, 435, 437, 439, 445, 450, 452, 492, 513, 543], "deleteobject": 133, "deleteproperti": 133, "doesrowexist": 133, "getclassrow": 133, "getproperti": [133, 136], "getpropertykei": 133, "getselfclassnam": 133, "hasproperti": [133, 136], "insertobject": 133, "maxid": 133, "missingt": 133, "selectcmd": 133, "wherestr": 133, "orderbystr": 133, "BY": [133, 136], "selectobjectbyid": 133, "selectobjectsbi": 133, "constrain": [133, 537, 547], "AND": [133, 311, 547], "selectobjectswher": 133, "setproperti": 133, "setupcommand": 133, "uniqu": [133, 135, 136, 141, 145, 156, 161, 391, 392, 395, 402, 415, 431, 487, 509, 511, 523], "updateobject": 133, "sqliteflatmapp": 133, "enableappend": [133, 136], "fmtdate": [133, 136], "date": [133, 136, 141, 161, 167, 187, 383, 410, 416, 431, 437, 450, 460, 462, 474, 478, 482, 492, 499, 513, 544, 549], "term": [133, 201, 434, 468, 474, 493], "utc": [133, 167], "microsecond": [133, 167], "un": [133, 219, 380, 391], "datetim": [133, 136, 150, 167], "utcnow": 133, "getattributes2stor": 133, "objectfilt": [133, 141], "ti": [133, 136], "claus": [133, 136], "sqliteflatmapperexcept": 133, "sqlitemapp": [133, 141], "deletechild": 133, "fillobject": [133, 135], "objrow": [133, 204], "includechildren": 133, "fillobjectwithrow": 133, "getrelationsbynam": 133, "relationnam": 133, "insertchild": 133, "attr": 133, "nameprefix": 133, "parentext": 133, "childext": 133, "insertrelationdata": 133, "creatorid": 133, "childid": 133, "parentextend": 133, "childextend": 133, "selectallbatch": 133, "onc": [133, 141, 150, 158, 311, 324, 383, 387, 388, 391, 392, 400, 407, 408, 410, 414, 421, 428, 434, 436, 437, 442, 444, 445, 447, 449, 451, 452, 453, 454, 460, 464, 468, 471, 473, 474, 477, 481, 489, 501, 503, 505, 507, 508, 510, 511, 513, 523, 524, 532, 547, 548, 549], "sqliteobjectsdb": 133, "delete_sequ": 133, "sqlite_sequ": 133, "parent_id": [133, 431], "localtim": 133, "select_rel": 133, "object_": 133, "s_id": 133, "AS": 133, "deletechildobject": 133, "ancestor_nameprefix": 133, "ancestor": [133, 188, 419, 431], "deletemissingobjectsbyancestor": 133, "idlist": 133, "ancestor_id": 133, "deleterelationsbycr": 133, "object_parent_id": 133, "object_child_id": 133, "object_parent_extend": 133, "object_child_extend": 133, "selectallobject": 133, "selectmissingobjectsbyancestor": 133, "selectobjectsbyancestor": 133, "selectobjectsbypar": 133, "null": [133, 434, 436, 453], "selectrelationchild": 133, "selectrelationpar": 133, "selectrelationsbycr": 133, "selectrelationsbynam": 133, "open_connect": 134, "closeconnect": 134, "getdbnam": [134, 141], "gettablecolumn": 134, "gettabl": [134, 156], "tablepattern": 134, "getvers": [134, 150], "user_vers": 134, "hastabl": 134, "setvers": 134, "rootnam": [135, 158], "addsubel": 135, "parentelem": 135, "objelem": 135, "indent": [135, 163, 167, 460], "elem": [135, 167], "insertobjectwithchild": 135, "setchildobject": 135, "childnam": 135, "childclass": 135, "setclasstag": 135, "setobjectid": 135, "orm": 136, "ptype": 136, "comma": [136, 141, 149, 165, 167, 409, 415, 477, 492], "equal_precis": 136, "001": [136, 201, 435, 520], "setprecis": 136, "newprecis": 136, "increment": [136, 383], "item_prefix": 136, "__item__": 136, "getattribut": 136, "cleanobjid": 136, "copyid": [136, 150, 204], "ignoreattr": 136, "_objid": 136, "copyattribut": [136, 234], "would": [136, 311, 343, 386, 391, 398, 405, 406, 410, 411, 422, 428, 429, 435, 437, 442, 444, 447, 454, 463, 468, 477, 481, 492, 493, 494, 495, 496, 505, 506, 507, 509, 510, 512, 518, 520, 527, 534, 535, 542, 543, 544, 547, 548, 549, 551], "pointerlist": 136, "copyobjid": 136, "evalcondit": 136, "fillobjdict": 136, "getattributevalu": [136, 452], "getattr": [136, 437], "getattributestostor": 136, "getclass": [136, 149], "getclassnam": 136, "getdoc": 136, "getlastnam": 136, "getmappeddict": 136, "getnameid": 136, "getnestedvalu": 136, "_ctfmodel": 136, "getobjcom": 136, "getobjcr": 136, "getobjcreationasd": 136, "getobjlabel": 136, "getobjnam": [136, 188], "getobjparentid": 136, "getstor": 136, "getvaluesfromdict": 136, "getvaluesfrommappeddict": 136, "mappeddict": 136, "hasattribut": [136, 452], "hasattributeext": 136, "hasobjid": 136, "hasobjparentid": 136, "hasvalu": [136, 146], "isen": 136, "ispoint": [136, 149], "printal": [136, 189], "printobjdict": 136, "setattributevalu": 136, "ignoremiss": 136, "setattr": [136, 507, 512], "setattributesfromdict": 136, "attrdict": [136, 204], "setbas": 136, "experiment": [136, 201, 228, 250, 259, 261, 392, 406, 415, 485, 489, 490, 492, 501, 503, 509, 520, 525, 537, 538, 539, 542], "fulli": [136, 167, 392, 398, 405, 406, 421, 470, 473, 479, 506, 509, 538, 539, 547], "seten": 136, "setnam": [136, 139, 146], "setobjcom": 136, "setobjcr": 136, "setobjid": [136, 204], "newid": 136, "setobjlabel": [136, 438, 447], "setstor": 136, "observ": [136, 233, 387, 391, 392, 406, 407, 434, 435, 438, 441, 459, 468, 472, 487, 489, 490, 492, 505, 507, 508, 509, 510, 512, 513, 520, 525, 533, 535, 536, 537, 538, 539, 542, 548], "objectwrap": 136, "orderedobject": 136, "legaci": [136, 410, 446], "extended_attr": 136, "__attribute__": 136, "extended_itemid": 136, "__itemid__": 136, "addextend": 136, "setextend": [136, 452], "_extend": [136, 150], "getextend": 136, "getextendedpart": 136, "getuniqueid": 136, "hasextend": 136, "pointsnon": 136, "removeextend": 136, "cleanextend": [136, 149], "setextendedpart": 136, "setpoint": 136, "swap": [136, 410, 519], "stream_clos": [136, 437], "stream_open": [136, 437], "equalitemattribut": 136, "getidset": 136, "getprefix": 136, "getrepres": [136, 229], "getstreamst": 136, "getsubset": 136, "getuniquevalu": 136, "haschangedsinc": 136, "timestamp": [136, 141, 150, 167], "persist": [136, 141, 150, 383, 415, 437, 481], "_index": [136, 430], "isstreamclos": 136, "isstreamopen": 136, "loadallproperti": 136, "loadproperti": 136, "propertynam": 136, "setclassesdict": 136, "setmapperclass": 136, "setrepres": 136, "setstreamst": [136, 437], "newstat": [136, 335], "datetime_format": 136, "h": [136, 167, 201, 207, 391, 395, 406, 407, 413, 442, 460, 465, 519, 530, 536, 537, 538, 539, 546], "formatstr": 136, "getdatetim": 136, "strvalu": 136, "femto": 136, "getlistfromrang": 136, "describ": [136, 165, 218, 391, 392, 397, 398, 406, 422, 428, 431, 432, 438, 445, 453, 463, 468, 470, 479, 480, 483, 498, 500, 509, 510, 520, 526, 530, 538, 539, 547, 548, 549], "getlistfromrangestr": [136, 167], "numericrangeparam": [136, 149], "getlistfromvalu": [136, 167], "caster": [136, 167], "findclass": 137, "findsubclass": 137, "classdict": 137, "findview": 137, "findwizard": 137, "getmapperdict": 137, "getmoduleclass": 137, "getpreferredview": 137, "prefer": [137, 200, 261, 388, 392, 396, 401, 429, 453, 455, 462, 487, 506, 520, 522, 523, 524, 527, 530, 532, 534, 543], "getprotocol": [137, 141, 150, 445], "getwizard": 137, "importfromplugin": [137, 452], "errormsg": [137, 200, 257, 258], "dorais": [137, 200], "plugin1": 137, "plug1": 137, "pl1con": 137, "p1prot1": 137, "prot1": 137, "pt1": 137, "pt2": 137, "printinfo": 137, "refreshplugin": 137, "registerplugin": 137, "__metaclass__": 137, "pluginmeta": 137, "trigger": [137, 387, 410, 430, 435, 451, 453, 481], "viewersload": 137, "getactivevers": 137, "_home": 137, "getcondaactivationcmd": [137, 442], "_homevar": 137, "getplugindir": 137, "getplugintemplatedir": 137, "getsupportedvers": [137, 150], "gettempl": [137, 193], "protclass": 137, "properli": [137, 141, 150, 204, 392, 406, 410, 442, 449, 460, 470, 481, 524, 527, 537, 547, 548], "_pathvar": 137, "plugininfo": [137, 187], "via": [137, 187, 188, 386, 410, 428, 434, 437, 438, 442, 445, 449, 468, 481, 507, 535], "getauthor": [137, 187], "getauthoremail": 137, "gethomepag": [137, 187], "getkeyword": 137, "labelid": 139, "setcolor": 139, "newnam": [139, 140, 149], "labelslist": 139, "addlabel": 139, "deletelabel": 139, "updatedict": 139, "openitem": [139, 391], "fashion": [139, 547], "submenu": 139, "leaf": 139, "nodeconfig": 139, "nodeid": 139, "isexpand": 139, "isvis": 139, "setexpand": 139, "setlabel": [139, 146, 158], "setvis": 139, "nodeconfiglist": 139, "quick": [139, 391, 392, 410, 415, 456, 465, 468, 479, 490, 509, 550], "addnod": 139, "getnod": [139, 158], "projectconfig": 139, "projectset": 139, "color_mod": 139, "color_mode_ag": 139, "color_mode_label": 139, "color_mode_s": 139, "color_mode_statu": 139, "agecolormod": 139, "getcolormod": 139, "getconfig": 139, "getcreationtim": [139, 140, 141, 450], "getlifetim": 139, "getnodebyid": 139, "getreadonli": 139, "getrunsview": 139, "labelscolormod": 139, "dbpath": [139, 141], "setcolormod": 139, "colormod": 139, "setcreationtim": 139, "setlifetim": 139, "setprotocolview": 139, "protocolmenu": 139, "setrunsview": 139, "sizecolormod": 139, "statuscolormod": 139, "workspac": [140, 410], "subfold": [140, 161, 200], "createproject": [140, 452], "runsview": [140, 141], "hostsconf": [140, 141, 146], "getprojectpath": 140, "hasproject": 140, "fromloc": 140, "somewher": [140, 437, 463], "listproject": [140, 408], "sortbyd": 140, "sortbydata": 140, "projid": [140, 159], "oldnam": [140, 149, 410], "projectinfo": 140, "mtime": 140, "ctime": 140, "getmodificationtim": 140, "missingprojectdbexcept": 141, "modificationnotallowedexcept": 141, "still": [141, 149, 150, 201, 406, 410, 434, 442, 453, 468, 470, 476, 487, 488, 490, 492, 506, 510, 512, 524, 547, 548], "aliv": [141, 410], "sent": [141, 159, 172, 386, 388, 421, 527], "cleanprojectnam": 141, "whenev": [141, 200, 400, 406, 409, 422, 449, 507, 509, 525, 527, 534, 547, 548], "endup": 141, "closemapp": [141, 150, 452], "continueprotocol": 141, "approv": [141, 150, 165], "copyprotocol": 141, "readonli": [141, 410, 449], "Not": [141, 406, 490, 530], "createmapp": 141, "createset": 141, "deleteprotocol": 141, "deleteprotocoloutput": 141, "doesprotocolexist": 141, "protid": [141, 150, 159], "exportprotocol": 141, "fixlink": 141, "searchdir": 141, "getdblastmodificationd": 141, "getdbpath": [141, 150, 452], "getelapsedtim": [141, 150, 167], "elaps": [141, 167], "getgraphfromrun": 141, "gethostconfig": [141, 150], "hostnam": [141, 146, 150, 165, 167, 460], "gethostnam": [141, 146, 150, 167], "getlefttim": 141, "getlocalconfighost": 141, "getlogpath": [141, 150], "getprotworkingdir": 141, "getprotocolsbyclass": 141, "getprotocolsdict": 141, "namesonli": 141, "getprotocolsjson": 141, "getrelatedobject": 141, "pwobj": 141, "relation_transform": 141, "cach": [141, 444], "getrun": 141, "getrunsgraph": 141, "getsettingscreationtim": 141, "getshortnam": 141, "getsourcechild": 141, "getsourcegraph": 141, "getsourcepar": 141, "gettmppath": 141, "gettransformgraph": 141, "isinreadonlyfold": 141, "isreadonli": 141, "itersubclass": 141, "classesnam": 141, "discard": [141, 243, 335, 410, 428, 513, 520], "launchprotocol": [141, 154, 392, 435, 438, 447, 452], "independ": [141, 150, 165, 271, 311, 391, 405, 406, 410, 411, 477, 487, 488, 489, 491, 492, 504, 505, 506, 509, 510, 519, 525, 527, 528, 547], "submiss": [141, 383, 410, 460, 499, 545], "prerequisit": [141, 311, 405, 437, 477], "finish": [141, 150, 164, 165, 311, 324, 392, 397, 410, 414, 425, 434, 435, 437, 442, 445, 447, 450, 452, 453, 455, 460, 477, 487, 488, 489, 490, 491, 492, 509, 510, 524, 532, 542, 547, 548], "preserv": [141, 167, 505, 527, 528, 532, 547], "regardless": [141, 430], "latter": 141, "restart": [141, 150, 165, 227, 235, 266, 317, 319, 326, 392, 410, 414, 415, 429, 442, 449, 451, 453, 477, 492, 493, 494, 495, 496, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "launchworkflow": 141, "workflowprotocollist": 141, "chdir": [141, 150], "loadallconfig": 141, "loadprotocol": 141, "jsonstr": 141, "needrefresh": 141, "older": [141, 464], "protocolclass": [141, 154, 447], "openedasreadonli": 141, "resetprotocol": 141, "resetworkflow": 141, "initialprotocol": 141, "saveprotocol": [141, 154, 452], "scheduleprotocol": 141, "initialsleeptim": [141, 147], "setdbpath": 141, "stopprotocol": [141, 435], "stopworkflow": 141, "activeprotlist": 141, "complet": [145, 154, 164, 165, 324, 386, 392, 396, 402, 405, 406, 410, 430, 437, 442, 445, 447, 451, 461, 465, 468, 479, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 504, 505, 507, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547], "mpistepexecutor": 145, "hostconfig": [145, 146, 160, 162], "nmpi": 145, "comm": [145, 160], "threadstepexecutor": 145, "But": [145, 149, 399, 406, 410, 422, 435, 437, 451, 464, 468], "runjob": [145, 150, 162, 409, 442], "worker": [145, 189, 271, 386], "programnam": [145, 150, 160, 162, 207], "numberofmpi": [145, 160, 162, 165, 392, 447], "numberofthread": [145, 162, 165, 392, 447], "runstep": [145, 442], "stepstartedcallback": 145, "stepfinishedcallback": 145, "checkstepscallback": 145, "stepschecksec": 145, "mpiprocess": 145, "stepscheckcallback": 145, "queuestepexecutor": [145, 410], "submitdict": 145, "nthread": 145, "stepexecutor": 145, "getgpulist": [145, 150], "gpu": [145, 150, 223, 224, 225, 380, 410, 414, 418, 426, 427, 428, 447, 453, 455, 460, 481, 487, 492, 527], "stepthread": 145, "thid": 145, "reserv": [145, 414], "threadgroup": 145, "callabl": [145, 149, 413], "invoc": [145, 444], "sequenti": [145, 444, 493], "getaddress": 146, "getcancelcommand": 146, "getcheckcommand": 146, "gethostpath": 146, "getjobdoneregex": 146, "getmpicommand": 146, "getpassword": 146, "getqueuesystem": 146, "getqueuesdefault": 146, "getscipionconfig": 146, "getscipionhom": [146, 195], "getsubmitcommand": 146, "getsubmitprefix": 146, "getsubmittempl": 146, "getusernam": 146, "isqueuemandatori": 146, "setaddress": 146, "newaddress": 146, "sethostnam": [146, 150], "sethostpath": 146, "hostpath": 146, "setmpicommand": 146, "mpicommand": 146, "setpassword": 146, "password": [146, 167, 400, 414, 415, 421, 425, 427, 428, 437, 449, 455], "setqueuesystem": 146, "queuesystem": 146, "setscipionconfig": 146, "newconfig": 146, "setscipionhom": 146, "newscipionhom": 146, "setusernam": 146, "writebas": 146, "configfn": [146, 204], "queueconfig": 146, "getallowmpi": 146, "getallowthread": 146, "getmaxcor": 146, "getmaxhour": 146, "setallowmpi": 146, "allowmpi": 146, "setallowthread": 146, "allowthread": 146, "setmaxcor": 146, "maxcor": 146, "setmaxhour": 146, "maxhour": 146, "queuesystemconfig": 146, "getmandatori": 146, "getqueueconfig": 146, "getqueu": 146, "hasnam": 146, "setcancelcommand": 146, "cancelcommand": 146, "setcheckcommand": 146, "checkcommand": 146, "setjobdoneregex": 146, "jobdoneregex": 146, "setmandatori": 146, "mandatori": [146, 167, 231, 383, 422, 429, 460, 492, 513, 523, 524], "setqueu": 146, "setsubmitcommand": 146, "submitcommand": 146, "setsubmittempl": 146, "submittempl": 146, "scenario": [147, 159, 447, 460, 468, 513, 519, 545], "establish": [147, 383, 391, 397, 406, 430, 437, 519, 526, 533, 534], "analyzeformattingtypeerror": 147, "te": 147, "problem": [147, 201, 299, 300, 386, 392, 398, 400, 406, 428, 437, 442, 444, 447, 448, 460, 464, 477, 481, 487, 498, 508, 545], "stdin": [147, 460], "stdout": [147, 154, 159, 167, 422, 434, 435, 460, 547], "stderr": [147, 150, 154, 159], "decid": [147, 346, 347, 386, 391, 395, 422, 452, 507, 527, 532, 543, 547, 548], "readi": [147, 150, 165, 193, 311, 391, 400, 410, 429, 437, 442, 445, 452, 453, 455, 468, 513, 549, 550], "booleanparam": [149, 392], "allowsnul": [149, 392], "doesn": [149, 161, 204, 387, 390, 422, 430, 434, 437, 438, 452, 464, 468, 487, 492, 505, 512, 520], "deprecatedparam": 149, "newparamnam": 149, "redirector": 149, "defineparam": [149, 278], "addparam": [149, 392, 434, 435, 452], "digfreqparam": 149, "floatparam": [149, 433, 434], "elementgroup": 149, "formel": 149, "Such": [149, 464], "addhidden": 149, "paramclass": [149, 392], "linenam": 149, "display_combo": 149, "display_hlist": 149, "display_list": 149, "fileparam": 149, "pathparam": 149, "folderparam": 149, "addbooleanparam": 149, "addgeneralsect": 149, "addgroup": [149, 392], "addparallelsect": [149, 392, 405, 437], "hour": [149, 167, 414, 449, 453, 460, 487, 492], "jobsiz": 149, "addsect": [149, 392], "evalparamcondit": [149, 150], "getparam": [149, 150, 151], "getsect": [149, 435], "_sectionlist": 149, "hasparam": 149, "iterallparam": 149, "disregard": 149, "iterpointerparam": 149, "itersect": 149, "registerparam": 149, "validateparam": 149, "expertlevel": [149, 165], "gethelp": 149, "hascondit": 149, "isexpert": 149, "isimport": 149, "setexpert": 149, "setimport": 149, "valuetyp": 149, "ge": 149, "thresold": 149, "greater": [149, 164, 520], "gt": 149, "hiddenbooleanparam": 149, "le": [149, 222, 380], "lt": [149, 418], "labelparam": 149, "stringparam": [149, 434, 437], "multipointerparam": 149, "nonemptyboolcondit": 149, "nonemptycondit": 149, "cannot": [149, 165, 188, 388, 428, 452, 477, 478, 507, 508, 519, 520, 533], "numericlistparam": 149, "notat": [149, 504], "10x2": 149, "5x3": 149, "repeat": [149, 167, 383, 410, 434, 447, 468, 470, 509, 524, 533], "numericlistvalid": 149, "incorrect": [149, 165, 509], "listparam": 149, "numericrangevalid": 149, "rangeparam": 149, "addvalid": 149, "everyth": [149, 386, 387, 391, 392, 422, 428, 429, 437, 442, 460, 468, 474, 537], "setdefault": [149, 184], "newdefault": 149, "setpointerclass": 149, "newpointerclass": 149, "protocolclassparam": 149, "outsid": [149, 157, 406, 468, 493, 494, 495, 496, 506, 526, 538, 539, 547], "regexparam": 149, "getattributenam": 149, "getdirect": 149, "getquest": 149, "getquestionnam": 149, "hasquest": 149, "textparam": 149, "long": [149, 164, 187, 191, 299, 391, 402, 415, 452, 453, 492, 519, 527, 542, 546], "tupleparam": 149, "condens": 149, "low": [149, 201, 222, 228, 250, 321, 406, 422, 433, 468, 484, 487, 493, 498, 527, 533, 534, 537, 538, 539], "functionstep": [150, 392, 437], "funcnam": 150, "funcarg": 150, "eas": [150, 209, 383], "_insertfunctionstep": [150, 392, 405, 434, 435, 437, 441], "serial": [150, 445], "legacyprotocol": [150, 410], "simpli": [150, 386, 392, 422, 434, 438, 442, 468, 505, 508, 510, 531, 534], "getclassdomain": 150, "protimportbas": 150, "addsummarywarn": 150, "warningdescript": 150, "summarywarn": 150, "allowsgpu": 150, "checksummarywarn": 150, "tell": [150, 391, 398, 435, 437, 460, 464, 477, 547, 548], "citat": [150, 383, 402], "cleantmp": 150, "subdirectori": [150, 438], "under": [150, 166, 201, 261, 296, 387, 390, 392, 397, 402, 406, 414, 422, 425, 434, 437, 441, 472, 549], "cleanworkingdir": 150, "continuefrominteract": 150, "weird": [150, 391], "excludeinput": 150, "copt": 150, "exclud": [150, 191, 391, 488, 490, 506, 534], "copydefinitionattribut": 150, "cputim": 150, "durat": [150, 159], "deleteoutput": 150, "redirectstandard": 150, "evalexpertlevel": 150, "eval": [150, 335], "_definit": 150, "satisfi": [150, 391, 432, 438, 493, 544], "evalparamexpertlevel": 150, "findattributenam": 150, "attr2find": 150, "getcit": 150, "bibtexoutput": 150, "getclasslabel": 150, "prependpackagenam": 150, "getclasspackag": 150, "getclasspackagenam": 150, "getclassplugin": 150, "getdefaultrunnam": 150, "getdefinit": 150, "getdefinitiondict": 150, "getenumtext": 150, "getfiletag": 150, "gethelptext": 150, "gethostfullnam": [150, 167], "getinputstatu": 150, "getjobid": 150, "getlogsasstr": 150, "getlogslastlin": 150, "lastlin": 150, "logfil": [150, 159], "prot_logs_last_lin": [150, 154], "getmapp": 150, "getobjecttag": 150, "getoutputfil": 150, "getoutputss": 150, "getpackagecit": 150, "getparsedmethod": 150, "_method": [150, 392, 434, 441], "cite": [150, 165, 392, 477], "_getpath": [150, 437], "underscor": 150, "getpid": 150, "getpluginlogopath": 150, "getpossibleoutput": 150, "getproject": [150, 169, 452], "getprotocolstoupd": 150, "analyz": [150, 165, 220, 228, 232, 250, 261, 303, 323, 332, 383, 388, 402, 410, 444, 445, 450, 451, 464, 476, 487, 488, 489, 490, 492, 493, 494, 495, 496, 505, 507, 508, 509, 510, 513, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 547, 548], "indirectli": 150, "getqueueparam": 150, "getrel": 150, "getrunmod": 150, "mode_restart": 150, "mode_resum": 150, "getrunnam": 150, "getschedulelog": 150, "getstatusmessag": 150, "getstderrlog": 150, "getstdoutlog": 150, "getstep": 150, "getstepsfil": 150, "getstepsgraph": 150, "getsubmitdict": 150, "getworkingdir": 150, "hasdefinit": 150, "detect": [150, 166, 201, 227, 235, 266, 317, 319, 326, 391, 392, 410, 422, 435, 442, 444, 448, 468, 470, 473, 474, 477, 510, 517, 520, 533], "instanti": [150, 167, 229, 424, 430, 435], "hasexpert": 150, "hasqueueparam": 150, "hassummarywarn": 150, "isbas": 150, "_label": [150, 392, 435, 437], "ischild": 150, "iscontinu": 150, "isinstream": 150, "iterdefinitionattribut": 150, "iterdefinitionsect": 150, "iterinputattribut": 150, "iterinputpoint": 150, "yield": [150, 161, 168, 511, 512], "iteroutputattribut": 150, "outputclass": [150, 392, 447, 468], "includeposs": 150, "legacycheck": 150, "hook": [150, 447], "compat": [150, 187, 391, 398, 410, 459, 481], "loadmapp": 150, "loadstep": 150, "makepathsandclean": 150, "makeworkingdir": 150, "numberofstep": 150, "got": [150, 407, 434, 435, 442, 468, 517], "requiresgpu": 150, "runprotocol": [150, 435], "setabort": [150, 257, 258], "abort": [150, 257, 258, 400, 477], "setfail": [150, 257, 258], "sethostconfig": 150, "sethostfullnam": 150, "hostfullnam": 150, "setjobid": 150, "setmapp": 150, "setpid": 150, "pid": [150, 162, 435, 444, 445], "setproject": [150, 169], "setqueueparam": 150, "queueparam": 150, "setrun": 150, "resume_mod": 150, "setstepsexecutor": 150, "setworkingdir": 150, "stepsdon": 150, "updatestep": [150, 405, 437], "usequeu": 150, "usequeueforstep": 150, "usesgpu": 150, "validatepackagevers": 150, "ej": 150, "eman2": [150, 406, 410, 453, 470], "runjobstep": [150, 392], "runjobfunc": 150, "resultfil": 150, "commonli": [150, 447, 512, 527, 537, 538, 539], "addprerequisit": [150, 437], "newprerequisit": 150, "timedelta": [150, 167, 449], "took": [150, 424], "geterror": 150, "geterrormessag": 150, "getprerequisit": 150, "getstatu": 150, "isabort": 150, "isact": 150, "isfail": 150, "isfinish": 150, "isinteract": 150, "islaunch": 150, "isrun": 150, "issav": 150, "isschedul": 150, "iswait": 150, "endtim": 150, "setfinish": 150, "newindex": 150, "setinteract": 150, "setprerequisit": 150, "state_run": 150, "setsav": 150, "setstatu": [150, 437], "stepset": 150, "getprotocolfromdb": [150, 452], "projectpath": 150, "protdbpath": 150, "getupdatedprotocol": 150, "isprotocoluptod": 150, "lastmodificationd": 150, "runprotocolmain": 150, "runprotocolmainmpi": 150, "mpicomm": [150, 160], "pluginnam": [151, 165, 188], "temppath": 151, "createtemplatefil": [151, 193], "genprojectnam": 151, "strlist": 151, "parsecont": 151, "replaceenvvari": 151, "setparamvalu": 151, "newvalu": [151, 167, 311], "templatelist": 151, "addplugintempl": 151, "tempid": 151, "addscipiontempl": 151, "addtempl": 151, "genfromstrlist": 151, "sortlistbypluginnam": 151, "templateparam": 151, "vartyp": 151, "getalia": 151, "gettitl": 151, "gettyp": [151, 156], "field_type_boolean": 151, "field_type_decim": 151, "field_type_integ": 151, "field_type_path": 151, "field_type_str": 151, "fieldtyp": 151, "validboolean": 151, "validdecim": 151, "validinteg": 151, "validpath": 151, "validstr": 151, "mar": [153, 546], "airen": 153, "roberto": [153, 201, 546], "basetest": [154, 435, 438], "methodnam": 154, "testcas": [154, 447], "valueerror": 154, "assertisnotempti": 154, "setobject": 154, "nor": 154, "assertsets": [154, 447], "diffdelta": 154, "percentag": [154, 164, 243, 258, 299, 313, 410, 525, 536, 537, 538, 539], "compareset": 154, "set1": 154, "set2": 154, "getoutputpath": 154, "getrelpath": 154, "basedir": 154, "proj": [154, 435], "waitforoutput": 154, "newli": [154, 392, 447], "printlastloglin": 154, "setuptestoutput": 154, "filesdict": 154, "getdataset": [154, 447], "gtestresult": 154, "testresult": 154, "failur": [154, 165, 188, 386, 398, 437, 447, 492], "adderror": 154, "err": [154, 460], "occur": 154, "exc_info": 154, "addfailur": 154, "addsuccess": 154, "successfulli": [154, 165, 391, 392, 398, 442, 447, 468, 549], "doreport": 154, "gettestnam": 154, "numbertest": 154, "openxmlreport": 154, "reporterror": 154, "starttest": 154, "testfail": 154, "tic": [154, 167], "toc": [154, 167], "testclass": 154, "setuptestproject": [154, 392, 435, 438, 447], "writelocalconfig": 154, "jmrt": 156, "2018": [156, 201, 380, 391, 414, 435, 482, 499, 503, 504, 505, 506, 509, 510, 525, 533, 534, 537, 538, 539, 542, 546], "moment": [156, 167, 387, 406, 410, 422, 442, 468, 471, 547, 548], "pw": 156, "coltyp": 156, "rendertyp": 156, "getrendertyp": 156, "hasdefault": 156, "setrendertyp": 156, "numberslic": 156, "currentt": 156, "getnumberslic": 156, "getnumberslicesfortempl": 156, "gettypeofcolumn": 156, "getvolumenam": 156, "listtabl": 156, "setnumberslic": 156, "setvolumenam": 156, "singlefiledataset": 156, "sqlitedataset": 156, "addrow": 156, "rowid": 156, "With": [156, 383, 387, 391, 397, 422, 430, 432, 433, 435, 449, 460, 468, 484, 489, 490, 492, 509, 510, 511, 512, 517, 520, 525], "getcolumnvalu": 156, "getdatatorend": 156, "getdatatorenderandextra": 156, "getidcolumn": 156, "getindexfromvalu": 156, "getnumberofcolumn": 156, "getrow": 156, "gettransformationmatrix": 156, "getvaluefromindex": 156, "hascolumn": 156, "hasenabledcolumn": 156, "itercolumn": 156, "setlabeltorend": 156, "labeltorend": 156, "updaterow": 156, "wordalign": 157, "_io": [157, 167], "textiowrapp": [157, 167], "echo_class": 157, "klass": 157, "echo_instancemethod": 157, "instancemethod": 157, "littl": [157, 414, 422, 426, 427, 428, 442, 445, 508, 547], "tricki": [157, 520], "echo_modul": 157, "format_arg": 157, "is_class_private_nam": 157, "privat": [157, 427, 428, 429, 449], "is_classmethod": 157, "method_nam": 157, "adjac": [158, 501, 512, 513, 519, 520], "aliasnod": 158, "aliasnam": 158, "nodenam": 158, "nodelabel": 158, "getrootnod": 158, "printdot": 158, "useid": 158, "printnod": 158, "addchild": 158, "countchild": 158, "visitednod": 158, "subchild": 158, "visit": [158, 402, 437], "getchild": 158, "isroot": 158, "iterchild": 158, "iterchildsbreadth": 158, "breadth": 158, "newlabel": 158, "howto": 159, "cookbook": 159, "liter": [159, 383, 391], "levelfilt": 159, "levelno": 159, "loggingconfigur": 159, "customloggingact": 159, "loadcustomloggingconfig": 159, "setupguilog": 159, "setupprotocolrunlog": 159, "stdoutlogfil": 159, "stderrlogfil": 159, "setupprotocolschedulinglog": 159, "schedulelogfil": 159, "setupdefaultlog": 159, "setuplog": 159, "getextraloginfo": 159, "measur": [159, 167, 201, 300, 406, 444, 527, 538, 539], "project_nam": [159, 407, 452], "prot_id": 159, "prot_nam": 159, "step_id": [159, 321], "dbfilenam": 159, "getfinalprojid": 159, "getfinalprotid": 159, "restorestdoutanderr": 159, "setdefaultloggingcontext": 159, "runjobmpi": 160, "runjobmpislav": 160, "send": [160, 165, 324, 386, 410, 425, 435, 449, 460, 551], "mpidest": 160, "gpulist": [160, 162, 399, 452], "slave": 160, "cleanpath": 161, "cleanpattern": [161, 409], "commonpath": 161, "longest": [161, 335], "commonprefix": 161, "direnam": 161, "former": 161, "char": 161, "copypattern": 161, "destfold": 161, "copytre": 161, "createabslink": 161, "createlink": 161, "createuniquefilenam": 161, "namedtemporaryfil": 161, "tempfil": [161, 435], "expandpattern": 161, "findfil": 161, "myfil": [161, 200, 400], "findfilerecurs": 161, "findrootfrom": 161, "referencefil": 161, "searchfil": 161, "practic": [161, 215, 327, 391, 396, 406, 434, 436, 438, 442, 447, 457, 479, 481, 547, 548], "getext": 161, "getfilelastmodificationd": 161, "getfiles": 161, "folderpath": 161, "gethomepath": 161, "getlastfil": 161, "getparentfold": 161, "en": [161, 380, 391, 400, 418], "dirnam": [161, 391], "iterbigfil": 161, "textfil": 161, "headsiz": 161, "tailsiz": 161, "joinext": 161, "makefilepath": 161, "ensur": [161, 383, 422, 429, 452, 468, 527, 547], "makepath": 161, "maketmppath": 161, "missingpath": 161, "miss": [161, 167, 193, 391, 402, 422, 429, 437, 442, 444, 449, 477, 481, 484, 498, 507, 509, 537], "movefil": [161, 409], "movetre": 161, "removebaseext": 161, "basenam": 161, "removeext": 161, "renderlin": 161, "lineno": 161, "numberlin": 161, "fragment": [161, 464, 484, 488, 493, 498, 509, 524], "rendertextfil": 161, "notifylin": 161, "strict": [161, 271], "signatur": 161, "whether": [161, 311, 392, 406, 422, 428, 445, 547], "prepend": [161, 167], "replacebaseext": 161, "newext": 161, "replaceext": 161, "buildruncommand": 162, "isprocessal": 162, "killwithchild": 162, "kill": 162, "runcommand": 162, "timer": [163, 167, 445], "blacklist": [163, 410], "minm": 163, "whitelist": [163, 449], "getinstancescount": 163, "instancecr": 163, "instancedestroi": 163, "printinst": 163, "waitfordebugg": 163, "fmt": 164, "progress": [164, 399, 410, 435, 446, 453, 492, 509, 510, 547], "symbol": [164, 492, 493, 494, 495, 496, 509, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "extraarg": [164, 261], "cue": 164, "underwai": 164, "pb": [164, 432], "far": [164, 191, 383, 406, 410, 435, 437, 451, 510, 523], "objectid": 164, "nobar": 164, "printnewlin": 164, "dark_grey_color": 165, "light_blue_color": 165, "eaebff": [165, 398], "light_grey_color": 165, "eaebec": [165, 398], "light_grey_color_2": 165, "f2f2f2": [165, 398], "light_red_color": 165, "f3cbcb": [165, 398], "red_color": 165, "status_abort": 165, "f5cccb": 165, "status_fail": 165, "status_finish": 165, "d2f5cb": 165, "status_interact": 165, "f3f5cb": 165, "status_launch": 165, "d9f1fa": 165, "status_run": 165, "fcce62": 165, "status_sav": 165, "action_brows": 165, "fa": 165, "action_clos": 165, "action_continu": 165, "plai": [165, 520], "action_copi": 165, "action_db": 165, "action_delet": 165, "trash": 165, "action_edit": 165, "pencil": [165, 492, 493, 494, 495, 496, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "cog": 165, "action_export": 165, "action_export_upload": 165, "action_find_next": 165, "action_find_previ": 165, "action_help": 165, "action_in": 165, "action_list": 165, "action_new": 165, "action_out": 165, "action_refer": 165, "action_refresh": 165, "action_renam": 165, "action_result": 165, "ey": [165, 410, 477, 513], "action_sav": 165, "action_search": 165, "action_select_from": 165, "arrow": [165, 407, 410, 414, 426, 427, 428, 453, 468, 504, 505, 507, 509, 510, 511, 512, 513, 519, 520, 524, 527, 528, 533, 547, 548], "down": [165, 435, 445, 477, 547, 548], "action_select_to": 165, "action_step": 165, "ul": 165, "action_stop": 165, "action_stop_workflow": 165, "action_tre": 165, "action_undo": 165, "action_visu": 165, "action_wiz": 165, "magic": [165, 409, 434], "arrow_left": 165, "arrow_up": 165, "brush": 165, "ban": 165, "button_clos": 165, "button_pc": 165, "laptop": [165, 455], "button_sav": 165, "delete_oper": 165, "lightbulb": 165, "iconmoon": 165, "plugin_author": 165, "plugin_descript": 165, "file_stack": 165, "plugin_packag": 165, "file_fold": 165, "plugin_release_d": 165, "plugin_vers": 165, "file_vol": 165, "plus_circl": 165, "rocket": 165, "runs_list": 165, "runs_tre": 165, "sitemap": 165, "scipion_icon_proj": 165, "scipion_icon_prot": 165, "to_instal": 165, "to_upd": 165, "uncheck": [165, 188, 397], "uninstal": [165, 187, 188, 391, 462, 481], "keysym": 165, "infohost": 165, "nmt": 165, "edu": [165, 406, 415, 519], "tcc": 165, "pub": 165, "cancel_selected_oper": 165, "error_dimens": 165, "error_import_vol": 165, "importvolum": 165, "error_no_est_ctf": 165, "error_pattern_empti": 165, "error_pattern_fil": 165, "error_webgl": 165, "webgl": [165, 402], "execute_plugins_manager_oper": 165, "help_mpi_thread": 165, "ndefin": 165, "processor": [165, 188, 455, 460, 462, 474, 489, 490], "commun": [165, 173, 386, 398, 406, 410, 423, 425, 449, 451, 492, 515, 520, 546, 549], "network": [165, 201, 311, 414, 449, 451, 468, 498, 527, 546], "help_runmod": 165, "nnormal": 165, "neach": 165, "computation": 165, "intens": [165, 449, 527], "why": [165, 293, 398, 453, 509, 517], "nthe": 165, "nlast": 165, "hand": [165, 201, 405, 406, 422, 437, 438, 447, 457, 464, 468, 534, 547, 548], "nwill": 165, "help_usequeu": 165, "slurm": 165, "torqu": 165, "s_": 165, "help_usequeueperjob": 165, "_host": 165, "conf_": 165, "help_wait_for": 165, "label_alig_part": 165, "label_amplitud": 165, "amplitud": [165, 316, 410, 453, 525, 534], "contrast": [165, 201, 410, 453, 468, 473, 478, 547, 548], "label_analyz": 165, "label_apply_transform": 165, "label_bib_btn": 165, "label_block_select": 165, "label_brows": 165, "label_browse_act": 165, "label_button_cancel": 165, "label_button_clos": 165, "label_button_exec": 165, "label_button_help": 165, "label_button_ok": 165, "label_button_return": 165, "label_button_sav": 165, "label_button_vi": 165, "label_button_wiz": 165, "label_checkstack": 165, "label_cit": 165, "label_col": 165, "label_com": 165, "label_continu": 165, "label_continue_act": 165, "label_continue_workflow": 165, "label_copi": 165, "label_copyfil": 165, "label_copy_act": 165, "label_cr": 165, "label_create_project": 165, "label_ctf_esti": 165, "label_data": 165, "label_db": 165, "label_default": 165, "label_delet": 165, "label_delete_act": 165, "label_delete_form": 165, "nyou": 165, "perman": [165, 406, 407, 428], "ndo": 165, "label_delete_project": 165, "label_dis": 165, "label_display_table_config": 165, "label_edit": 165, "label_edit_act": 165, "label_en": 165, "label_execut": 165, "label_expert": 165, "label_expert_adv": 165, "label_expert_expert": 165, "label_expert_norm": 165, "label_export": 165, "label_export_upload": 165, "label_found_error": 165, "label_help": 165, "label_host": 165, "label_import_project": 165, "label_input": 165, "label_input_m": 165, "label_input_mov": 165, "label_input_part": 165, "label_input_vol": 165, "label_inspector": 165, "inspector": 165, "thu": [165, 383, 391, 406, 434, 435, 437, 438, 439, 441, 452, 453, 468, 487, 489, 490, 492, 501, 505, 506, 507, 508, 509, 510, 513, 517, 525, 532, 533, 534, 537, 547, 548], "while": [165, 383, 391, 392, 397, 398, 400, 406, 410, 414, 423, 428, 429, 435, 442, 445, 448, 451, 452, 455, 477, 479, 489, 490, 491, 492, 507, 508, 528, 532, 535, 547, 548, 551], "label_label": 165, "label_label_select": 165, "label_launch": 165, "label_list": 165, "label_log": 165, "label_logs_error": 165, "label_logs_output": 165, "label_logs_scipion": 165, "label_magni_r": 165, "label_method": 165, "label_mirrori": 165, "label_modifi": 165, "label_mpi": 165, "label_new": 165, "label_new_act": 165, "label_objcr": 165, "label_objinfo": 165, "label_objlabel": 165, "label_objsummari": 165, "label_only_shift": 165, "label_opt_com": 165, "label_output": 165, "label_parallel": 165, "label_param_no": 165, "label_param_y": 165, "label_pattern": 165, "label_patternt": 165, "label_patternu": 165, "label_pick_gauss": 165, "wish": [165, 387, 388, 428, 462, 544], "label_project": 165, "label_prottree_non": 165, "label_queu": 165, "label_queue_for_job": 165, "label_queue_no": 165, "label_queue_y": 165, "label_refresh": 165, "label_renam": 165, "label_rename_project": 165, "label_rend": 165, "label_reset_workflow": 165, "label_reslic": 165, "reslic": [165, 478], "label_restart_form": 165, "label_restart_form_mani": 165, "nfollow": 165, "nwhat": 165, "abov": [165, 167, 262, 313, 391, 392, 397, 410, 415, 428, 429, 430, 435, 436, 437, 438, 448, 452, 453, 461, 464, 468, 477, 481, 492, 493, 504, 509, 510, 512, 520, 525, 534, 535, 536, 537, 544], "label_restart_workflow": 165, "label_row": 165, "label_runmod": 165, "label_runnam": 165, "label_run_mode_restart": 165, "label_run_mode_resum": 165, "resum": [165, 383, 392, 437, 453, 477], "label_samp_mod": 165, "label_samp_mode_1": 165, "label_samp_mode_2": 165, "scanner": 165, "label_samp_r": 165, "\u00e5": [165, 406, 468, 485, 494, 495, 496, 505, 509, 517, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534, 537, 538, 539, 541, 542, 543, 546], "label_saved_form": 165, "label_save_output": 165, "label_scan": 165, "scan": [165, 536], "micron": [165, 406], "label_select_al": 165, "label_select_from": 165, "label_select_to": 165, "label_smalltre": 165, "label_sph_aberr": 165, "mm": [165, 460, 482, 499], "label_step": 165, "label_stop": 165, "label_stop_act": 165, "label_stop_form": 165, "label_stop_workflow": 165, "label_summari": 165, "label_thread": 165, "label_threshold": 165, "label_tre": 165, "label_vis": 165, "label_voltag": 165, "microscop": [165, 205, 233, 406, 410, 449, 451, 453, 532], "kv": 165, "label_volume_select": 165, "label_wait_for": 165, "label_workflow": 165, "label_wrap": 165, "message_delete_project": 165, "no_info_log": 165, "no_info_method": 165, "no_info_summari": 165, "no_save_set": 165, "no_viewer_found": 165, "reslice_x_neg": 165, "reslice_x_posit": 165, "reslice_y_neg": 165, "reslice_y_posit": 165, "reslice_z_neg": 165, "showj_titl": 165, "text_alig_part": 165, "ninput": 165, "text_amplitud": 165, "loss": [165, 201, 547], "beam": [165, 201, 410], "nfor": 165, "weak": [165, 406, 449], "phase": [165, 410, 468, 501, 502, 525, 546], "ratio": [165, 450, 468, 473, 478, 536], "qo": 165, "ni": [165, 380], "n0": 165, "05": [165, 468, 499, 517, 533], "text_help": 165, "text_magni_r": 165, "nsize": 165, "tm": [165, 465], "text_no_ctf_readi": 165, "text_no_input_m": 165, "text_no_output_co": 165, "text_no_output_fil": 165, "text_pattern": 165, "wildcard": [165, 530, 532, 548], "spi": [165, 285], "text_samp_mod": 165, "npixel": 165, "nthei": 165, "text_samp_r": 165, "text_sph_aberr": 165, "effect": [165, 168, 201, 316, 468, 492], "increas": [165, 410, 432, 435, 441, 445, 468, 473, 477, 478, 489, 490, 491, 494, 495, 496, 503, 505, 509, 524, 525, 527, 533, 539, 541, 542, 547, 548], "refract": 165, "light": [165, 398, 406], "nstrike": 165, "comparison": [165, 191, 445, 509, 525, 536, 538, 539, 545], "strike": 165, "text_voltag": 165, "title_active_protocol": 165, "title_browse_data": 165, "title_com": 165, "title_create_project": 165, "title_create_project_nam": 165, "title_delete_form": 165, "confirm": [165, 477, 487, 547], "title_delete_project": 165, "title_edit_object": 165, "title_exec": 165, "title_inspector": 165, "title_label": 165, "title_launch": 165, "title_launched_workflow_fail": 165, "relaunch": 165, "title_launched_workflow_failed_form": 165, "title_name_run": 165, "title_pick_gauss": 165, "title_rename_project": 165, "title_reseted_workflow_fail": 165, "title_reset_workflow": 165, "title_reset_workflow_form": 165, "title_restart_form": 165, "title_restart_workflow": 165, "title_restart_workflow_form": 165, "title_run": 165, "title_saved_form": 165, "title_save_output": 165, "title_stopped_workflow_fail": 165, "title_stop_form": 165, "title_stop_workflow": 165, "title_stop_workflow_form": 165, "tooltip_extern": 165, "tooltip_refresh": 165, "reload": [165, 188], "tooltip_search": 165, "world": [165, 391, 406, 415, 424, 434, 436, 441, 510], "tooltip_search_next": 165, "f3": [165, 407], "tooltip_search_previ": 165, "var_com": 165, "var_exec_host": 165, "var_expert": 165, "var_mpi": 165, "var_queu": 165, "_usequeu": [165, 436], "var_run_mod": 165, "runmod": [165, 436], "var_run_nam": 165, "runnam": [165, 436], "var_thread": 165, "view_data": 165, "view_project": 165, "view_protocol": 165, "view_upload": 165, "plugininform": 165, "pluginauthor": 165, "plugindescript": 165, "plugin_nam": 165, "pluginuploadedd": 165, "plugin_url": 165, "pluginurl": 165, "pluginvers": 165, "pluginst": 165, "available_releas": 165, "precess": 165, "colortext": 165, "hello": [165, 391, 434, 436, 441], "x1b": 165, "94m": 165, "1m": 165, "cyan": [165, 167, 184, 191], "96m": 165, "darkcyan": 165, "36m": 165, "0m": 165, "92m": 165, "purpl": [165, 505, 520], "95m": 165, "91m": 165, "4m": 165, "yellow": [165, 167, 184, 191, 432, 453, 487, 492, 493, 494, 495, 496, 504, 505, 518, 521, 522, 523, 524, 527, 528, 529, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542], "93m": 165, "checkplugin": 166, "getmodul": 166, "getsubclass": 166, "baseclass": 166, "inputdict": 166, "outputdict": 166, "getsubclassesfrommodul": 166, "getsubclassesfrompath": 166, "ismoduleafold": 166, "ismoduleload": 166, "issamefunct": 166, "function1": 166, "function2": 166, "13620542": 166, "addlibrari": [167, 184, 391, 422], "librarypath": 167, "ld_library_path": [167, 391, 408, 439, 442, 445, 461, 464], "getprepend": 167, "setprepend": 167, "varvalu": 167, "enough": [167, 193, 391, 392, 397, 415, 422, 428, 435, 442, 465, 468, 477, 492, 496, 505, 509, 523, 524, 525, 533, 539, 547], "valuesdict": 167, "lazydict": 167, "evaluate_callback": 167, "strcolor": 167, "grai": [167, 201, 505], "32": [167, 397, 418, 517, 546, 547, 548], "magenta": [167, 184, 191, 520], "31": [167, 410, 462, 490, 517, 546], "33": [167, 490, 517], "gettoc": 167, "utcconvert": 167, "utc_delta": 167, "dai": [167, 388, 402, 414, 415, 449, 451, 457, 492], "82799": 167, "999997": 167, "ansi": [167, 184, 191], "escap": [167, 184, 191], "blackb": 167, "blueb": 167, "bluestr": 167, "cyanb": 167, "cyanstr": 167, "datestr": [167, 450], "dt": [167, 450], "dateformat": 167, "envvaron": 167, "environadd": 167, "valuefirst": 167, "executelongremot": 167, "executeremot": 167, "executeremotex": 167, "x11": 167, "forward": [167, 449, 505, 524], "existsvariablepath": 167, "variablevalu": 167, "formatexceptioninfo": 167, "getboollistfromvalu": 167, "valuesstr": 167, "getcolorstr": 167, "getenvvari": 167, "variablenam": [167, 191], "exceptionmsg": 167, "accur": [167, 201, 406, 488, 495, 534, 546, 547, 548], "getfloatlistfromvalu": 167, "getfreeport": 167, "baseport": 167, "getlineinfil": 167, "reach": [167, 311, 324, 407, 410, 435, 437, 439, 452, 456, 505, 509, 524, 533, 536], "2x2": 167, "2x3": 167, "3x4": 167, "getlocalhostnam": 167, "getlocalusernam": 167, "getmemoryavail": 167, "mb": [167, 410, 414, 460], "getrangestringfromlist": 167, "getstringlistfromvalu": 167, "getuniqueitem": 167, "originallist": 167, "graystr": 167, "greenb": 167, "greenstr": 167, "hasanyfilechang": 167, "hasfilechangedsinc": 167, "hex_to_rgb": 167, "isinfil": 167, "ispower2": 167, "num": 167, "power": [167, 406, 426, 427, 428, 465, 468, 470, 527], "lighter": 167, "rgb": 167, "255": 167, "magentab": 167, "magentastr": 167, "parsebibtex": 167, "bibtexstr": 167, "parsehypertext": 167, "matchcallback": 167, "hyper": 167, "hyper_bold": 167, "prettyd": 167, "epoch": [167, 533], "pretti": 167, "ago": [167, 481], "yesterdai": 167, "month": [167, 201, 406, 414, 428, 492], "prettydelta": [167, 450], "millisecond": 167, "prettydict": 167, "prettylog": 167, "prettys": [167, 435], "friendli": [167, 406, 474], "prettytim": [167, 450], "prettytimestamp": 167, "d_": 167, "prettyxml": 167, "printtraceback": 167, "readproperti": 167, "propsfil": 167, "redb": 167, "redstr": 167, "rgb_to_hex": 167, "sortlistbylist": 167, "inlist": 167, "prioritylist": 167, "strtoboolean": 167, "insensit": 167, "timeit": 167, "decor": [167, 392, 398], "def": [167, 391, 392, 405, 409, 430, 435, 437, 442, 447, 449, 450, 452], "nlevel": 167, "utf": [167, 391, 437], "weakimport": 167, "protocol_ctffind": 167, "cistemprotctffind": 167, "tomo": [167, 410, 468, 547, 548], "protocol_ts_ctffind": 167, "cistemprottsctffind": 167, "captur": [167, 201, 296, 437, 445, 468], "whiteb": 167, "yellowb": 167, "yellowstr": [167, 437], "whichal": 168, "whichgen": 168, "whicherror": 168, "commandexist": 168, "textual": 168, "stat": [168, 323, 402, 435], "foo": 168, "vb": 168, "visualbas": 168, "pathext": 168, "messageview": 169, "msgtype": 169, "getmessag": 169, "gettkroot": 169, "getwindow": 169, "setprotocol": 169, "textview": 169, "getfilelist": 169, "tourl": 169, "errorlist": 169, "errormessag": 169, "getprotocolid": 169, "infomessag": 169, "tkwindow": 169, "windowclass": 169, "warnmessag": 169, "projectworkflownotifi": 172, "notif": [172, 386, 435, 456], "getentryfromwebservic": 172, "uuid": 172, "notifyworkflow": 172, "workflowrepositori": 173, "repositoryurl": 173, "uploadfilesuffix": 173, "workflowprogstep1_add": 173, "uploadmdsuffix": 173, "workflowprogstep2_add": 173, "servic": [173, 388, 390, 400, 414, 418, 421, 424, 425, 429, 449, 507, 510, 535], "jsonfilenam": 173, "ot": [173, 546], "poster3": 173, "rather": [173, 259], "django": 173, "filefield": 173, "csrf_exempt": 173, "csrf": 173, "defimportmicrograph": 174, "defctfmicrograph": 174, "lowr": 174, "highr": [174, 258, 276, 410, 479, 505, 527], "guiplugin": [176, 177], "change_rpath": [177, 180], "find_dep": [177, 180], "inspect_plugin": [177, 180], "install_plugin": [177, 180], "plugin_func": [177, 180], "update_manag": [177, 180], "fontbrows": [177, 190], "kickoff": [177, 190], "importfromtempl": 179, "launchpluginmanag": 179, "launchtempl": [179, 193], "iself": [181, 183], "elf": [181, 183], "txt_from": 181, "replace_me_with_funny_": 181, "txt_to": 181, "libdep": 183, "fpath": [183, 191], "searchpath": 183, "untar": [184, 397, 422], "tar": [184, 391, 422, 442, 481], "compil": [184, 188, 386, 422, 426, 427, 461, 464, 510], "builddir": [184, 422], "addpackag": [184, 391, 422, 442], "tgz": [184, 199, 391, 422, 442, 463, 479], "void_tgz": 184, "neededprog": [184, 442], "cmake": [184, 391, 459, 481], "addpipmodul": 184, "pipcmd": 184, "dep": [184, 422], "undesir": [184, 468], "addtargetalia": 184, "getbin": 184, "getbinfold": 184, "getem": 184, "getemfold": 184, "getincludefold": [184, 391], "getlib": 184, "getlibsuffix": 184, "getlogfold": 184, "getpackag": 184, "getprocessor": [184, 391], "getpython": 184, "getpythonpackagesfold": 184, "getsoftwar": 184, "gettarget": 184, "gettargetlist": 184, "gettmpfold": 184, "haspackag": 184, "hastarget": 184, "printhelp": 184, "updatecudaenviron": 184, "packagelink": 184, "packagefold": 184, "createpackagelink": 184, "addcommand": 184, "adddep": 184, "getcommand": 184, "getdep": 184, "isdefault": 184, "checklib": 184, "mkdir": [184, 442, 449], "proginpath": 184, "prog": 184, "installpluginmethod": 186, "pipnam": [187, 391], "pluginsourceurl": [187, 391], "getbinvers": 187, "getcompatiblepipreleas": 187, "pipjsondata": 187, "latest": [187, 391, 397, 410, 414, 415, 426, 427, 428, 429, 445, 449, 452, 461, 481, 549], "getdirnam": 187, "_plugin": 187, "getinstallenv": 187, "envarg": 187, "getlatestreleas": 187, "getpipjsondata": 187, "pypi": [187, 386, 387, 474, 481], "getpipnam": 187, "getpipvers": 187, "getpluginclass": 187, "tri": [187, 322, 383, 388, 391, 395, 405, 481, 538, 539, 544], "getpluginnam": 187, "getreleased": 187, "getsourceurl": 187, "haspippackag": 187, "installbin": 187, "installpipmodul": 187, "printbininfostr": 187, "setfakedremoteplugininfo": 187, "setlocalplugininfo": 187, "setremoteplugininfo": 187, "uninstallbin": 187, "binlist": 187, "uninstallpip": 187, "pluginrepositori": 187, "repourl": 187, "getbintoplugindict": 187, "pluginlist": 187, "getpipdata": 187, "printplugininfostr": 187, "withbin": 187, "withupd": 187, "summar": [187, 400, 410, 444, 498, 513, 538, 539], "objtyp": 188, "objstatu": 188, "objpar": 188, "getobjpar": 188, "getobjstatu": 188, "getobjtext": 188, "getobjtyp": 188, "runoper": 188, "handlebin": 188, "setobjstatu": 188, "operationlist": 188, "applyoper": 188, "clearoper": 188, "getoperationbynam": 188, "opnam": 188, "getoper": 188, "op": 188, "insertoper": 188, "previous": [188, 212, 252, 328, 407, 410, 421, 445, 450, 468, 470, 477, 488, 490, 491, 492, 493, 494, 495, 496, 504, 506, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "elimin": [188, 243, 410], "operationindex": 188, "removeoper": 188, "pluginbrows": 188, "deleteoper": 188, "operationnam": 188, "isplugin": 188, "linktowebsit": 188, "loadplugin": 188, "operationinform": 188, "operationtre": 188, "reloadinstalledplugin": 188, "showoperationlist": 188, "showplugininform": 188, "pluginhelp": 188, "createhelp": 188, "pluginmanag": 188, "pluginmanagerwindow": 188, "onhelp": 188, "onvari": 188, "plugintre": 188, "checkbox": 188, "displaycolumn": 188, "selectmod": 188, "check_item": 188, "accordingli": 188, "failure_item": 188, "iid": 188, "installed_item": 188, "is_dis": 188, "is_en": 188, "processing_item": 188, "uncheck_item": 188, "descend": [188, 392, 410, 505], "update_item": 188, "getrotatingfilelogg": 188, "updatemanag": 189, "getpackagest": 189, "packagenam": 189, "getpackagesstatu": 189, "27": [189, 201, 406, 457, 465, 490, 491, 517, 543, 546], "updatescipion": 189, "outdatedpackag": 189, "updatemanagerpars": 189, "addpluginsvari": 191, "cf": 191, "addpyworkflowvari": 191, "addvariablestosect": 191, "backup": [191, 383, 429, 464], "checkconf": 191, "ftemplat": 191, "unattend": [191, 422], "checknotifi": 191, "configfil": 191, "statist": [191, 201, 243, 276, 300, 410, 435, 445, 478, 492, 506, 507, 509, 511, 512, 525, 527, 535, 536, 537, 538, 539], "checkpath": 191, "compareconfig": 191, "ct": 191, "against": [191, 266, 447, 509, 525], "compareconfigvari": 191, "valueinconfig": 191, "valueintempl": 191, "createconf": 191, "getconfigpathfromconfigfil": 191, "scipionconfigfil": 191, "theoret": [191, 507], "getconfigvari": 191, "gettemplatenam": 191, "font_wm": 192, "placehold": 193, "sit": 193, "demo": [193, 450, 453, 483, 500], "kickoffview": 193, "argslist": 193, "showscheduleopt": 193, "showprojectopt": 193, "showproject": 193, "showprojectnam": 193, "kickoffwindow": 193, "assignallparam": 193, "cml": 193, "choosetempl": 193, "createprojectfromworkflow": 193, "flag2valu": 193, "getflagarg": 193, "templatenam": [193, 436], "importtempl": 193, "launchgui": 193, "nogui": 193, "resolvetempl": 193, "pup": 193, "scheduleproject": 193, "loadworkflow": 194, "tutorialbetag": 194, "tutorialintro": 194, "getworkflow": 194, "getinstallpath": 195, "getscipionapppath": 195, "getscriptspath": 195, "gettemplatespath": 195, "io_coordin": [199, 203], "protocol_preprocess": [199, 208], "protocol_projmatch": [199, 208], "protocol_align_volum": [199, 208], "protocol_align_volume_and_particl": [199, 208], "protocol_analyze_local_ctf": [199, 208], "protocol_angular_graph_consist": [199, 208], "protocol_apply_align": [199, 208], "protocol_apply_deformation_zernike3d": [199, 208], "protocol_apply_transformation_matrix": [199, 208], "protocol_apply_zernike3d": [199, 208], "protocol_assignment_tilt_pair": [199, 208], "protocol_break_symmetri": [199, 208], "protocol_center_particl": [199, 208], "protocol_cl2d": [199, 208], "protocol_cl2d_align": [199, 208], "protocol_classes_2d_map": [199, 208], "protocol_classification_gpucorr": [199, 208], "protocol_classification_gpucorr_ful": [199, 208], "protocol_classification_gpucorr_semi": [199, 208], "protocol_classify_kmeans2d": [199, 208], "protocol_compare_angl": [199, 208], "protocol_compare_reproject": [199, 208], "protocol_consensus_classes3d": [199, 208], "protocol_consensus_local_ctf": [199, 208], "protocol_convert_pdb": [199, 208], "protocol_core_analysi": [199, 208], "protocol_create_galleri": [199, 208], "protocol_ctf_consensu": [199, 208], "protocol_ctf_correct_wiener2d": [199, 208], "protocol_ctf_defocus_group": [199, 208], "protocol_ctf_micrograph": [199, 208], "protocol_deep_align": [199, 208], "protocol_deep_denois": [199, 208], "protocol_deep_hand": [199, 208], "protocol_deep_micrograph_screen": [199, 208], "protocol_denoise_particl": [199, 208], "protocol_eliminate_empty_imag": [199, 208], "protocol_enrich": [199, 208], "protocol_extract_asymmetric_unit": [199, 208], "protocol_extract_particl": [199, 208], "protocol_extract_particles_movi": [199, 208], "protocol_extract_particles_pair": [199, 208], "protocol_flexalign": [199, 208], "protocol_generate_reproject": [199, 208], "protocol_helical_paramet": [199, 208], "protocol_kerdensom": [199, 208], "protocol_kmeans_clust": [199, 208], "protocol_local_ctf": [199, 208], "protocol_metaprotocol_create_output": [199, 208], "protocol_metaprotocol_create_subset": [199, 208], "protocol_metaprotocol_discrete_heterogeneity_schedul": [199, 208], "protocol_metaprotocol_golden_highr": [199, 208], "protocol_ml2d": [199, 208], "protocol_movie_averag": [199, 208], "protocol_movie_gain": [199, 208], "protocol_movie_max_shift": [199, 208], "protocol_movie_opticalflow": [199, 208], "protocol_movie_split_fram": [199, 208], "protocol_multiple_fsc": [199, 208], "protocol_multireference_align": [199, 208], "protocol_normalize_strain": [199, 208], "protocol_particle_boxs": [199, 208], "protocol_particle_pick": [199, 208], "protocol_particle_pick_automat": [199, 208], "protocol_particle_pick_consensu": [199, 208], "protocol_particle_pick_pair": [199, 208], "protocol_particle_pick_remove_dupl": [199, 208], "protocol_phantom_cr": [199, 208], "protocol_pick_nois": [199, 208], "protocol_postprocessing_deeppostprocess": [199, 208], "protocol_preprocess_micrograph": [199, 208], "protocol_random_conical_tilt": [199, 208], "protocol_ransac": [199, 208], "protocol_reconstruct_fouri": [199, 208], "protocol_reconstruct_heterogen": [199, 208], "protocol_reconstruct_highr": [199, 208], "protocol_reconstruct_signific": [199, 208], "protocol_reconstruct_swarm": [199, 208], "protocol_resolution3d": [199, 208], "protocol_resolution_bfactor": [199, 208], "protocol_resolution_deepr": [199, 208], "protocol_resolution_direct": [199, 208], "protocol_resolution_fso": [199, 208], "protocol_resolution_monogenic_sign": [199, 208], "protocol_rotate_volum": [199, 208], "protocol_rotational_spectra": [199, 208], "protocol_rotational_symmetri": [199, 208], "protocol_screen_deepconsensu": [199, 208], "protocol_screen_deeplearn": [199, 208], "protocol_screen_particl": [199, 208], "protocol_shift_particl": [199, 208], "protocol_shift_volum": [199, 208], "protocol_simulate_ctf": [199, 208], "protocol_solid_angl": [199, 208], "protocol_split_volum": [199, 208], "protocol_split_volume_hierarchical_clust": [199, 208], "protocol_structure_map": [199, 208], "protocol_structure_map_zernike3d": [199, 208], "protocol_subtract_project": [199, 208], "protocol_tilt_analysi": [199, 208], "protocol_trigger_data": [199, 208], "protocol_validate_fscq": [199, 208], "protocol_validate_nontilt": [199, 208], "protocol_validate_overfit": [199, 208], "protocol_volume_adjust_sub": [199, 208], "protocol_volume_consensu": [199, 208], "protocol_volume_deform_zernike3d": [199, 208], "protocol_volume_local_sharpen": [199, 208], "protocol_volume_strain": [199, 208], "protocol_write_testc": [199, 208], "protocol_write_testp": [199, 208], "viewer_analyze_local_ctf": [199, 336], "viewer_cl2d": [199, 336], "viewer_classes3d": [199, 336], "viewer_consensus_classes3d": [199, 336], "viewer_ctf_consensu": [199, 336], "viewer_deepemhanc": [199, 336], "viewer_deep_align": [199, 336], "viewer_deep_consensu": [199, 336], "viewer_deep_micrograph_clean": [199, 336], "viewer_eliminate_empty_imag": [199, 336], "viewer_extract_asymmetric_unit": [199, 336], "viewer_local_sharpen": [199, 336], "viewer_metaprotocol_golden_highr": [199, 336], "viewer_ml2d": [199, 336], "viewer_movie_align": [199, 336], "viewer_normalize_strain": [199, 336], "viewer_pdb_deform_zernike3d": [199, 336], "viewer_projmatch": [199, 336], "viewer_ransac": [199, 336], "viewer_reconstruct_highr": [199, 336], "viewer_resolution3d": [199, 336], "viewer_resolution_bfactor": [199, 336], "viewer_resolution_deepr": [199, 336], "viewer_resolution_direct": [199, 336], "viewer_resolution_fso": [199, 336], "viewer_resolution_monogenic_sign": [199, 336], "viewer_solid_angl": [199, 336], "viewer_split_volum": [199, 336], "viewer_structure_map": [199, 336], "viewer_swarm": [199, 336], "viewer_validate_fscq": [199, 336], "viewer_validate_nontilt": [199, 336], "viewer_validate_overfit": [199, 336], "viewer_volume_consensu": [199, 336], "viewer_volume_deform_zernike3d": [199, 336], "viewer_volume_strain": [199, 336], "viewer_volume_subtract": [199, 336], "deeplearningtoolkit": [199, 200, 462], "xmippfirst": 199, "getmatlabenviron": 199, "toolpath": 199, "matlab": [199, 547, 548], "runxmippprogram": 199, "installdeeplearningtoolkit": 199, "helicalfind": [200, 251, 299], "helic": [200, 251, 406, 485, 487, 490, 491], "dihedr": [200, 510, 519, 520, 528, 536, 537, 538, 539], "runcoarsesearch": 200, "fnvol": [200, 204, 228, 250, 301, 305, 307, 319], "heightfract": 200, "z0": 200, "zf": 200, "zstep": 200, "rot0": 200, "rotf": 200, "rotstep": 200, "nthr": [200, 275], "cylinderinnerradiu": 200, "cylinderouterradiu": 200, "cn": [200, 430, 505, 519, 528], "c1": [200, 294, 385, 430, 526], "runfinesearch": 200, "fncoars": 200, "fnfine": 200, "runsymmetr": 200, "fnparam": 200, "projmatch": [200, 228], "producealignedimagesstep": 200, "volumeisctfcorrect": 200, "projmatchstep": [200, 296], "angularsampl": [200, 266, 317, 319], "symmetrygroup": [200, 227, 317, 319], "fnangl": [200, 228, 250, 310], "xmippprotocol": [200, 238, 239, 240, 241, 246, 248, 268, 269, 270, 272, 275, 276, 304, 311, 312], "convertinputtoxmipp": 200, "inputnam": 200, "xmippclass": 200, "resultfn": 200, "getcondaenv": 200, "condaenv": 200, "_conda_env": 200, "getconvertedinput": 200, "getmodel": 200, "modelpath": 200, "mymodel": 200, "h5": 200, "especi": [200, 252, 259, 410, 481, 505, 507, 509, 510, 517], "asserion": 200, "validatedltoolkit": 200, "assert": [200, 410, 435, 438], "conda": [200, 391, 407, 410, 442, 445, 461], "conda_default_environ": 200, "assertmodel": 200, "rout": 200, "mymodel1": 200, "mymodel2": 200, "mymodel3": 200, "myfile3": 200, "combin": [200, 383, 399, 406, 410, 413, 451, 476, 478, 479, 480, 496, 507, 510, 511, 512, 521, 522, 523, 526, 537, 538, 539, 547, 548, 551], "doassert": 200, "predict": [200, 311, 312, 481, 483, 484, 485, 487, 488, 489, 491, 496, 501, 503, 507, 508, 535, 545, 546, 547], "xmippset": 200, "itemclass": 200, "_itemclass": 200, "xmippsetclass": 200, "requier": 200, "asum": 200, "getitemclass": 200, "setmd": 200, "findrow": 200, "findrowbyid": 200, "mdl_item_id": 200, "getlabelpythontyp": 200, "getmdfirstrow": 200, "getxmipppath": 200, "isxmippcudapres": 200, "itermdrow": 200, "abrishami2013": 201, "peraza": 201, "shkolniski": 201, "approach": [201, 296, 300, 383, 391, 392, 406, 415, 435, 451, 498, 505, 526, 533, 547], "2460": 201, "2468": 201, "1093": 201, "bioinformat": [201, 406, 546], "btt429": 201, "oxfordjourn": 201, "abrishami2015": 201, "devic": [201, 383, 406, 428], "robust": [201, 410, 447], "189": 201, "163": 201, "176": 201, "2015": [201, 327, 479, 510, 524, 525, 536, 546], "02": [201, 414, 517, 525, 546], "s1047847715000313": 201, "vahid": 201, "javier": [201, 546], "xuem": 201, "li": [201, 406, 546], "yifan": 201, "cheng": [201, 406, 546], "carlo": [201, 546], "\u00f3scar": 201, "s\u00e1nchez": 201, "jos\u00e9": 201, "mar\u00eda": 201, "induc": [201, 410, 487, 498, 546], "chen2013": 201, "free": [201, 400, 408, 414, 425, 428, 431, 435, 445, 472, 492, 506, 507, 525, 535], "subtomogram": [201, 410, 550], "182": [201, 415], "235": 201, "245": 201, "03": [201, 435, 538, 539, 546], "002": 201, "s1047847713000737": 201, "yuxiang": 201, "chen": [201, 406, 485, 546], "stefan": 201, "pfeffer": 201, "hrabe": 201, "jan": [201, 546], "michael": [201, 546], "schuller": 201, "friedrich": 201, "f\u00f6rster": [201, 406], "cryo": [201, 391, 406, 410, 424, 428, 442, 451, 457, 461, 468, 479, 480, 484, 485, 496, 498, 500, 502, 503, 505, 509, 510, 513, 524, 525, 536, 537, 538, 539, 544, 545, 546], "tomographi": [201, 406, 468, 477, 480], "harmon": 201, "cherian2013": [201, 228, 250], "jensen": 201, "bregman": 201, "logdet": 201, "diverg": 201, "effici": [201, 383, 406, 410], "covari": [201, 228, 250], "ieee": 201, "anal": [201, 477], "mach": 201, "2161": 201, "2174": 201, "1109": 201, "tpami": 201, "2012": [201, 391], "259": [201, 406], "ieeexplor": 201, "xpl": 201, "articledetail": 201, "jsp": 201, "arnumb": 201, "6378374": 201, "cherian": 201, "sra": 201, "banerje": 201, "papanikolopoulo": 201, "delarosatrevin2013": 201, "suit": [201, 406, 407, 413, 483, 493, 494, 495, 496, 500, 524, 525, 536, 537, 538, 539, 540, 541, 542, 547, 548], "184": 201, "321": [201, 546], "328": 201, "09": [201, 391, 414, 428, 499], "015": [201, 525], "s1047847713002566": 201, "oton": 201, "jin2014": 201, "elast": [201, 414, 424, 428], "studi": [201, 296, 406, 447, 501, 513, 527], "larg": [201, 228, 241, 250, 252, 259, 291, 293, 333, 334, 383, 385, 402, 406, 410, 424, 428, 468, 477, 478, 487, 519, 533], "macromolecular": [201, 383, 406, 457, 525, 546, 551], "004": 201, "ncbi": 201, "nlm": 201, "nih": 201, "gov": 201, "pubm": 201, "24508340": 201, "jin": [201, 406], "bilbao": [201, 406, 457], "castro": [201, 406], "n\u00fa\u00f1ez": 201, "ramirez": 201, "llorca": 201, "tama": 201, "jonic": [201, 406], "nma": 201, "jonic2005": 201, "dimension": [201, 222, 296, 321, 391, 406, 410, 484, 487, 546], "ultramicroscopi": [201, 406], "303": 201, "317": 201, "0304": 201, "3991": 201, "ultram": 201, "s0304399105000173": 201, "thevenaz": 201, "el": 201, "bez": 201, "unser": 201, "3dem": [201, 266, 383, 391, 406, 551], "nogales2013": 201, "loup": 201, "nogal": 201, "cadena": 201, "arteni": 201, "taba": 201, "madrid": [201, 410, 449, 457], "zquez": 201, "pascual": [201, 406], "montano": [201, 406], "nucleic": [201, 406, 530, 546], "acid": [201, 406, 484, 485, 492, 498, 530, 546], "research": [201, 406, 415, 425, 457, 487, 492], "publish": [201, 383, 395, 400, 481, 505, 509, 510, 511, 512, 514], "oxford": [201, 406], "univ": [201, 406, 457], "nar": 201, "gkt385": 201, "otsu1979": 201, "man": 201, "cybernet": 201, "transact": 201, "66": [201, 517, 546], "1979": 201, "0018": 201, "9472": 201, "tsmc": 201, "4310076": 201, "otsu": [201, 212, 258], "pascual2000": 201, "fuzzi": [201, 252], "neural": [201, 311, 498, 527, 546], "84": [201, 436, 517], "85": [201, 406, 517], "s0304": 201, "00": [201, 391, 415, 460, 517], "00022": 201, "s030439910000022x": 201, "montserrat": 201, "b\u00e1rcena": 201, "merelo": 201, "cluster": [201, 220, 226, 229, 252, 326, 380, 406, 410, 424, 425, 429, 460, 464, 468, 481, 510], "pascualmontano2001": 201, "novel": 201, "techniqu": [201, 252, 406, 457], "133": [201, 406, 414], "233": [201, 418], "2001": [201, 406], "1006": 201, "jsbi": 201, "4369": 201, "s1047847701943692": 201, "donat": 201, "vall": 201, "marqui": 201, "probabl": [201, 383, 392, 407, 422, 437, 468, 487, 489, 490, 492, 511, 513, 520, 525, 536, 537, 538, 539, 547], "kernel": [201, 321, 407], "pascualmontano2002": 201, "quantit": 201, "tomogram": [201, 406, 410, 438, 547, 548, 550], "138": [201, 509], "114": 201, "122": 201, "2002": [201, 406], "s1047": 201, "00008": 201, "s1047847702000084": 201, "taylor": [201, 406], "winkler": 201, "actin": 201, "myosin": 201, "muscl": [201, 514, 535], "protein": [201, 406, 457, 468, 480, 484, 485, 487, 488, 489, 490, 491, 492, 498, 502, 503, 504, 505, 507, 510, 513, 527, 530, 533, 534, 535, 537, 538, 539, 546], "rosenthal2003": 201, "rosenth": 201, "henderson": [201, 406], "ptimal": 201, "cryomicroscopi": 201, "biol": [201, 406, 546], "2003": [201, 406], "333": 201, "721": 201, "745": 201, "oct": [201, 546], "s0022283603010222": 201, "jmb": [201, 391], "07": [201, 402, 414, 426, 427, 481], "013": 201, "scheres2005a": [201, 392], "likelihood": [201, 259, 391, 392, 509, 525], "refin": [201, 254, 259, 299, 301, 383, 391, 392, 402, 428, 465, 468, 477, 480, 488, 494, 495, 501, 505, 510, 511, 512, 525, 527, 536, 537, 538, 542, 545, 546, 547, 548], "348": [201, 423], "139": 201, "149": [201, 406], "0022": [201, 391], "2836": [201, 391], "031": 201, "s0022283605001932": 201, "schere": [201, 391, 406], "sjor": [201, 391], "mikel": 201, "rafael": 201, "gabor": 201, "herman": 201, "jose": [201, 410, 546], "maria": [201, 546], "scheres2005b": [201, 392], "suppl": [201, 546], "ii243": 201, "ii244": 201, "sep": [201, 442, 546], "bti1140": 201, "cryoelectron": 201, "enhanc": [201, 276, 410, 457, 468, 473, 478], "sensit": [201, 538, 539], "scheres2007a": 201, "haixiao": 201, "gao": [201, 546], "paul": [201, 546], "eggermont": 201, "et": [201, 406, 432, 451, 479, 484, 485, 487, 492, 493, 494, 495, 496, 498, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520, 524, 525, 527, 533, 534, 536, 537, 538, 539, 540, 541, 542], "disentangl": 201, "macromolecul": [201, 406, 501, 502, 505, 507, 509, 513, 517, 519, 533, 535, 537, 545], "natur": [201, 391, 406, 546], "2007": [201, 406], "1038": 201, "nmeth992": 201, "antigen": 201, "polyomaviru": 201, "escherichia": 201, "coli": 201, "ribosom": [201, 406, 465, 468, 547, 550], "simian": 201, "viru": [201, 406, 479, 480, 513], "scheres2007b": [201, 392], "ram\u00edrez": 201, "llorent": 201, "yacob": 201, "san": [201, 546], "mart\u00edn": [201, 546], "carmen": 201, "1167": 201, "1177": 201, "003": [201, 435], "chemistri": 201, "ultrastructur": 201, "archaeal": 201, "dna": [201, 503, 530], "helicas": 201, "metabol": [201, 485, 502], "scheres2009b": [201, 392], "introduc": [201, 254, 259, 383, 392, 396, 399, 406, 422, 434, 451, 452, 453, 468, 474, 477, 510, 524, 528, 530, 532, 538, 539], "crystallogr": [201, 546], "2009": [201, 406], "65": 201, "672": 201, "678": 201, "pt": [201, 546], "jul": [201, 546], "1107": [201, 546], "s0907444909012049": 201, "peptid": [201, 537, 538, 539], "elong": 201, "tertiari": 201, "scheres2009c": 201, "melero": [201, 546], "1563": 201, "1572": 201, "dec": [201, 546], "009": 201, "sorzano2004b": 201, "multiresolut": 201, "146": [201, 462, 502], "381": 201, "392": 201, "006": [201, 391, 414], "s1047847704000073": 201, "sorzano2007a": 201, "transmiss": [201, 406], "nez": [201, 502, 546], "ram": [201, 402, 414, 418, 428, 455, 465, 487, 503, 505, 533, 546], "irez": 201, "boisset": [201, 406], "249": [201, 406], "262": 201, "160": 201, "08": [201, 517, 546], "s104784770700202x": 201, "sorzano2009d": 201, "scheme": [201, 468], "proc": [201, 406, 407], "workshop": [201, 406, 418, 457, 499], "intellig": [201, 383], "signal": [201, 242, 313, 468, 473, 478, 503, 505, 527, 533, 534], "179": 201, "978": 201, "4244": 201, "5059": 201, "wisp": 201, "5286563": 201, "iriart": 201, "ruiz": 201, "sorzano2010a": 201, "multirefer": [201, 294], "171": 201, "206": 201, "2010": [201, 406, 509, 524, 546], "011": 201, "s1047847710000882": 201, "alcorlo": 201, "caffarena": 201, "fern\u00e1ndez": 201, "xu": [201, 406], "incollect": 201, "sorzano2013": 201, "semiautomat": [201, 547, 548], "throughput": [201, 383, 406], "booktitl": 201, "nanoimag": 201, "isbn": 201, "62703": 201, "136": [201, 546], "950": 201, "sousa": 201, "alioscka": 201, "kruhlak": 201, "1007": 201, "137": 201, "0_11": 201, "humana": 201, "vega": 201, "193": 201, "inproceed": 201, "sorzano2014": 201, "outlier": [201, 228, 250, 509, 517, 537, 538, 539], "intl": [201, 406], "confer": [201, 406], "biomed": [201, 513], "iwbbio": 201, "biocomp": 201, "coss": 201, "articulo": 201, "sorzano2015": 201, "trevin": 201, "alvarez": 201, "cabrera": 201, "sesmero": 201, "213": [201, 418], "219": 201, "vargas2013a": 201, "fastdef": 201, "astigmat": [201, 234, 410, 449, 450], "181": 201, "148": [201, 406, 507], "feb": [201, 546], "vargas2013b": 201, "qualiti": [201, 220, 325, 392, 406, 410, 450, 492, 500, 501, 509, 510, 524, 536, 537, 538, 539, 545], "assess": [201, 325, 327, 487, 506, 507, 509, 510, 512, 524, 535, 536, 537, 538, 539], "183": 201, "342": 201, "353": [201, 439, 445], "s1047847713001950": 201, "zaldivar": 201, "learn": [201, 238, 240, 312, 346, 382, 383, 401, 406, 410, 422, 429, 433, 439, 451, 473, 484, 492, 505, 513, 527, 546, 547, 548], "vargas2014": 201, "\u00e1lvarez": 201, "ana": 201, "lucia": 201, "2891": 201, "2898": 201, "btu404": 201, "motiv": [201, 401], "insight": [201, 409], "biolog": [201, 406, 468, 520], "lead": [201, 406, 481], "approxim": [201, 392, 468, 492, 493, 509, 524, 525], "challeng": [201, 546], "reliabl": [201, 326, 406, 410, 487, 501, 507, 509, 535, 547, 548], "priori": 201, "knowledg": [201, 391, 397, 401, 406, 470, 483, 500, 508, 546], "known": [201, 242, 402, 406, 432, 447, 458, 485, 501, 505, 509, 513, 525, 528, 547, 548], "issu": [201, 391, 399, 400, 402, 406, 429, 444, 445, 453, 477, 481, 546, 547, 548, 551], "unknown": [201, 310, 512], "propos": [201, 327, 399, 406, 464, 468], "lineal": [201, 296], "reduct": [201, 296, 402, 410], "These": [201, 215, 296, 386, 391, 392, 398, 406, 419, 423, 427, 430, 437, 444, 447, 452, 468, 470, 473, 477, 487, 495, 503, 510, 520, 525, 535, 538, 539, 542, 547, 548, 550], "reduc": [201, 296, 387, 392, 410, 428, 444, 468, 477, 492, 493, 502, 509, 524, 527, 538, 539, 547, 548], "consensu": [201, 229, 230, 271, 273, 296, 311, 329, 346, 406, 410, 451], "ransac": [201, 296, 479], "simul": [201, 316, 444, 492, 539], "satisfactori": 201, "freeli": [201, 406, 492], "jvarga": 201, "essupplementari": 201, "supplementari": 201, "onlin": [201, 400, 493, 494, 495, 496, 513, 544, 546], "eprint": 201, "vilas2016": 201, "identif": [201, 406], "delaunai": 201, "triangul": 201, "gomez": [201, 546], "peschiera": 201, "ferlenghi": 201, "525": 201, "533": 201, "196": [201, 406], "007": 201, "s104784771630212x": 201, "zhao2013": 201, "zhao": [201, 546], "zhizhen": 201, "singer": 201, "amit": 201, "bessel": 201, "invari": 201, "eigenimag": 201, "871": [201, 546], "877": [201, 546], "pmc": 201, "pmc3711886": 201, "nihms484949": 201, "societi": 201, "america": 201, "ponce2011": 201, "ponc": 201, "colin": 201, "steerabl": 201, "Their": [201, 465, 524], "3051": 201, "3062": 201, "2011": [201, 391, 400, 406], "pmc3719433": 201, "nihms485040": 201, "radermacher1987": 201, "radermach": [201, 406], "wagenknecht": 201, "frank": [201, 406], "exposur": [201, 410], "seri": [201, 386, 410, 436, 447, 449, 547, 548], "subunit": [201, 410, 502, 503, 504, 505, 506, 508, 509, 510, 511, 526, 528], "113": [201, 428], "3302267": 201, "vargas2014a": 201, "scientif": [201, 406, 425, 492], "srep21626": 201, "marabini2014a": 201, "heymann2015": 201, "phantom": [201, 274, 410], "aim": [201, 383, 406, 422, 424, 468, 474, 477, 487, 490, 491, 492, 500, 501, 509, 510, 511, 512, 513, 519, 520, 535, 538, 539, 545], "biophi": 201, "3934": 201, "pmc4440490": 201, "heymann": [201, 327, 406], "sorzano2016": 201, "structmap": 201, "biophys": [201, 406], "1753": 201, "1765": 201, "bpj": 201, "019": 201, "sorzano2015b": 201, "elucid": 201, "revisit": [201, 410], "14290": 201, "srep14290": 201, "vilas2018": 201, "monor": [201, 410, 503, 505, 533, 545, 546], "337": [201, 546], "344": [201, 546], "2017": [201, 501, 502, 510, 540, 546], "018": 201, "strelak2020flexalign": 201, "st\u0159el\u00e1k": 201, "david": [201, 546], "filipovi\u010d": 201, "ji\u0159\u00ed": 201, "jim\u00e9nez": 201, "moreno": [201, 546], "amaya": [201, 546], "flexalign": [201, 410], "2020": [201, 424, 425, 479, 499, 502, 503, 505, 527, 546], "1040": 201, "mdpi": 201, "2079": 201, "9292": 201, "3390": 201, "electronics9061040": 201, "vilas2021": 201, "jl": 201, "tagar": 201, "hd": [201, 435], "intuit": [201, 383, 410, 468], "anisotropi": [201, 306, 410], "cryoem": [201, 391, 399, 410, 424, 457, 499, 511, 512, 513, 517, 545], "xxxx": 201, "2021": [201, 428, 484, 485, 487, 492, 493, 494, 495, 496, 498, 499, 520, 546, 547], "xxx": [201, 389, 444, 449], "wiki": [201, 306, 382, 406, 410, 551], "fso": [201, 306], "fernandez": [201, 410, 546], "gimenez2021": 201, "subtract": [201, 322, 328, 410, 433, 434, 438, 499, 507, 512, 522, 545], "sharpen": [201, 331, 410, 499, 503, 509, 510, 513, 534, 544, 545, 546], "107780": 201, "s104784772100085x": 201, "gim\u00e9nez": 201, "mart\u00ednez": [201, 546], "garc\u00eda": 201, "aportela": [201, 503, 505, 533, 546], "acquisitiontorow": 204, "ctfrow": 204, "alignmenttorow": 204, "alignmentrow": 204, "class2dtorow": 204, "classrow": 204, "converttomrc": 204, "deletevol": 204, "coordinatetorow": 204, "coordrow": 204, "createclassesfromimag": 204, "inputimag": [204, 243], "classesfn": [204, 296, 300], "classtyp": 204, "classlabel": 204, "classfntempl": 204, "preprocessimagerow": 204, "intermedi": [204, 406, 410, 468, 509, 512, 524], "setofclass2d": 204, "createclassesfromimages2": 204, "getclassfn": 204, "createitemmatrix": 204, "createparamphantomfil": 204, "dimx": 204, "partsetmd": 204, "phflip": 204, "ctfcorr": 204, "ctfmodeltorow": 204, "defocusgroupsettorow": 204, "defocusgrouprow": 204, "fillclass": [204, 229], "clsset": [204, 229], "fixvolumefilenam": 204, "getimageloc": 204, "getmoviefilenam": 204, "getscipionobj": 204, "getxmippattribut": 204, "imagetorow": 204, "imgrow": [204, 299], "imglabel": 204, "matrixfromgeometri": 204, "mdtoctfmodel": 204, "mdin": 204, "micrographtoctfparam": 204, "ctfparam": [204, 470], "micrographtorow": 204, "microw": 204, "objecttorow": 204, "extralabel": 204, "mdlabel": 204, "_xmipp_labelnam": 204, "openmd": 204, "particletorow": 204, "partrow": 204, "prefixattribut": 204, "readanglesfrommicrograph": 204, "micfil": 204, "anglesset": 204, "readctfmodel": 204, "coordsset": 204, "readdiscard": 204, "readposcoordin": 204, "posfil": 204, "po": [204, 206, 222, 248, 470], "supervis": [204, 269, 270, 423, 473, 477], "particles_auto": 204, "mdl_enabl": [204, 313], "cost": [204, 299, 414], "readsetofclass": 204, "classesblock": 204, "readsetofclasses2d": [204, 392], "classes2dset": [204, 392], "readsetofclasses3d": 204, "classes3dset": 204, "readsetofclassesvol": 204, "classesvolset": 204, "fnimag": 204, "appropi": [204, 425], "readsetofimag": 204, "rowtofunc": 204, "readsetofmicrograph": 204, "readsetofmovieparticl": 204, "partset": [204, 243, 311], "readsetofparticl": 204, "readsetofvolum": 204, "volset": 204, "readshiftsmoviealign": 204, "xmdfn": 204, "rowfrommd": 204, "rowtoacquisit": 204, "acquisitionrow": 204, "rowtoalign": 204, "rowtoclass": 204, "classitem": 204, "rowtocoordin": 204, "rowtoctfmodel": 204, "rowtoimag": 204, "imgclass": 204, "rowtomicrograph": 204, "rowtomovieparticl": 204, "rowtoobject": 204, "rowtoparticl": 204, "rowtovolum": 204, "volrow": 204, "mdrow": 204, "setofimagestomd": 204, "imgtofunc": 204, "rowfunc": 204, "setofmicrographstomd": 204, "mdmic": 204, "setofparticlestomd": 204, "mdpart": 204, "setrowid": 204, "setxmippattribut": 204, "correctli": [204, 392, 406, 447, 460, 468, 527, 547], "volumetorow": 204, "writectfmodel": 204, "ctffile": 204, "writecoordsconfig": 204, "writemiccoordin": 204, "coordlist": 204, "ismanu": 204, "getposfunc": 204, "writemoviemd": 204, "f1": 204, "usealign": 204, "writesetofctf": 204, "mdctf": 204, "writesetofclasses2d": 204, "writeparticl": 204, "writesetofclassesvol": 204, "writesetofcoordin": 204, "posdir": [204, 206], "writesetofcoordinateswithst": 204, "writesetofdefocusgroup": 204, "defocusgroupset": 204, "fndefocusgroup": 204, "defocugroupset": 204, "setofdefocu": 204, "writesetofimag": 204, "blocknam": 204, "writesetofmicrograph": 204, "writesetofmicrographspair": 204, "uset": 204, "tset": 204, "writesetofmovi": 204, "moviesset": 204, "moviesblock": 204, "writesetofparticl": [204, 392], "writesetofvolum": 204, "writeshiftsmoviealign": 204, "s0": 204, "sn": 204, "xmipptoloc": 204, "xmippfilenam": 204, "xmippimport": 205, "importctf": 205, "addcoordin": 205, "acquisition_info": 205, "readsetofcoordsfromposfnam": 206, "setofinputcoord": 206, "sqliteoutnam": 206, "writecoordslisttoposfnam": 206, "mic_fnam": 206, "list_x_i": 206, "outputroot": 206, "writecoordslisttorawtext": 206, "labeldata": 207, "programdb": 207, "db_timeout": 207, "insertlabel": 207, "insertprogram": 207, "selectcategori": 207, "selectlabel": 207, "selectprogram": 207, "program_nam": 207, "categori": [207, 397, 453, 477], "updateprogramcategori": 207, "programkeywordsrank": 207, "getrank": 207, "createprogramsautocomplet": 207, "xmipp_program": 207, "autocomplet": 207, "createprogramsdb": 207, "escapestr": 207, "getprogramsdbnam": 207, "getxmipplabel": 207, "metadata_label": 207, "getxmipplabelsnam": 207, "getxmippprogram": 207, "skipprogram": 207, "geometrical_mask": [208, 277], "protocol_add_nois": [208, 277], "protocol_create_mask2d": [208, 277], "protocol_create_mask3d": [208, 277], "protocol_crop_res": [208, 277], "protocol_filt": [208, 277], "protocol_image_oper": [208, 277], "protocol_mask": [208, 277], "protocol_movie_res": [208, 277], "protocol_process": [208, 277], "projmatch_form": [208, 290], "projmatch_initi": [208, 290], "projmatch_step": [208, 290], "xmippprotalignvolum": 209, "alignvolumestep": [209, 210], "reffn": 209, "involfn": 209, "outvolfn": 209, "maskarg": [209, 210], "alignarg": 209, "volid": [209, 265, 317, 319, 326], "nvol": [209, 210], "xmippprotalignvolumeforweb": 209, "restrict": [209, 414, 449, 453, 459, 460, 492, 509, 520, 524, 525, 530], "xmippprotalignvolumeparticl": 210, "inputrefer": [210, 392], "alignparticlesstep": 210, "convertstep": [210, 222, 228, 238, 250, 254, 314, 320, 321, 322], "xmippprotanalyzelocalctf": 211, "coeffici": [211, 510, 525, 537, 538, 539], "r2": [211, 525], "analyzedefocu": 211, "xmippprotangulargraphconsist": 212, "soft": [212, 266, 406, 470, 538, 539], "confront": [212, 266], "calculateangstep": [212, 298, 299], "newxdim": [212, 298, 299, 301], "tscurrent": [212, 298, 299, 301], "resolutionalign": [212, 298, 299], "checkinfofield": [212, 299], "fndir": [212, 298, 299, 301], "cleandirectori": [212, 298, 299], "inputparticlesid": [212, 298, 299, 301, 318], "doiteration000": [212, 299], "globalassign": [212, 298, 299], "cclist": [212, 258], "prepareimag": [212, 243, 299], "fndirprevi": [212, 298, 299], "getshiftsfrom": [212, 299], "preparerefer": [212, 298, 299], "targetresolut": [212, 299], "readinfofield": [212, 298, 299, 301], "writeinfofield": [212, 298, 299, 301], "xmippprotapplyalign": 213, "applyalignmentstep": 213, "xmippprotapplytransformationmatrix": 215, "fnoutputpart": 215, "inputvol": [215, 244], "xmippapplyzernike3d": 216, "deform": [216, 244, 330], "zernike3d": [216, 321, 330], "basi": [216, 234, 242, 406], "deformstep": [216, 321, 330], "writezernikefil": 216, "z_clnm": 216, "xmippprotassignmenttiltpair": 217, "xmippprotparticlepickingpair": [217, 272], "affin": [217, 468], "assignmentstep": 217, "fnuntilt": 217, "fntilt": 217, "fnmicsiz": 217, "fnposuntilt": 217, "fnpostilt": 217, "metadatata": [217, 279], "xmippprotangbreaksymmetri": 218, "twiki": [218, 402], "breaksymmetrystep": 218, "imgsfn": [218, 228, 250, 300], "xmippprotcenterparticl": 219, "realign": 219, "realignstep": 219, "xmippprotcl2d": 220, "subdivid": [220, 226], "analyzeoutofcor": 220, "core": [220, 232, 378, 396, 406, 414, 423, 445, 455, 460, 461, 462, 465, 527, 549], "particlesid": [220, 227, 235, 266, 317, 319, 326], "classesid": 220, "evaluateclassesstep": 220, "frc": 220, "sortclassesstep": 220, "criterion": [220, 437, 505, 533, 537], "xmippprotcl2dalign": 221, "cl2d": [221, 340, 465, 477], "scatterimagemark": 222, "img_path": 222, "prevsel": 222, "imscatt": 222, "imid": 222, "edge_color": 222, "readimag": [222, 335], "setpickcallback": 222, "setrectangleselector": 222, "setselectionbutton": 222, "setslidercallback": 222, "updatepatch": 222, "ind": 222, "xmippprotcl2dmap": 222, "mous": [222, 410, 453, 468, 473, 477, 478, 505, 507, 508, 524, 527, 533, 547, 548, 550], "deselect": 222, "classes_md": 222, "computemappingstep": 222, "euclidean": [222, 468], "interactiveselstep": 222, "red_method": 222, "pca": [222, 410, 478], "ltsa": 222, "dm": 222, "lltsa": 222, "lpp": 222, "kpca": 222, "ppca": 222, "hlle": 222, "spe": 222, "npe": 222, "xmippprotgpucrrcl2d": 223, "attractiongeneralstep": 223, "attractionsplitstep": 223, "checkattract": 223, "flag_split": [223, 224], "checkcontinueclassif": 223, "checkoutput": 223, "classifystep": [223, 224, 225], "classifywholesetstep": 223, "cleaningpath": 223, "convertsetstep": 223, "fastcheckingatt": 223, "generatemetadata": 223, "listnameimg": 223, "listnumimg": 223, "iterationstep": [223, 224], "refset": [223, 224], "imgsexp": [223, 224], "usereferenceimag": 223, "flag_attract": 223, "splitstep": [223, 224], "hashtabledict": [224, 225], "ndict": [224, 225], "isitempres": [224, 225], "pushitem": [224, 225], "xmippprotstrgpucrrcl2d": 224, "grow": [224, 324, 410, 437, 453, 477, 487, 533], "whilst": 224, "averageclass": 224, "finalmetadata": 224, "lastmetadata": 224, "newmetadata": 224, "flag_it": 224, "checksplit": 224, "expimgmd": 224, "reclassif": 224, "generateinput": 224, "inputimg": 224, "particlestoprocess": 224, "generatemdforclassif": 224, "classesout": 224, "generateoutputclass": 224, "firsttim": 224, "xmippprotstrgpucrrsimpl": 225, "semi": [225, 468, 524], "maintain": [225, 383, 402, 410, 451, 480, 487, 488, 505, 509, 512, 533, 542], "convertaveragesstep": 225, "xmippprotkmeansclassif2d": 226, "kmeansclassifystep": 226, "fninputmd": 226, "xmippprotcompareangl": 227, "shiftdiff": 227, "angulardiff": 227, "analyzedistancestep": 227, "particlesid1": 227, "particlesid2": 227, "xmippprotcomparereproject": 228, "reproject": [228, 250, 410], "zscore": [228, 250, 313, 536], "varianc": [228, 243, 250, 313, 525], "logarithm": [228, 250], "zscorerescov": [228, 250], "particularli": [228, 250, 460, 470, 537, 538, 539], "evaluateresidu": 228, "produceresidu": 228, "xmippprotconsensusclasses3d": 229, "intersect": [229, 311, 510, 538, 539], "entropi": 229, "classesload": 229, "randomconsensuss": 229, "randomconsensusrelatives": 229, "particleclust": 229, "particleid": 229, "sources": 229, "getrelatives": 229, "getsources": 229, "checksignificancestep": 229, "ensemblestep": 229, "numclust": 229, "findelbowsstep": 229, "intersectstep": 229, "xmippprotconsensuslocalctf": 230, "comparedefocu": 230, "median": [230, 261], "mad": 230, "gctf": [230, 410, 414, 426, 427, 428, 452, 459, 462, 470, 549], "xmippprotconvertpdb": [231, 388], "import_obj": [231, 328], "convertpdbstep": [231, 328], "xmippprotcoreanalysi": 232, "mahalanobi": 232, "analyzecor": 232, "xmippprotcreategalleri": 233, "galleri": [233, 383, 423, 449, 477, 532, 543], "copyinput": [233, 251, 310], "creategalleri": 233, "xmippprotctfconsensu": 234, "meaning": [234, 392, 410, 538, 539], "agreement": [234, 271, 414, 425, 487], "secondari": [234, 505, 538, 539], "filloutput": 234, "newdon": 234, "initializeparam": 234, "initializerejdict": 234, "selectctfstep": 234, "ctfid": [234, 450], "setsecondaryattribut": 234, "usingxmipp": 234, "anglesdiffer": 234, "angle1": 234, "angle2": 234, "averageangl": 234, "setattribut": [234, 323], "xmippprotctfcorrectwiener2d": 235, "wiener": 235, "wienerstep": 235, "xmippprotctfdefocusgroup": 236, "ctfgroupmaxdiff": 236, "xmippprotctfmicrograph": 237, "calculateautodownsampl": 237, "targetsampl": 237, "checkrejectedcriteria": 237, "fneval": 237, "fnreject": 237, "evaluatesinglemicrograph": 237, "getpreviousparamet": 237, "getpreviousvalu": 237, "getsinglepreviousparamet": 237, "xmippprotdeepalign": 238, "angulardist": [238, 317, 319], "mdcone": 238, "computetrainingset": 238, "nametrain": 238, "correlationcudastep": 238, "thidx": 238, "gpuid": 238, "totalgpu": 238, "correlationsignificantstep": 238, "createoutputmetadatastep": 238, "generateconecent": 238, "generateexpimagesstep": 238, "nimg": 238, "nameproj": 238, "nameexp": 238, "predictstep": [238, 240], "prepareimagesfortrain": 238, "projectstep": 238, "numproj": 238, "inirot": 238, "endrot": 238, "initilt": 238, "endtilt": 238, "trainnclassifiers2classesstep": 238, "xmippprotdeepdenois": 239, "xmippprotgeneratereproject": [239, 250], "checkifinputiscomparereproject": 239, "copystackandres": 239, "stackin": 239, "stackout": 239, "getstackorres": 239, "mdfnamein": 239, "stackfnameout": 239, "predictmodel": 239, "preprocessdata": 239, "trainmodel": 239, "xmippprotdeephand": 240, "train": [240, 270, 311, 312, 418, 423, 424, 425, 473, 527, 547], "flipstep": 240, "preprocessstep": 240, "xmippprotdeepmicrographscreen": 241, "impur": 241, "extractmicrographliststepown": 241, "getautosuffix": 241, "getboxscal": [241, 246, 247, 248], "getcoordsampl": [241, 246, 247, 248], "getdonem": 241, "getmicsampl": [241, 246, 248], "getoutput": [241, 246, 248], "getoutputnam": 241, "noton": [241, 246, 248], "xmippprotdenoiseparticl": 242, "huge": [242, 406, 453, 512], "howev": [242, 387, 398, 406, 414, 433, 442, 452, 453, 459, 464, 470, 481, 487, 490, 492, 505, 506, 507, 508, 512, 513, 517, 519, 520, 524, 527, 533, 534, 535, 547, 548], "clearli": [242, 428, 517], "denoiseimag": 242, "inputclassesid": 242, "xmippproteliminateemptybas": 243, "addadvancedparam": 243, "outputset": [243, 271, 273], "eliminationstep": 243, "stepid": [243, 437], "getinput": 243, "streamclos": 243, "lenpartsset": 243, "specialbehavoir": 243, "inset": 243, "xmippproteliminateemptyclass": 243, "createoutputclass": 243, "streamingst": 243, "enabledict": 243, "rejectbypopul": 243, "xmippproteliminateemptyparticl": 243, "partsset": 243, "xmippprotenrich": 244, "contai": 244, "changeextens": 244, "opticalflowalignmentstep": 244, "referencevol": 244, "inputparticlesmd": 244, "fnoutput": 244, "volumealignmentstep": 244, "inputpartsmd": 244, "fninputtorefloc": 244, "fninpartsnewang": 244, "xmippprotextractunit": 245, "extractunit": 245, "replace_at_index": 245, "tup": 245, "xmippprotextractparticl": 246, "createparticl": 246, "geteven": 246, "miclist": [246, 270], "xmippprotextractmovieparticl": 247, "xmippprotextractparticlespair": 248, "createmetadataimagestep": 248, "extractparticlesstep": 248, "basemicnam": 248, "fnctf": 248, "micrographtoextract": 248, "micop": 248, "doinvert": 248, "normalizearg": 248, "dobord": 248, "getmicnameorid": 248, "writeposfilesstep": 248, "xmippprotflexalign": 249, "no_flip": 249, "no_rot": 249, "getgpuarg": 249, "getuserangl": 249, "getuserflip": 249, "imag_arrai": [249, 323, 335], "transformgain": 249, "especif": [249, 492], "tryprocessmovi": 249, "produceproject": 250, "xmippprothelicalparamet": 251, "symmetr": [251, 310, 512, 513, 526], "deltarot": 251, "deltaz": 251, "coarsesearch": [251, 310], "finesearch": [251, 310], "kendersombaseclassifi": [252, 309], "kendersom": [252, 477], "spectra": [252, 465, 477], "kenserdom": [252, 309], "rewriteclassblockstep": 252, "xmippprotkerdensom": 252, "kohonen": 252, "featur": [252, 274, 282, 285, 397, 400, 406, 415, 422, 429, 449, 453, 456, 468, 475, 510, 526, 551], "fcm": 252, "kerdensom": [252, 402, 465], "anneal": [252, 539], "excel": 252, "transit": [252, 386], "xmippprotlocalctf": 254, "maximun": [254, 329, 493], "refinedefocu": 254, "xmipp_angular_continuous_assign2": 254, "xmippmetaprotcreateoutput": 255, "metaprotocol": [255, 256, 257, 258, 410], "togeth": [255, 257, 399, 406, 447, 449, 468, 489, 505, 507, 509, 513, 519, 520, 535, 547, 548], "discret": [255, 257, 507, 535], "heterogen": [255, 257, 298, 299, 383, 391, 410, 527], "xmippmetaprotcreatesubset": 256, "3dclass": 256, "xmippmetaprotdiscreteheterogeneityschedul": 257, "checkoutputsstep": [257, 258], "monitorstep": [257, 258, 435], "xmippmetaprotgoldenhighr": 258, "golden": 258, "split_ht": 258, "split_otsu": 258, "newhighr": 258, "flagloc": 258, "xmippprotml2d": [259, 392], "ml": [259, 392, 525], "bia": [259, 392], "alter": [259, 311], "consum": [259, 402, 414, 547], "strongli": [259, 391, 481, 513, 547, 548, 549], "converg": [259, 505, 525, 533], "xmippprotmovieaverag": 260, "interp_cub": 260, "interp_linear": 260, "interp_map": 260, "dosaveavem": 260, "xmippprotmoviegain": 261, "dogainprocess": 261, "movieid": 261, "estimategainfun": 261, "nosigma": 261, "estimateorientationstep": 261, "estimateddatabas": 261, "estgain": 261, "getarg": 261, "getestimatedgainpath": 261, "getfinalgainpath": 261, "tifflip": 261, "getflippedorientedgainpath": 261, "getinputgain": 261, "getorientedcorrectionpath": 261, "getorientedgainpath": 261, "getresidualgainpath": 261, "invertimag": 261, "match_orient": 261, "exp_gain": 261, "est_gain": 261, "normalizegainstep": 261, "residualdatabas": 261, "resgain": 261, "searchestimatedgainpath": 261, "updategainsoutput": 261, "imagefil": [261, 304, 307], "array_zeros_to_median": 261, "thre": 261, "depth": [261, 335], "surround": [261, 335, 406, 409, 468, 509], "arrays_correlation_ft": 261, "ar1": 261, "ar2_ft_conj": 261, "ft_conjug": 261, "invert_arrai": 261, "translation_correct": 261, "xmippprotmoviemaxshift": 262, "reject": [262, 313], "whose": [262, 299, 301, 311, 386, 392, 406, 468], "drift": [262, 410], "travel": [262, 386, 410], "rej_and": 262, "rej_fram": 262, "rej_movi": 262, "rej_or": 262, "rej_typ": 262, "getmicfrommovi": 262, "isdoseweight": 262, "dwmicrograph": 262, "setinputm": 262, "setofm": 262, "doseweight": 262, "protmoviealign": 263, "xmippprotofalign": 263, "showcartesianshiftsplot": 263, "itemid": 263, "xmippprotsplitfram": 264, "convertxmdtostackstep": 264, "splittingstep": 264, "xmippprotmultiplefsc": 265, "comparevolumestep": 265, "volloc": 265, "preparereferencestep": 265, "xmippprotmultirefalign": 266, "accuraci": [266, 487, 489, 490, 492, 493, 547], "inputarg": 266, "outputarg": 266, "alignabilitystep": 266, "volnam": 266, "voldir": 266, "angularaccuracystep": 266, "indx": 266, "createplot2d": 266, "volprefix": 266, "neighbourhooddirectionstep": 266, "phantomproject": 266, "projectionlibrarystep": [266, 326], "significantstep": [266, 300, 326], "anglespath": 266, "xmippprotnormalizestrain": 267, "strain": [267, 332], "amongst": 267, "xmippprotparticleboxs": 268, "boxsizestep": 268, "xmippprotparticlepick": 269, "creatediscardedstep": 269, "launchparticlepickguistep": [269, 272], "micfn": [269, 311], "xmippparticlepickingautomat": 270, "copyinputfilesstep": 270, "filestocopi": 270, "model_train": 270, "model_svm": 270, "model_pca_model": 270, "stk": [270, 423, 447, 478], "model_rotpca_model": 270, "model_particle_avg": 270, "xmp": [270, 430], "xmippprotconsensuspick": [271, 273], "sai": [271, 311, 400, 422, 517, 547], "relax": [271, 410, 411, 487, 492], "suffic": [271, 547], "fn_prefix": [271, 273], "consensuscoords_": 271, "calculateconsensusstep": 271, "definerel": [271, 273], "getmaininput": [271, 273], "insertnewcoorsstep": [271, 273], "consensuscoordin": 271, "consensuswork": 271, "consensusradiu": 271, "posfn": 271, "jaccfn": 271, "m_n": 271, "vote": [271, 468, 547], "jaccard": 271, "getreadym": 271, "xmippprotpickingremovedupl": 273, "closer": [273, 410, 468, 519, 520], "purgedcoords_": 273, "removeduplicatesstep": 273, "xmippprotphantom": 274, "xmipp_phantom_cr": 274, "createphantomsstep": 274, "xmippprotpicknois": 275, "outcoordsposdir": 275, "picknoisestep": 275, "mics_dir": 275, "incoordsposdir": 275, "extractnoisenumb": 275, "prepareinput": 275, "picknoise_prepareinput": 275, "setofcoord": 275, "outpath": 275, "xmippprotdeepvolpostproc": 276, "post": [276, 410, 503, 509, 517, 527, 546], "rsanchezgarc": 276, "deepemhanc": [276, 410, 499, 503, 509, 545, 546], "hi_r": 276, "model_target_opt": 276, "tight": [276, 527], "wide": [276, 406, 428, 445, 510, 527], "normalization_auto": 276, "normalization_mask": 276, "normalization_opt": 276, "normalization_stat": 276, "tight_model": 276, "wide_model": 276, "deepvolpostprostep": 276, "xmippgeometricalmask2d": [278, 280, 285], "masks2d": 278, "argsfortransformmask": 278, "isgeometri": 278, "addsiz": 278, "xmippgeometricalmask3d": [278, 281, 285], "xmippprotaddnois": 279, "student": [279, 414, 455], "gaussian_nois": 279, "student_nois": 279, "uniform_nois": 279, "xmippprotaddnoiseparticl": 279, "addnoisestep": 279, "getfilenamenoisystk": 279, "xmippprotaddnoisevolum": 279, "xmippprotcreatemask2d": 280, "crown": [280, 526, 547], "previuou": 280, "createmaskfromgeometrystep": [280, 281], "postprocessmaskstep": [280, 281], "xmippprotcreatemask3d": [281, 388], "cylind": [281, 468, 526], "createmaskfromfeaturefil": 281, "createmaskfromvolumestep": 281, "xmippprotcropresizeparticl": 282, "xmippprocessparticl": [282, 283, 284, 285, 287, 288], "filterstep": [282, 283], "isfirststep": [282, 287], "resizestep": [282, 296], "windowstep": 282, "xmippprotcropresizevolum": [282, 388], "xmippprocessvolum": [282, 283, 284, 285, 287, 288], "xmippresizehelp": 282, "resize_dimens": 282, "resize_factor": 282, "resize_pyramid": 282, "resize_samplingr": 282, "window_op_crop": 282, "window_op_window": 282, "xmippfilterhelp": 283, "fm_adaptive_soft": 283, "fm_band_pass": 283, "fm_bayesian": 283, "fm_central": 283, "fm_ctf": 283, "fm_daub12": 283, "fm_daub20": 283, "fm_daub4": 283, "fm_high_pass": 283, "fm_low_pass": 283, "fm_median": 283, "fm_remove_scal": 283, "fm_soft_threshold": 283, "getinputsampl": 283, "getmodescondit": 283, "filtermod": 283, "xmippprotfilterparticl": 283, "convertctfxmippstep": 283, "tmpctf": 283, "xmippprotfiltervolum": 283, "xmippoperatehelp": 284, "product": [284, 386, 391, 392, 446, 481], "summat": 284, "xmippprotimageoperateparticl": 284, "operationstep": 284, "operationstr": 284, "xmippprotimageoperatevolum": 284, "xmippprotmask": 285, "copymaskfilestep": 285, "inputmaskfil": 285, "outputmaskfil": 285, "maskstep": 285, "xmippprotmaskparticl": 285, "geometry_baseclass": 285, "mask_classnam": 285, "mask_fil": 285, "xmippprotmaskvolum": [285, 388], "xmippprotmovieres": 286, "xmipppreprocesshelp": 287, "xmippprotpreprocessparticl": 287, "xmippprotpreprocessvolum": 287, "preprocess": [287, 289, 311, 329, 391, 410, 428, 468, 470, 477, 499, 501, 526, 527, 528, 533, 534, 545, 547, 548], "dust": 287, "norm_new": 287, "norm_old": 287, "norm_ramp": 287, "centerstep": 287, "changeinsert": 287, "invertstep": 287, "normalizestep": 287, "phaseflipstep": 287, "randomizestep": 287, "removeduststep": 287, "sortimag": 287, "outputmd": 287, "thresholdstep": 287, "agg_averag": 287, "agg_sum": 287, "seg_amin": 287, "seg_auto": 287, "seg_dalton": 287, "seg_voxel": 287, "adjuststep": [287, 328], "changehandstep": 287, "laplacianstep": 287, "projectionstep": 287, "segmentstep": 287, "symmetrizestep": 287, "xmippprotpreprocessmicrograph": 289, "bad": [289, 410, 468, 481, 493, 509], "createfilenametempl": 292, "central": [292, 383, 391, 398, 402, 406, 422, 438, 468, 478], "initializelist": 292, "getprojectionmatchingarg": 293, "vari": [293, 383, 392, 406, 468, 493, 509], "insertangularclassaveragestep": 293, "refn": [293, 294], "insertangularprojectlibrarystep": 293, "insertcomputeresolutionstep": 293, "insertfiltervolumestep": 293, "insertmaskreferencestep": 293, "insertreconstructionstep": 293, "runangularprojectlibrarystep": 293, "stepparam": [293, 294], "runassignimagestorefer": 293, "coefici": 293, "docfil": [293, 294], "runcalculatefscstep": 293, "constanttoadd": [293, 294], "runcreateoutputstep": 293, "results_imag": 293, "result_class": 293, "runexecutectfgroupsstep": 293, "runfiltervolumestep": 293, "constanttoaddtofiltr": [293, 294], "runinitangularreferencefilestep": 293, "runprojectionmatch": 293, "add_to": 293, "angular_class_averag": 293, "fixm": 293, "runreconstructionstep": 293, "runstoreresolutionstep": 293, "resolitermd": [293, 294], "resolitermaxmd": [293, 294], "runtransformmaskstep": 293, "runvolumeconvertstep": 293, "reconstructedfilteredvolum": [293, 294], "maskedfilenam": [293, 294], "xmippprotprojmatch": 294, "filenamenumberlength": 294, "allctfgroup": 294, "allit": 294, "allref": 294, "angularprojectlibrarystep": 294, "assignimagestoreferencesstep": 294, "calculatedeviationsstep": 294, "devit": 294, "calculatefscstep": [294, 302], "cleanvolumestep": 294, "vol1": [294, 320, 321], "vol2": [294, 320, 321], "further": [294, 323, 335, 383, 392, 398, 406, 407, 410, 444, 450, 547, 548], "createiterdirsstep": 294, "executectfgroupsstep": 294, "filtervolumestep": [294, 326], "getlastit": 294, "initangularreferencefilestep": 294, "itersboolvalu": 294, "attributenam": [294, 434], "firstvalu": 294, "iteratioin": 294, "itersfloatvalu": 294, "itersstringvalu": 294, "projectionmatchingstep": [294, 326], "reconstructionstep": [294, 327], "storeresolutionstep": 294, "transformmaskstep": 294, "volumeconvertstep": 294, "xmippprotrct": 295, "rct": [295, 470, 477, 479], "createrctimagesstep": 295, "reconstructclass": 295, "classin": 295, "classout": 295, "classimag": 295, "classvolumeout": 295, "xmippprotransac": 296, "evaluatevolumesstep": 296, "getbestvolumesstep": 296, "getccthreshold": 296, "getcorrthreshstep": 296, "fnbase": 296, "projectinitialvolum": 296, "ransaciterationstep": 296, "reconstructstep": [296, 297], "fnroot": [296, 320, 321], "scorefinalvolum": 296, "xmippprotreconstructfouri": 297, "xmipp_reconstruct_fouri": 297, "xmippprotreconstructheterogen": 298, "classifyparticl": 298, "evaluateconverg": 298, "getnumberofreconstructedvolum": 298, "insertiter": [298, 299], "parsesymlist": 298, "postprocess": [298, 299, 301, 391, 410, 468, 505, 513, 526, 527, 533, 534, 544], "xmippprotreconstructhighr": 299, "finer": [299, 301], "whichev": [299, 493], "somewhat": [299, 547], "substanti": [299, 410], "percentil": 299, "wors": [299, 487, 517], "automatic_align": 299, "global_align": 299, "local_align": 299, "no_align": 299, "split_fix": 299, "split_stochast": 299, "stochastic_align": 299, "adaptshift": 299, "fnsourc": 299, "tssourc": 299, "fndest": 299, "tsdest": 299, "copybasicinform": 299, "doweightssnr": 299, "evaluatereconstruct": 299, "getlastfinishedit": 299, "getnumberofpreviousiter": 299, "localassign": 299, "noassign": 299, "preparemask": 299, "maskobject": 299, "fnmask": [299, 332], "tsmaskout": 299, "xdimout": 299, "qualifyparticl": 299, "weightparticl": 299, "getpreviousqu": 299, "xmippprotreconstructsignific": 300, "spa": [300, 391, 406, 434, 441, 477, 547, 548], "squar": [300, 468, 473, 487, 493, 510, 525, 527, 537, 540], "getitertmpvolum": 300, "iternumb": 300, "getitervolum": 300, "getlastiter": 300, "nvolum": 300, "getsignificantarg": 300, "xmippprotreconstructswarm": 301, "swarm": [301, 410], "stochast": [301, 547], "maxim": [301, 406, 459, 501, 505, 513, 520, 528, 547, 548], "calculateaverag": 301, "cleanvolum": 301, "convertinputvolum": 301, "imghandl": 301, "fnin": 301, "evaluateindividu": 301, "reconstructnewvolum": 301, "updatevolum": 301, "xmippprotresolution3d": 302, "calculatedprresolut": 302, "mdata": 302, "calculatefscresolut": 302, "computebfactorstep": 302, "createsummarystep": 302, "xmippprotbfactorresolut": 303, "bfactor": [303, 492, 493, 494, 495, 496], "matchingbfactorlocalresolut": 303, "substitut": [303, 392, 492, 535], "fscresolut": 303, "mrc_convert": [303, 306], "xmippprotdeepr": 304, "high_resol": 304, "low_resol": 304, "createchimeraoutput": 304, "createhistrogram": [304, 305], "getminmax": [304, 307], "resizeinputstep": 304, "resolutionstep": 304, "transformstep": 304, "updateenviron": 304, "gpunum": 304, "tensorflow": 304, "xmippprotmonodir": 305, "monoresstep": [305, 331], "createellipsoid": 305, "doa": 305, "createhistrogramstep": 305, "directionalresolutionstep": 305, "xmippprotfso": 306, "half": [306, 383, 392, 400, 410, 468, 505, 512, 513, 520, 526, 527, 532, 534, 538, 539, 544, 547], "fsoestimationstep": 306, "xmippprotmonor": 307, "createhistogram": 307, "ifnomask": 307, "readmetadataoutput": 307, "resolutionmonogenicsignalstep": 307, "xmippprotrotatevolum": 308, "xmippprotrotspectra": 309, "spectrum": [309, 470], "calculatespectrastep": 309, "imagesfn": 309, "inputcent": 309, "outputspectra": 309, "centerfirstharmonicstep": 309, "outputcent": 309, "xmippprotrotationalsymmetri": 310, "fold": [310, 397, 432, 487, 506, 519], "global_local_search": 310, "global_search": 310, "local_search": 310, "xmippprotdeepconssubset": 311, "xmippprotscreendeepconsensu": 311, "smart": 311, "cooridant": [311, 346, 347], "meanwhil": 311, "preliminari": 311, "add_data_train_cust": 311, "add_data_train_custom_opt": 311, "add_data_train_custom_opt_coor": 311, "add_data_train_custom_opt_part": 311, "add_data_train_non": 311, "add_data_train_precomp": 311, "add_data_train_typ": 311, "precompil": 311, "add_model_train_new": 311, "add_model_train_pretrain": 311, "add_model_train_prevrun": 311, "add_model_train_typ": 311, "pretrain": 311, "previousrun": 311, "consensus_coor_path_templ": 311, "consensus_coords_": 311, "consensus_parts_path_templ": 311, "consensus_parts_": 311, "OR": [311, 547], "last_round": 311, "net_templ": 311, "nnetdata": 311, "particles_templ": 311, "predict_batch_max": 311, "preprocess_batch_max": 311, "pre_proc_mics_path": 311, "preprocm": 311, "to_extract_micfn": 311, "additional_coords_fals": 311, "additional_coords_tru": 311, "to_train_micfn": 311, "trained_params_path": 311, "trainedparam": 311, "pickl": 311, "train_batch_max": 311, "using_input_coord": 311, "using_input_m": 311, "allfre": 311, "traficlight": 311, "calculatecoorconsensusstep": 311, "outcoordsdatapath": 311, "haven": [311, 391, 395, 435], "checkifnewm": 311, "checkifparentsfinish": 311, "streamstat": [311, 437], "finsih": 311, "cnnfree": 311, "createfinaloutput": 311, "closestream": 311, "createpreliminaroutput": 311, "trpass": 311, "dotrain": 311, "endpredictingstep": 311, "endprotocolstep": 311, "cnn": 311, "endtrainingstep": 311, "extractparticl": 311, "getallcoordsinputmicrograph": 311, "dic": 311, "microgrpah": 311, "concurr": [311, 437], "getcoordinatesoutput": 311, "getextractedmicfn": 311, "getinpcoordsfn": 311, "extractedsetofcoordsfn": 311, "getinputmicsfn": 311, "getmicrographfnswithcoordin": 311, "getmicsid": 311, "filteroutnocoord": 311, "getparticlesoutput": 311, "getprecoordinatesoutput": 311, "getpreparticlesoutput": 311, "getpreprocparamsfromform": 311, "getpredictedmicfn": 311, "getpreprocessedmicfn": 311, "gettrainedmicfn": 311, "initializestep": [311, 323], "insertcaculateconsensusstep": 311, "neccessari": 311, "insertextractpartstep": 311, "joinsetofparticlesstep": 311, "trainingpass": 311, "justpredict": 311, "lastroundstep": 311, "remainign": 311, "arriv": [311, 453], "loadcoord": 311, "poscoorspath": 311, "loadmeanaccuraci": 311, "loadmicsetfromfn": 311, "inputdir": 311, "loadtrainedparam": 311, "networkreadytopredict": 311, "picknois": 311, "predictcnn": 311, "calif": 311, "predictionson": 311, "preliminar": 311, "preprocessmicsstep": 311, "prunepath": 311, "readypreliminarpredict": 311, "predit": 311, "readytoextractmicfn": 311, "readytopredictmicfn": 311, "readytopreprocessm": 311, "readytotrainmicfn": 311, "retrievepreviouspassmodel": 311, "lasttrpass": 311, "retrievepreviousrunmodel": 311, "prevprot": 311, "retrievetrainset": 311, "negativetrain": 311, "deepconsensu": 311, "phaseflip": 311, "invcontrast": 311, "savetrainedparam": 311, "traincnn": 311, "totrainmicfn": 311, "trainingon": 311, "updateoutput": 311, "updatepreoutput": 311, "uploadtrainedparam": 311, "keyparam": 311, "waitfreeinputcoord": 311, "waitfreeinputm": 311, "xmippprotscreendeeplearn": 312, "datadict": 312, "postestdict": 312, "negtestdict": 312, "predictdict": 312, "fnametometadata": 312, "postraindict": 312, "negtraindict": 312, "xmippprotscreenparticl": 313, "attach": [313, 415, 428, 439, 445, 452, 453, 513, 547, 548], "merit": [313, 525], "prune": [313, 400], "ssnr": [313, 476], "ration": 313, "varainc": 313, "rej_maxzscor": 313, "rej_non": 313, "rej_percentag": 313, "rej_percentage_ssnr": 313, "rej_vargini": 313, "rej_vari": 313, "ssnr_choic": 313, "var_choic": 313, "gini": 313, "zscore_choic": 313, "maxzscor": 313, "sortimagesstep": 313, "histthreshold": 313, "valueslist": 313, "portion": [313, 510, 527], "takeneg": 313, "portionth": 313, "peak": [313, 444, 536, 537, 538, 539], "correpond": 313, "4th": 313, "rejectbyvari": 313, "inputmdfn": 313, "outputmdfn": 313, "xmippprotshiftparticl": 314, "shiftstep": [314, 315], "xmippprotshiftvolum": 315, "xmippprotsimulatectf": 316, "decai": [316, 526], "simulatestep": 316, "xmippprotsolidangl": 317, "exclus": [317, 319, 386, 410, 484, 492], "classifygroupsstep": [317, 319], "classifyonegroup": [317, 319], "projnumb": [317, 319], "projmdblock": [317, 319], "projref": [317, 319], "mdclass": [317, 319], "mdimag": [317, 319], "neighbourhood": [317, 319, 468], "mdout": [317, 319], "constructgroupsstep": [317, 319], "homogeneizestep": [317, 319], "refineanglesstep": [317, 319], "splitvolumestep": [317, 319], "xmippprotsplitvolum": 318, "generatesplittedvolum": 318, "xmippprotsplitvolumehierarch": 319, "cleaningstep": 319, "runreconstruct": 319, "fnxmd": 319, "xmippprotstructuremap": 320, "output_suffix": [320, 321], "d_crop": [320, 321], "alignstep": [320, 321], "inputvolfn": [320, 321], "refvolfn": [320, 321], "computecorr": [320, 321], "volfn": [320, 321, 326], "volsr": [320, 321], "mindim": [320, 321], "maxsr": [320, 321], "nvoli": [320, 321], "correlationmatrix": [320, 321], "vollist": [320, 321], "gatherresultsstepcorr": [320, 321], "savecorrel": [320, 321], "nrow": [320, 321], "ncol": [320, 321], "xmippprotstructuremapzernike3d": 321, "aligned_vol": 321, "dalign": 321, "convolut": [321, 526, 541], "xr": 321, "sigma": [321, 468, 526, 537, 538, 539], "deformationmatrix": 321, "entropyconsensu": 321, "gatherresultsstepdef": 321, "gaussiankernel": 321, "rigidalignmentmap": 321, "savedeform": 321, "multidimension": 321, "interpoint": 321, "rigidregistr": 321, "xmippprotboostparticl": 322, "xmippprotsubtractprojectionbas": 322, "boost": 322, "imporv": 322, "input_particl": [322, 392], "boostingstep": 322, "xmippprotsubtractproject": 322, "denot": 322, "subtractionstep": [322, 328], "xmippprottiltanalysi": 323, "segment": [323, 335, 494, 496, 507, 520, 526, 550], "calculatetiltcorrelationstep": 323, "getpsd": 323, "micfold": 323, "processmicrographstep": 323, "computestat": 323, "window_coordinates2d": 323, "wind_step": 323, "xmippprottriggerdata": 324, "_no_": 324, "_yes_": 324, "soon": [324, 410, 428, 435, 451, 452, 453, 490, 524], "getimagesclass": 324, "getimagestyp": 324, "getoututnam": 324, "setimagesclass": 324, "setimagestyp": 324, "xmippprotvalfit": 325, "assignpdbstep": 325, "getfscqattrd": 325, "getinputstruct": 325, "getinputstructfil": 325, "getpdbfil": 325, "runblocresstep": 325, "substractblocresstep": 325, "xmippprotvalidatenontilt": 326, "validationstep": 326, "xmippprotvalidateoverfit": 327, "consider": [327, 414, 468, 548], "gatherresultsstep": 327, "numberofimag": 327, "fractioncount": 327, "fnnewimgmd": 327, "particlesmd": 327, "xmippprotvoladjbas": 328, "xmippprotvolsubtract": 328, "xmippprotvoladjust": 328, "assimil": 328, "generatemask2step": 328, "nooutputgener": 329, "xmippprotvolconsensu": 329, "fusion": 329, "substract": [329, 520], "fusionstep": 329, "xmippprotvolumedeformzernike3d": 330, "alignmap": 330, "convertoutputstep": 330, "xmippprotlocsharp": 331, "checkbackgroundstep": 331, "sharpenstep": 331, "sharpeningandmonoresstep": 331, "xmippprotvolumestrain": 332, "calculatestrain": 332, "fnvol0": 332, "fnvolf": 332, "prepareoutput": 332, "xmippprotwritetestc": 333, "testwritestep": [333, 334], "xmippprotwritetestp": 334, "createreferencestep": 334, "testwritevalid": 334, "addpoint": 335, "getdiscardeds": 335, "getselecteds": 335, "getweight": 335, "getxdata": 335, "getydata": 335, "getzdata": 335, "iteral": 335, "pathdata": 335, "createemptypoint": 335, "removelastpoint": 335, "splitlongestseg": 335, "midpoint": 335, "pointid": 335, "getstat": 335, "isdiscard": 335, "setdiscard": 335, "setstat": 335, "setz": 335, "copy_imag": 335, "xmipp_imag": 335, "flipyimag": 335, "infn": 335, "outdir": 335, "flip": [335, 410, 478, 537], "matmul_seri": 335, "mat_list": 335, "matmul": 335, "normalize_arrai": 335, "surrounding_valu": 335, "jj": 335, "validatexmippgpubin": 335, "writeimagefromarrai": 335, "xmippplott": 337, "plotmd": 337, "mdlabelx": 337, "mdlabe": 337, "plotmdangulardistribut": 337, "plotmdfil": 337, "mdfilenam": 337, "metadatafil": 337, "plotscattermd": 337, "scatterplot": 337, "xmippview": 338, "getctfview": 338, "aroung": [340, 352], "xmippcl2dview": 340, "xmippctfconsensusview": 343, "wave": [343, 525], "getstringifact": 343, "xmippdeepconsensusview": 346, "zscoredeeplearning1": 346, "xmippdeepmicrographview": 347, "cleaner": [347, 410], "zscoredeeplearning2": 347, "ml2d": [352, 392, 465, 477], "xmippml2dview": 352, "createplot": 352, "protml": 352, "selectedplot": 352, "existen": 380, "vario": 380, "servicio": 380, "procesamiento": 380, "dispon": 380, "trabajador": 380, "computaci\u00f3n": 380, "cient\u00edfica": 380, "como": 380, "cient\u00edfico": 380, "se": 380, "podr\u00eda": 380, "pedir": 380, "que": 380, "instalaran": 380, "trueno": 380, "tienen": 380, "nodo": 380, "k80": 380, "cesga": 380, "usuario": 380, "pueden": 380, "solicitar": 380, "acceso": 380, "centro": 380, "supercomputaci\u00f3n": 380, "galicia": 380, "pero": 380, "podemo": 380, "instalen": 380, "hecho": 380, "ello": 380, "encantado": 380, "usemo": 380, "sin": 380, "embargo": 380, "parec": 380, "ser": [380, 410], "pued": 380, "lento": 380, "ya": 380, "sistema": 380, "cola": 380, "poner": 380, "trabajo": 380, "pesado": 380, "poco": 380, "alguna": 380, "k2": 380, "una": 380, "acced": 380, "por": 380, "vnc": [380, 414, 415, 427, 428], "sobr": 380, "cloud": [380, 406, 415, 425, 427, 428, 455, 457, 492], "principio": 380, "s\u00f3lo": 380, "iba": 380, "estar": 380, "departamento": 380, "IT": 380, "cada": 380, "si": 380, "interesa": 380, "preparar": 380, "plantilla": 380, "poder": 380, "usarla": 380, "crear": 380, "m\u00e1quina": 380, "momento": 380, "peque\u00f1a": 380, "ampliaran": 380, "diciembr": 380, "planean": 380, "tenerla": 380, "gesti\u00f3n": 380, "virtual": [380, 387, 407, 410, 414, 415, 421, 424, 425, 427, 442, 455], "har\u00eda": 380, "sonia": 380, "quiz\u00e1": 380, "yo": 380, "laura": [380, 402, 424], "thing": [382, 383, 387, 391, 392, 400, 429, 430, 435, 437, 442, 481], "webserv": 382, "reus": [382, 547], "portal": [382, 424, 425], "debuggingprofil": 382, "juan": 382, "valgrind": 382, "vtune": 382, "unifi": [383, 406, 410, 491, 551], "biologist": [383, 406, 551], "diagram": [383, 392, 396, 404, 415, 419, 423], "illustr": [383, 392, 400, 404, 405, 433, 438, 441, 468, 477, 479, 480, 505, 509], "driven": [383, 391, 406, 422], "behind": [383, 399, 401, 449, 463, 479], "scene": [383, 547, 548], "bother": 383, "becom": [383, 397, 406, 410, 452, 453, 477, 481, 547, 548], "autom": [383, 386, 406, 410, 424, 506], "manner": [383, 406, 430, 435, 441, 507, 508], "effort": [383, 406, 410, 424], "tend": [383, 503, 510], "stick": [383, 520], "experi": [383, 406, 422, 424, 481, 513], "facilit": [383, 406, 410, 501, 508, 512], "succe": 383, "engag": 383, "collabor": [383, 406, 424, 457, 551], "curv": [383, 406, 479, 538, 539], "peopl": [383, 410], "pipelin": [383, 406, 453, 468, 479, 480, 547, 548], "capabl": [383, 406, 410, 424, 425, 477], "mainten": [383, 388, 410], "modular": [383, 410], "constitut": [383, 406, 468, 490, 492, 495, 502, 505, 508, 513, 521, 537], "subsect": [383, 468, 509], "explain": [383, 391, 392, 398, 399, 415, 422, 428, 436, 438, 453, 468, 510, 525, 547, 548], "involv": [383, 386, 392, 406, 424, 437, 444, 460, 477, 478, 480, 485, 487, 509, 513, 515, 519, 520, 530, 547, 548], "easi": [383, 397, 403, 406, 410, 415, 451, 453, 476, 477, 510], "besid": [383, 410, 468, 470, 492, 506, 507, 513, 519, 520], "protocol__": 383, "nice": [383, 400, 429], "five": [383, 392, 432, 449, 487, 492, 507, 509, 520, 525, 530, 538, 539, 547], "upon": [383, 386, 406, 550], "spend": 383, "flowchart": 383, "relationship": [383, 392, 406, 431, 489], "think": [383, 391, 422], "she": 383, "idea": [383, 387, 391, 399, 401, 406, 437, 442, 449, 450, 451, 468, 481, 506, 524, 547], "essenti": [383, 449, 490, 491, 501, 502], "exact": [383, 406, 435, 445, 477], "role": [383, 406, 429, 549], "schema": [383, 511, 512, 513], "hard": [383, 391, 406, 432, 439, 455], "One": [383, 409, 429, 457, 458, 468, 477, 487, 518, 520, 526, 535, 547], "mapperimplement": 383, "permit": 383, "administr": [383, 398, 421, 460], "longer": [383, 434, 444, 460], "transluc": 384, "ultra": 384, "arnopro": 384, "iconpropos": 384, "architectur": [385, 386, 396, 401, 402, 415, 422, 481, 485, 490], "t1": 385, "micro": 385, "i386": 385, "x86_64": [385, 458, 459, 461], "t2": [385, 415], "xlarg": [385, 414], "m2": 385, "2xlarg": 385, "4xlarg": 385, "m3": 385, "m4": 385, "10xlarg": 385, "r3": 385, "8xlarg": 385, "cc1": 385, "cc2": 385, "cg1": 385, "g2": 385, "cr1": 385, "hi1": 385, "hs1": 385, "c3": 385, "c4": 385, "d2": 385, "cycl": [386, 391, 411, 444, 509, 525, 539], "rebuild": [386, 484, 498], "pinpoint": 386, "quickli": [386, 392, 410, 441], "inconvenienc": 386, "earli": [386, 451, 477, 546], "stage": [386, 451], "examin": [386, 519], "9980": 386, "buildmast": 386, "topologi": 386, "decis": [386, 391, 451, 452], "lot": [386, 387, 410, 442, 444, 447, 449, 481, 489], "forth": [386, 453], "inappropri": 386, "tcp": [386, 415], "piec": [386, 406, 435, 449], "constantli": [386, 437, 451, 487], "fed": [386, 453], "buildrequest": 386, "queu": 386, "deliveri": 386, "builder": [386, 422], "buildstep": 386, "buildfactori": 386, "diocletian": [386, 435, 451], "aforement": [386, 398], "supportbuildgroupfactori": 386, "sundai": 386, "productionbuildgroupfactori": 386, "saturdai": 386, "develbuildgroupfactori": 386, "mondai": 386, "wednesdai": 386, "fridai": 386, "team": [386, 388, 401, 402, 410, 421, 424, 425], "incorpor": [386, 391, 406, 480, 492, 506, 516], "mail": [386, 401, 435, 549, 551], "channel": [386, 451, 456, 479, 498, 533, 546], "slack": [386, 401, 410, 451], "sphinxcontrib": 387, "fork": [387, 445], "mess": [387, 415], "tini": [387, 505], "whatev": 387, "_build": 387, "won": [387, 391, 468, 520], "isn": [387, 407, 434, 435, 437, 450, 533], "strictli": [387, 392, 547], "funki": 387, "navig": [387, 397, 410, 437, 468, 473, 477, 478, 509, 547, 548], "ve": [387, 400, 403, 410, 422, 442, 468, 481], "side": [387, 414, 428, 444, 449, 453, 468, 477, 485, 492, 493, 494, 495, 496, 501, 505, 508, 509, 510, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548], "fresh": 387, "yaiza": [387, 391, 435], "scipion_gh_pag": 387, "auto": [387, 410, 450], "mind": [387, 460], "happi": [387, 391, 395, 410, 451, 453, 547, 548], "priorit": [388, 410], "anonym": [388, 437, 449], "countri": 388, "transmit": 388, "regard": [388, 392, 428, 429, 448, 481, 487, 501, 509, 510, 511, 512, 524, 525, 526, 532, 536, 537, 538, 539, 549], "reconnect": 388, "report_protocol": 388, "protocolt": 388, "webservice_project": 390, "webtool_packag": 390, "views_webtool": 390, "therefor": [391, 398, 405, 406, 410, 411, 430, 437, 452, 453, 459, 463, 464, 477, 481, 503, 547, 548], "facto": 391, "perfect": [391, 429, 510], "conceiv": 391, "consolid": 391, "myplugin": [391, 434, 436, 438, 439, 442], "rf": [391, 395], "installp": [391, 434, 436, 438, 439, 453, 461, 462, 481, 549], "path_where_clon": 391, "greet": [391, 434, 441], "ctrl": [391, 407, 410, 435, 436, 437, 439, 441, 442, 453, 454, 468, 471, 477, 478, 520, 531, 542, 543, 547, 548], "crucial": [391, 406, 452], "despit": [391, 491, 492], "licens": [391, 507, 535, 551], "readm": [391, 429], "convert30": 391, "protocol_assign_optic_group": 391, "protocol_autopick_log": 391, "protocol_autopick": 391, "relion_logo": 391, "test_convert_relion": [391, 465], "test_protocols_relion3": [391, 413], "py_": 391, "scheres2012a": 391, "bayesian": 391, "415": 391, "406": 391, "418": 391, "s0022283611012290": 391, "posteriori": 391, "scheres2012b": 391, "519": 391, "530": 391, "s1047847712002481": 391, "few": [391, 406, 410, 430, 450, 452, 453, 468, 472, 509, 547, 548], "ordereddict": 391, "relion_hom": [391, 463], "relion_cuda_lib": [391, 464], "v3_0": 391, "v3_1": 391, "mask_fill_zero": 391, "mask_fill_nois": 391, "bookmark": 391, "protrelionmotioncor": 391, "protrelionexportctf": 391, "protrelion2autopick": 391, "protrelionautopicklog": 391, "protrelionextractparticl": 391, "protrelionexportparticl": 391, "protrelionpreprocessparticl": 391, "protrelioncenteraverag": 391, "protrelionclassify2d": 391, "protrelioninitialmodel": 391, "protrelioncreatemask3d": 391, "protrelionclassify3d": 391, "protrelionrefine3d": 391, "protrelionctfrefin": 391, "protrelionbayesianpolish": 391, "protrelionmultibodi": 391, "protrelionpostprocess": 391, "protrelionlocalr": 391, "protrelionexpandsymmetri": 391, "protrelionsubtract": 391, "protrelionsymmetrizevolum": 391, "protrelionreconstruct": 391, "eclips": [391, 396, 407, 441], "cproject": 391, "pydevproject": 391, "classpath": 391, "dist": 391, "egg": [391, 409], "cod": 391, "__pycache__": 391, "histori": [391, 498, 502, 545], "catalog": [391, 547], "pwutil": [391, 437, 450, 452], "_logo": 391, "_refer": 391, "kimanius2016": 391, "zivanov2018": 391, "As": [391, 392, 406, 407, 415, 421, 422, 423, 424, 428, 430, 432, 433, 441, 442, 446, 447, 449, 450, 453, 468, 487, 488, 489, 490, 492, 501, 504, 505, 506, 507, 508, 509, 512, 513, 515, 520, 522, 524, 525, 528, 533, 543, 544, 547, 548], "_defineemvar": 391, "_definevar": 391, "defineemvar": 391, "binpath": 391, "pathsep": 391, "libpath": 391, "cudalib": 391, "relion_mpi_lib": 391, "relion_mpi_bin": 391, "relionplugin": 391, "fftw3": [391, 459], "relion_var": 391, "fftw_lib": 391, "fftw_includ": 391, "relion_command": 391, "dgui": 391, "off": [391, 428, 449, 478, 526], "dcmake_install_prefix": 391, "relion_refin": [391, 410], "archiv": [391, 406, 437], "gz": [391, 422, 503], "updatecuda": 391, "doubt": 391, "readthedoc": 391, "four": [391, 397, 432, 434, 438, 453, 468, 492, 502, 505, 507, 509, 519, 522, 524, 525, 528, 530, 537, 539, 547], "synthes": [391, 503], "setuptool": 391, "find_packag": 391, "codec": 391, "abspath": 391, "__file__": 391, "long_descript": 391, "author_email": 391, "imageprocess": 391, "install_requir": 391, "package_data": 391, "entry_point": 391, "discoveri": [391, 406], "pai": [391, 414, 430, 442, 450, 517, 520], "attent": [391, 430, 442, 450, 451, 517, 520], "short": [391, 392, 410, 457, 479, 530, 547, 548], "spider": [391, 402, 406, 410, 414, 426, 427, 428, 457], "uncom": [391, 415], "include_package_data": 391, "didn": [391, 445, 507, 512], "prior": [391, 455, 481, 533, 546], "live": [391, 447, 448, 511], "pythonpath": [391, 397, 435, 442], "third": [391, 398, 407, 408, 437, 453, 477, 487, 492, 509, 543, 547, 548], "parti": [391, 472], "me": 391, "ins": [391, 397], "behav": [391, 422], "troubleshoot": [391, 461, 464, 551], "grep": [391, 400, 413, 463], "websit": 391, "rememb": [391, 435, 437, 442, 447, 449, 468, 511, 515, 547, 548], "registerpluginbinari": 391, "v3": [391, 481, 549], "azazello": 391, "scipion3env": [391, 439], "kb": 391, "94": [391, 509, 517], "uninstallp": 391, "nobin": [391, 462], "installb": [391, 442, 462, 481], "uninstallb": 391, "test_": [391, 447], "ever": [391, 395], "rsync": [391, 395, 421], "testdata": [391, 395, 429, 453], "myplugin123_testdata": [391, 395], "file1": [391, 395], "wwww": [391, 395], "tip": [391, 395, 400, 401, 468, 473], "yourself": [391, 395, 433, 453, 455, 511, 512], "gitraw": [391, 395], "disclaim": [391, 395], "twine": 391, "offici": [391, 410, 481], "plugin_hom": 391, "sdist": 391, "forgot": 391, "WITH": [391, 449], "earliest": 391, "IN": 391, "THE": [391, 421], "IF": 391, "moreov": [392, 406, 410, 451, 453, 468], "xmippprot": 392, "fig": [392, 406, 419, 470, 473, 477, 478, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "_devstatu": 392, "prod": 392, "_insertallstep": [392, 405, 435, 437, 439, 441], "runmlstep": 392, "_valid": [392, 439], "_citat": 392, "_summari": [392, 434, 437, 441], "skeleton": [392, 505, 507, 509, 510, 535, 542], "wil": [392, 449], "lbe": 392, "throughout": [392, 442, 507, 524], "thoroughli": 392, "__stringparam__": 392, "__floatparam__": 392, "__intparam__": 392, "__booleanparam__": 392, "__enumparam__": 392, "__pointerparam__": 392, "__relationparam__": 392, "__protocolclassparam__": 392, "_enumparam": 392, "display__list__": 392, "display__combo__": 392, "pointerclass": 392, "pointercondit": 392, "linelabel": 392, "dogeneraterefer": 392, "numberofrefer": 392, "domlf": 392, "mlf2d": 392, "pushbutton": 392, "smallest": [392, 406, 410, 510, 511, 528, 532], "_insertrunjobstep": 392, "_getmlprogram": 392, "_getmlparam": 392, "advantag": [392, 448, 451, 487, 490, 491, 492, 504, 505, 507, 508, 509, 525, 547, 548], "multiprocessor": 392, "_getfilenam": 392, "input_refer": 392, "xmipp_ml_align2d": 392, "mlf": 392, "_getoroot": 392, "nref": 392, "domirror": 392, "donorm": 392, "norm": 392, "mpirun": [392, 444, 460], "bynod": [392, 460], "xmipp_mpi_ml_align2d": 392, "000194_xmippprotml2d": 392, "ml2d_": 392, "thr": 392, "invers": [392, 525, 537], "_createsetofclasses2d": 392, "output_class": 392, "_defineoutput": [392, 434, 437], "_definesourcerel": 392, "usingset": 392, "paragraph": [392, 398, 406, 425, 470, 520], "_definetransformrel": 392, "_definectfrel": 392, "nevertheless": [392, 407, 438, 481, 485, 487, 490, 491, 492, 505, 506, 510, 511, 533], "_warn": 392, "variant": 392, "public": [392, 406, 421, 425, 427, 428, 437, 449, 453], "elif": [392, 546], "dofast": 392, "brief": [392, 398, 444, 465, 468, 477, 511, 547, 548], "relev": [392, 401, 429, 439, 441, 487, 509, 510, 513, 544], "nparticl": 392, "nrefer": 392, "_fourier": 392, "space_": 392, "_fast_": 392, "_normalization_": 392, "thorough": [392, 447], "_materi": 392, "methods_": 392, "paper": [392, 428, 451], "bug": [392, 400, 402, 415, 424, 439, 456, 551], "testxmippml2d": [392, 465], "testxmippbas": 392, "setupclass": [392, 435, 438, 447], "mda": [392, 402, 410], "runimportparticl": 392, "particlesfn": 392, "test_ml2d": 392, "protml2d": 392, "maxit": [392, 462, 515], "assertisnotnon": 392, "review": [392, 400, 402, 406, 410, 414, 425, 428, 444, 451, 468, 481, 506], "institut": [395, 400, 406], "dataset_nam": 395, "scipion_fold": 395, "danger": 395, "caution": 395, "themselv": [395, 510, 547, 548], "senc": 395, "welcom": [396, 402], "introduct": [396, 399, 440, 446, 492, 498, 500, 545, 546, 550], "big": [396, 401, 402, 428, 430, 445, 451, 471, 477, 487, 505, 509, 513, 520, 527, 532, 533], "pictur": [396, 401], "monitor": [396, 440, 448, 449, 450, 451, 452, 453, 454, 455], "lab": [396, 406, 410, 451], "anywai": [396, 398, 400, 428, 487], "macro": [397, 509, 539], "syntax": [397, 434, 436, 453, 538, 539], "refactor": [397, 410], "jre": 397, "platform": [397, 406, 410, 424, 425, 445, 449], "linux": [397, 410, 449, 455, 458, 460, 461, 464, 481], "64": [397, 406, 460, 465, 481, 502, 517, 548], "bit": [397, 401, 410, 422, 449, 450, 477], "simpler": [397, 468], "plug": 397, "categor": [397, 509], "pydev": 397, "mi": 397, "pydevpythonpath": 397, "client": [397, 414, 415, 449], "egit": 397, "marketplac": [397, 414, 425], "unmark": 397, "uri": 397, "seen": [397, 406, 415, 441, 445, 447, 448, 450, 451, 452, 453, 507, 509, 511, 520, 535, 537, 547], "fulfil": 397, "artwork": 398, "awesom": 398, "gpl": [398, 472], "cheatsheet": 398, "fontawesom": 398, "otf": 398, "past": [398, 442, 450, 487, 530], "photoshop": 398, "famili": [398, 451], "emphas": [398, 477, 510], "plain": [398, 410, 530], "b22222": 398, "grei": [398, 471, 477, 505, 520, 524], "west": [398, 415], "tube": 398, "hint": [398, 410, 434, 437, 438, 442, 444, 468, 481], "technic": [398, 448], "popup": [398, 423, 478, 492], "javascript": [398, 450], "messi": [398, 400], "infopopup": 398, "warningpopup": 398, "errorpopup": 398, "general_styl": 398, "btn": [398, 450], "buttongrei": 398, "buttonr": 398, "href": [398, 450], "increasingli": 399, "realiz": [399, 505], "couldn": 399, "use_gpu": 399, "compulsori": [399, 530], "gpu_list": 399, "meantim": 399, "steps_parallel": [399, 405, 437], "stepsexecutor": 399, "motioncor2": [399, 410, 414, 426, 427, 428, 453, 459, 462], "mc2": 399, "nicer": 400, "waffl": 400, "book": 400, "svn": 400, "co": [400, 546], "br": [400, 408], "ci": [400, 537, 538, 539], "st": [400, 435], "new_branch": 400, "old_branch": 400, "oldbranch": 400, "everybodi": 400, "pull": [400, 549], "newlocalbranchnam": 400, "remotebranchnam": 400, "newlocalbranch": 400, "newbranchwithbugfix": 400, "yourfil": 400, "diff": 400, "branch1": 400, "branch2": 400, "patchfil": 400, "tag_nam": 400, "elsewher": [400, 449], "reappli": 400, "scm": 400, "regret": 400, "conflict": [400, 461], "unaffect": 400, "rebas": 400, "rev": [400, 406], "commithash": 400, "blame": 400, "januari": [400, 414, 457], "methodologi": [400, 484, 501, 502], "peer": 400, "asset": 400, "fork_button": 400, "forkicon": 400, "yourusernameher": 400, "privatescipion": 400, "bring": [400, 424, 477, 481], "feel": [400, 401, 403, 410, 473, 477], "confus": [400, 406], "branchless": 400, "catch": 400, "upstream": [400, 487, 509, 520, 524], "vv": 400, "mynewfeatur": 400, "pr": 400, "across": [400, 410, 425, 429, 460, 536], "gitflow": 400, "forget": [400, 425, 439, 442, 492, 493, 494, 495, 496, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547], "worri": [401, 410, 439], "lost": [401, 406, 468, 477], "sould": 401, "complementari": [401, 406, 503, 505, 509], "materi": [401, 402, 468, 534], "invit": [401, 410], "sourceforg": [401, 444, 446, 456], "stuff": 401, "collaps": [402, 410], "polish": [402, 410], "introductori": [402, 429], "webtool": 402, "95": [402, 406, 462, 517, 534], "tapu": 402, "ribo": [402, 468], "pcv": [402, 465], "virus": [402, 406, 527, 533, 534], "compact": [402, 489, 493, 494, 498], "week": 402, "sab": 402, "port": [402, 415, 421, 423, 428, 449], "hypertext": 402, "leak": [402, 444], "complaint": 402, "ml3d": 402, "adapt": [402, 410, 460, 464, 485, 490, 499], "vacat": 402, "hdf": 402, "onlyaligncl2d": 402, "rotspectra": 402, "astex": 402, "believ": 403, "filament": [403, 468], "helix": [403, 487], "thought": [403, 431], "eras": [403, 410], "keyboard": [403, 407, 410, 468, 524], "blob": [404, 410, 442], "pyrevers": [404, 419], "svg": 404, "downloadmoviesstep": 405, "closesetstep": [405, 437], "readxmlfilestep": [405, 437], "depstepslist": 405, "listdir": [405, 437], "registerfil": 405, "newstep": [405, 437], "registerimagestep": [405, 437], "_number_of_files_": 405, "instruct": [405, 410, 415, 425, 428, 429, 444, 445, 449, 455, 457, 462, 492, 509, 510, 511, 512, 514, 524, 525], "stepsexecutionmod": [405, 437], "ultim": [406, 546], "goal": [406, 410, 465, 480], "healthi": 406, "patholog": 406, "spatial": [406, 487, 509, 533, 537, 538, 539, 546, 547, 548], "biochem": 406, "tem": 406, "acquir": [406, 424, 468], "frank2006a": 406, "subcellular": 406, "thin": [406, 468, 525], "cellular": 406, "frank2006b": 406, "understood": 406, "thinner": 406, "\u03bcm": 406, "specimen": [406, 501, 502, 506, 527, 534, 548], "crystallographi": [406, 457, 502, 509, 524, 525, 536, 537, 546], "nuclear": 406, "magnet": 406, "reson": 406, "organel": 406, "molecul": [406, 424, 485, 501, 502, 505, 506, 507, 509, 510, 512, 513, 518, 520, 524, 535, 537], "traffick": 406, "pore": [406, 485], "nucleu": 406, "cytoplasm": 406, "beck2004": 406, "robinson2007": 406, "infect": 406, "zhang2010": 406, "capsid": [406, 480], "dengu": 406, "pokidysheva2006": 406, "ludtke2008": 406, "zhang2008": 406, "thick": [406, 468], "arrang": [406, 449, 494, 507, 510], "complement": [406, 425, 480, 509, 547, 548], "impact": [406, 457, 547, 548], "primarili": [406, 547, 548], "focus": [406, 445, 465, 479, 548], "assembli": 406, "analys": [406, 512], "vitro": 406, "sorzano2007": 406, "jonic2008": 406, "nm": [406, 468], "kda": [406, 502], "crystallin": 406, "matter": [406, 512], "speak": [406, 468, 547], "snapshot": [406, 429, 444], "thousand": 406, "conformation": 406, "strategi": [406, 411, 428, 468, 480, 489, 505, 509, 539], "5\u03bcm": 406, "lucic2006": 406, "achiev": [406, 411, 424, 480, 487], "tomograph": 406, "nativ": 406, "rise": [406, 410], "emerg": 406, "proteom": [406, 492], "nickell2006": 406, "devis": 406, "frangakis2002": 406, "regularli": [406, 477], "crystal": [406, 546], "lattic": 406, "tubular": 406, "energi": [406, 492, 502, 507, 535, 539], "photon": 406, "water": [406, 507, 518, 535, 537], "absorpt": 406, "284": 406, "ev": 406, "oxygen": [406, 502, 546], "534": 406, "lipid": [406, 485], "absorb": 406, "ic": [406, 410], "dye": 406, "penetr": 406, "schneider1998": 406, "legros2005": 406, "medic": 406, "radiograph": 406, "kev": 406, "synchrotron": 406, "bright": 406, "emit": 406, "highli": [406, 461, 481, 533], "lawrenc": 406, "berkelei": 406, "natl": 406, "usa": 406, "bessi": 406, "berlin": 406, "germani": [406, 457], "interestingli": [406, 507, 508], "spain": [406, 457], "favor": [406, 505, 513, 517, 519, 537, 538, 539], "mistral": 406, "spanish": 406, "fact": [406, 468, 510], "defend": 406, "advisori": 406, "committe": 406, "beamlin": 406, "particip": [406, 457], "emdatabank": 406, "europ": [406, 414, 449, 451], "eu": [406, 414, 415, 424], "bioimag": 406, "bcu": [406, 428], "nation": [406, 424, 457], "biotechnologi": 406, "temblor": 406, "ebi": [406, 437, 487, 492], "embl": [406, 457, 492], "jointli": 406, "databank": 406, "pdbe": [406, 437, 503, 513], "european": [406, 424, 425], "ac": [406, 410, 437, 453], "uk": [406, 410, 437], "collaboratori": 406, "rcsb": 406, "ncmi": 406, "bcm": 406, "worldwid": 406, "bank": [406, 485, 502, 532, 533], "henrick2003": 406, "tagari2002": 406, "deposit": [406, 424, 437, 453, 505, 543], "ftp": [406, 437], "unfortun": [406, 451, 513], "lack": [406, 487, 513], "adher": 406, "hamper": 406, "furthermor": [406, 437], "handicap": 406, "wwpdb": [406, 513, 545], "publicli": [406, 424], "pdbj": 406, "pim": 406, "lim": [406, 448], "cw": 406, "heymann2005": 406, "difficult": [406, 444, 477, 505, 512, 524, 537], "obstacl": 406, "toolkit": [406, 464, 492, 509, 524], "iplt": 406, "comprehens": [406, 505, 525], "philippsen2007": 406, "principl": [406, 442], "layer": 406, "exploit": 406, "2dx": 406, "uniba": 406, "ch": 406, "outcom": [406, 453], "customiz": 406, "disadvantag": 406, "spire": 406, "wadsworth": 406, "spider_doc": 406, "baxter2007": 406, "traceabl": [406, 451, 478], "jweb": 406, "sparx": [406, 410], "sparxwiki": 406, "fundament": [406, 432], "hohn2007": 406, "infrastructur": [406, 414, 424, 425], "skill": [406, 551], "appion": [406, 423, 470], "lander2009": 406, "leginon": 406, "ami": [406, 414, 415, 424, 428], "scripp": 406, "redmin": 406, "suloway2005": 406, "guidanc": 406, "grew": 406, "reusabl": 406, "pioneer": 406, "plan": [406, 411, 437, 460, 492, 507, 524, 532], "acknowledg": 406, "inspir": 406, "forti": 406, "surprisingli": 406, "ht": 406, "omic": 406, "rich": 406, "mine": 406, "strength": [406, 468], "heavili": 406, "penal": 406, "firm": 406, "burden": 406, "interoper": [406, 468], "steep": 406, "widespread": 406, "interchang": 406, "ontologi": [406, 424], "ecosystem": 406, "therebi": 406, "minim": [406, 445, 468, 492, 493, 525, 528, 534, 539, 547, 548], "frank1996": 406, "vanheel1996": 406, "crowther1996": 406, "imod": [406, 410, 462, 468, 480, 549], "kremer1996": 406, "brandei": 406, "owen1996": 406, "ludtke1999": 406, "bsoft": [406, 410, 477], "heymann2001": 406, "sorzano2004": 406, "tom": 406, "toolbox": 406, "nickell2005": 406, "gipson2007": 406, "tomoj": [406, 549], "messaoudi2007": 406, "hundr": 406, "assembl": 406, "inexperienc": 406, "great": [406, 470], "troubl": [406, 481], "unix": [406, 422, 464], "entranc": 406, "barrier": 406, "novic": 406, "experimentalist": 406, "reluct": 406, "reli": [406, 547, 548], "notebook": [406, 410, 487, 488, 489, 490, 491, 492], "her": [406, 453, 492], "serious": 406, "compromis": [406, 510], "notic": [406, 442, 452, 453, 463, 464, 481], "unabl": [406, 490, 509, 520], "bookkeep": 406, "degrad": [406, 444], "overal": [406, 510, 517, 525, 537, 538, 539, 547, 548], "greatli": [406, 410], "simplifi": [406, 410, 422, 505, 547, 548], "facil": [406, 410, 414, 424, 436, 448, 449, 453, 457], "supercomput": 406, "centr": 406, "explicitli": [406, 442], "baxter": 406, "wt": 406, "leith": 406, "157": 406, "63": 406, "beck": 406, "eck": 406, "plitzko": 406, "melchior": 406, "gerisch": 406, "baumeist": [406, 546], "medalia": 406, "306": 406, "1387": 406, "1390": 406, "crowther": [406, 432], "1996": 406, "116": 406, "frangaki": 406, "b\u00f6hm": 406, "nickel": 406, "nicastro": 406, "typk": 406, "hegerl": 406, "acad": 406, "sci": [406, 546], "14153": 406, "14158": 406, "penczek": 406, "zhu": 406, "ladjadj": 406, "190": 406, "springer": 406, "fu2004": 406, "fu": 406, "bultan": 406, "su": [406, 525], "13th": 406, "621": 406, "630": 406, "gipson": 406, "zeng": [406, 546], "zhang": [406, 410, 546], "stahlberg": 406, "harrison2007": 406, "harrison": 406, "kellei": 406, "mueller": 406, "shield": 406, "henrick": 406, "newman": 406, "tagari": 406, "chagoyen": 406, "emdep": 406, "228": [406, 418], "156": 406, "169": 406, "belnap": 406, "151": 406, "207": 406, "hohn": 406, "tang": 406, "goodyear": 406, "baldwin": 406, "huang": [406, 546], "yang": [406, 546], "glaeser": 406, "adam": [406, 546], "ludtk": 406, "47": [406, 415, 507, 517], "hull2006": 406, "hull": 406, "wolstencroft": 406, "steven": 406, "gobl": 406, "pocock": 406, "oinn": 406, "729": 406, "732": 406, "2008": 406, "232": 406, "562": 406, "579": [406, 517], "kremer": 406, "mastronard": 406, "mcintosh": 406, "71": [406, 517, 546], "krishnan2002": 406, "krishnan": 406, "wagstrom": 406, "von": 406, "laszewski": 406, "argonn": 406, "illinoi": 406, "lander": 406, "stagg": 406, "voss": 406, "fellmann": 406, "puloka": 406, "yoshioka": 406, "irv": 406, "mulder": 406, "lau": 406, "lyumki": 406, "potter": 406, "carragh": 406, "166": [406, 548], "102": 406, "lucic": 406, "forster": 406, "ann": 406, "biochemistri": 406, "74": [406, 546], "833": 406, "865": 406, "chiu": 406, "semiautom": 406, "1999": 406, "82": 406, "97": [406, 517], "baker": [406, 546], "song": [406, 546], "chuang": 406, "441": [406, 517], "448": 406, "menager2006": 406, "menag": 406, "lacroix": 406, "22nd": 406, "68": [406, 468, 517], "messaoudi": 406, "boudier": 406, "marco": 406, "bmc": 406, "288": 406, "linaroudi": 406, "227": [406, 546], "kofler": 406, "lei": 406, "225": 406, "230": [406, 415], "owen": 406, "dg": 406, "derosi": 406, "dj": 406, "167": 406, "philippsen": 406, "schenk": 406, "signorel": 406, "mariani": 406, "bernech": 406, "engel": 406, "28": [406, 457, 490, 512, 544, 546], "pokidysheva": 406, "battisti": 406, "bator": 406, "kelli": 406, "chipman": 406, "xiao": [406, 546], "gregorio": 406, "hendrickson": 406, "kuhn": 406, "rossmann": [406, 546], "485": 406, "493": 406, "robinson": 406, "sali": [406, 507, 535, 546], "450": 406, "973": 406, "982": 406, "schneider": 406, "1998": 406, "75": [406, 428, 517, 546], "104": 406, "vel\u00e1zquez": 406, "muriel": 406, "194": 406, "204": 406, "cottevieil": 406, "larquet": 406, "995": 406, "1013": 406, "sulowai": 406, "guerra": 406, "quisp": 406, "41": [406, 517, 546], "60": [406, 432, 435, 468, 528, 546, 547], "trend": [406, 547], "589": [406, 546], "thatte2001": 406, "thatt": 406, "microsoft": 406, "corp": 406, "heel": 406, "harauz": 406, "orlova": 406, "schmidt": 406, "schatz": 406, "zeng2007": 406, "du": 406, "hu": 406, "huai": 406, "lectur": 406, "4782": 406, "settembr": 406, "dormitz": 406, "bellami": 406, "grigorieff": [406, 410, 479], "105": 406, "1867": 406, "1872": 406, "fang": 406, "hui": 406, "zhou": 406, "141": [406, 502, 509], "482": 406, "gear": 407, "keymap": [407, 441], "alt": [407, 478], "launcher": [407, 408, 445, 461, 464], "fall": [407, 526, 533, 538, 539], "tempor": 407, "ubuntu": [407, 414, 415, 418, 426, 427, 428, 449, 455, 458, 459, 460, 461, 464, 481, 514], "sudo": [407, 415, 419, 428, 429, 459, 461, 481, 514, 515], "tee": [407, 461], "yama": 407, "ptrace_scop": 407, "profession": 408, "educ": 408, "simplest": [408, 413, 444], "__main__": [408, 439, 445], "justinit": 408, "guido": 409, "suggest": [409, 433, 456, 468, 483, 492, 500, 507, 527, 532, 535, 542, 547, 548, 549, 551], "pep": 409, "sparingli": 409, "immedi": [409, 410, 462, 509], "parenthes": 409, "bracket": [409, 453, 524, 528], "brace": [409, 460], "spam": 409, "ham": 409, "semicolon": 409, "colon": 409, "long_var": 409, "whitespac": 409, "hypot2": 409, "module_nam": [409, 413], "camelcas": 409, "noun": 409, "mixedcas": 409, "upper_with_underscor": 409, "sourcefil": 409, "destfil": 409, "_getextrapath": [409, 435, 437], "mv": [409, 442], "loos": [410, 477], "wall": 410, "toggl": [410, 450, 471, 547, 548], "dramat": 410, "_possibleoutput": 410, "cistem": [410, 413, 453, 462, 464, 465, 549], "extractor": 410, "500mb": 410, "announc": [410, 549], "anymor": [410, 442, 481, 488, 524], "usabl": 410, "migrat": [410, 499], "python3": [410, 445, 461, 481, 499], "relion3": [410, 463], "grafana": [410, 448, 451], "grigoriefflab": [410, 474], "gautomatch": [410, 414, 426, 427, 428, 459, 462, 470], "cryodrgn": 410, "sidesplitt": 410, "cryoassess": 410, "sphire": [410, 442], "cryolo": [410, 428, 462], "janni": 410, "phenix": [410, 483, 487, 488, 489, 490, 491, 492, 498, 499, 500, 510, 511, 512, 513, 514, 516, 517, 523, 545, 546], "emvalid": 410, "pre": [410, 468, 524], "fiduci": 410, "etomo": [410, 550], "novactf": [410, 549], "reliontomo": [410, 549], "3dctf": 410, "jesu": 410, "denois": [410, 550], "pyseg": [410, 549], "starfil": 410, "dynamo": [410, 462, 468, 549], "mra": 410, "vectori": [410, 547, 548], "catalogu": [410, 492, 547], "mapback": 410, "xmipp2": 410, "mltomo": 410, "deepfind": [410, 549], "cryocar": [410, 549], "acceler": [410, 453, 492, 494, 495, 496, 533, 541, 542], "signific": [410, 465, 479, 506, 534, 536], "reconstruct_signific": 410, "halv": 410, "restor": [410, 478, 507, 521, 523, 545], "contamin": 410, "nma_align": 410, "deepr": 410, "cours": [410, 414, 424, 434, 436, 437, 439, 441, 442, 457, 468, 487, 506, 547, 548], "bunch": [410, 450, 451], "stockholm": [410, 457], "montreal": 410, "board": 410, "3dfsc": 410, "cryoef": 410, "empiar": [410, 437, 439], "depositor": 410, "consult": 410, "powerfit": [410, 499], "maxshift": 410, "gl2d": [410, 451], "staff": [410, 425], "feedback": 410, "fitit": 410, "fly": [410, 453, 457, 551], "discrep": [410, 525], "merg": [410, 451, 460, 478, 493, 521, 545], "auxiliar": [410, 504], "boxer": [410, 547], "autopick": [410, 423], "ctf_auto": 410, "ref2d": 410, "bispectra": 410, "gold": [410, 547], "ctftilt": 410, "kmean": [410, 477], "resdir": 410, "monotomo": [410, 550], "intial": 410, "motioncor": [410, 452], "dosefgpu": 410, "nysbc": 410, "lmb": 410, "cam": 410, "crusso": 410, "locscal": 410, "isol": [410, 447, 509], "asymmetr": [410, 494, 496, 501, 508, 509, 510, 512, 513, 517, 519, 520, 532, 537, 545], "homologi": [410, 507, 535, 545, 546, 550], "atomstructutil": [410, 499, 510, 511, 518], "rigid": [410, 494, 507, 509, 510, 517, 521, 522, 539, 541, 545], "accomplish": [410, 501, 505, 507, 509, 512, 535], "refmac": [410, 500, 510, 512, 545, 546], "emring": [410, 511, 512, 513, 517, 545], "molprob": [410, 509, 511, 512, 513, 538, 539, 545, 546], "superpos": [410, 487, 510, 545], "1963": 410, "1460": 410, "1443": 410, "1366": 410, "sped": 410, "1810": 410, "1807": 410, "versatil": [410, 441], "1702": 410, "1748": 410, "motioncor1": 410, "igbmc": 410, "gempick": 410, "ctffind3": [410, 470], "1813": 410, "libtiff": 410, "4gb": 410, "serialem": 410, "1837": 410, "1401": [410, 517], "928": [410, 468], "minor": [410, 499], "strong": 410, "agil": 410, "stai": 410, "streamer": 410, "cryomethod": 410, "mcgill": 410, "selector": 410, "relion_image_handl": [410, 476], "phaseshift": 410, "downscal": [410, 547], "calibr": 410, "yep": 410, "rough": [410, 508], "coverag": [410, 487], "chart": 410, "expans": 410, "unblur": 410, "tif": [410, 470], "wrong": [410, 520, 530], "raw": [410, 414, 428, 453, 455, 468, 470, 505, 525, 534], "diagnosi": 410, "setofpartic": 410, "unfinish": 410, "create_project": 410, "schedule_project": 410, "edit_workflow": 410, "pc": [410, 438, 451], "ethan": 410, "msa": [410, 507, 535], "imagicprotmsa": 410, "substructur": 410, "subparticl": 410, "magdistort": 410, "distort": [410, 539], "agard": 410, "anisotrop": [410, 473, 478], "dose": [410, 436, 452, 453], "benefit": [410, 503], "cpu": [410, 414, 418, 428, 445, 449, 455, 460, 465], "opticalflow": 410, "ctffind4": [410, 414, 426, 427, 462], "alert": [410, 448], "microscopist": 410, "defoci": 410, "bibliograph": 410, "bibtext": 410, "favourit": [410, 434], "ag": [410, 471], "younger": [410, 471], "bluest": [410, 471], "zoom": [410, 453, 468, 473, 477, 478, 511, 512, 520, 547, 548], "pan": [410, 547, 548], "wheel": [410, 453, 468, 477, 524, 547, 548], "linear": [410, 477], "decreas": [410, 428, 547, 548], "propag": [410, 468, 470], "summovi": 410, "resmap": [410, 414, 426, 427, 462], "dendrogram": 410, "unus": 410, "bugfix": 410, "inprov": 410, "freez": 410, "hourglass": 410, "spawn": 410, "remote_mesa_lib": 410, "cleanup": 410, "dogpick": [410, 423, 470], "conquer": 411, "constraint": [411, 492], "rerun": [411, 477], "test_protocols_cistem_movi": 413, "testunblur": 413, "test_protocols_cistem": [413, 465], "testrefine2d": 413, "testfindparticl": 413, "testctffind4": [413, 465], "test_workflow_relion3": 413, "testworkflowrelion3betag": 413, "testrelion31importparticl": 413, "relion3testmultibodi": 413, "relion3testmotioncor": 413, "relion3testassignopt": 413, "tests_fold": 413, "test_fil": 413, "test_class_derived_from_basetest": 413, "cryosparc2": [413, 428], "testutil": 413, "test_protocols_cryosparc2": [413, 447], "testcryosparcsharppen": 413, "testcryosparcparticlessubtract": 413, "testcryosparcnonuniformrefine3d": 413, "testcryosparclocalrefin": 413, "testcryosparclocalctfrefin": 413, "testcryosparcglobalctfrefin": 413, "testcryosparcclassify2d": [413, 447], "testcryosparc3drefin": 413, "testcryosparc3dinitialmodel": 413, "testcryosparc3dclassif": 413, "shortest": [413, 468], "testsamplingrateconvert": 413, "000": [413, 492], "onlyclass": 413, "admin": [414, 427, 449], "ec2": [414, 415, 424], "extendedbetag": 414, "p2": 414, "gb": [414, 418, 428, 435, 455, 460, 465, 492], "secur": [414, 415, 428], "sg": [414, 460], "ip": [414, 415, 418, 421, 427, 428], "reboot": [414, 426, 427, 428, 449], "guacamol": 414, "pubkei": 414, "pub_ip": 414, "physic": [414, 421, 426, 427, 428, 468], "5s2": [414, 426, 427], "model_04_chimerafit": 414, "nvidia": [414, 426, 427, 428], "driver": [414, 426, 427, 428], "turbovnc": [414, 418, 426, 427, 428], "virtualgl": [414, 418, 426, 427], "novnc": [414, 418, 428], "feicours": 414, "relion13_tutori": [414, 453], "occupi": [414, 485, 532], "ireland": [414, 415], "eb": 414, "48": [414, 517], "44": [414, 468], "720": 414, "266": 414, "irrelev": [414, 468], "tax": 414, "enmr": 414, "westlif": [414, 418], "vo": 414, "iisa": [414, 418], "vm": [414, 415, 428], "12gb": 414, "cesnet": [414, 418], "ui": 414, "6h": 414, "cron": 414, "proxi": 414, "pusp": 414, "robot": 414, "dashboard": [414, 415, 428], "appdb": 414, "trainer": 414, "deploi": [414, 415, 424, 425, 429], "vmi": 414, "scipioncloud": [414, 415, 425, 551], "mit": 415, "amazon": [415, 424, 455], "easy_instal": 415, "jtrilei": 415, "dev": [415, 428, 459, 461, 481, 493, 494, 495, 496], "libffi": 415, "libssl": [415, 459], "academ": [415, 424, 428, 472, 507, 535, 551], "cli": 415, "87": [415, 517], "quit": [415, 429, 455, 468, 477, 485, 487, 489, 490, 491, 494, 495, 496, 503, 505, 507, 508, 509, 510, 517, 520, 522, 523, 532, 533, 535, 541, 542], "quickstart": 415, "_t2": 415, "medium_": 415, "scipionclust": 415, "balanc": [415, 527], "default_templ": 415, "enable_experiment": 415, "aws_access_key_id": 415, "aws_secret_access_kei": 415, "aws_user_id": 415, "credenti": [415, 449], "xxxxxxxxxxxx": 415, "xxxxxxxxxxxxxxxxxxxxxx": 415, "xxxxxxxxx": 415, "aws_region_nam": 415, "aws_region_host": 415, "amazonaw": 415, "keypair": 415, "key_loc": 415, "rsa": [415, 449], "keynam": 415, "cluster_s": 415, "prepent": 415, "dn": [415, 519, 528], "myclust": 415, "node001": 415, "dns_prefix": 415, "correspod": 415, "node_image_id": 415, "811e79f8": 415, "node_instance_typ": 415, "scipion_data": 415, "ip_protocol": 415, "from_port": 415, "to_port": 415, "443": 415, "sshmaster": 415, "listclust": 415, "188": 415, "sc": 415, "49": [415, 506, 517], "uptim": 415, "vpc": 415, "8f99f4ea": 415, "subnet": 415, "36480d41": 415, "1a": 415, "98351812": 415, "99351813": 415, "volume_id": 415, "3be6f5c9": 415, "mount_path": 415, "workload": 415, "sun": 415, "loadbal": 415, "tun": 415, "minut": [415, 428, 435, 449, 477, 487], "suitabl": [416, 435, 456, 536], "clean_project": 416, "config_project": 416, "etern": 416, "mobrain": 417, "occi": 418, "65026": 418, "147": 418, "242": 418, "512": 418, "1947": 418, "trusti": 418, "tahr": 418, "swt": 418, "cloudadm": 418, "scipionweb": [418, 429], "106795": 418, "106": 418, "bioinfo": 418, "16ee53c4": 418, "97cc": 418, "4cd5": 418, "9475": 418, "b12a61b5b9c6": 418, "76": [418, 465, 517], "graphviz": 419, "apt": [419, 459, 461, 481, 514, 515], "acces": [421, 425], "scipionus": 421, "av": 421, "2222": 421, "instruct_project_1234": 421, "OF": 421, "inject": [421, 425, 427], "docker": 421, "unpack": [422, 503], "scon": [422, 459, 481], "throw": 422, "him": 422, "trfemp": 422, "fantast": 422, "opportun": [422, 492, 525], "market": 422, "paramiko": [422, 449], "__addmodul": 422, "decompress": 422, "tarfil": 422, "adequ": [422, 547], "pythonx": [422, 464], "trick": 422, "addmodul": 422, "python2": [422, 435], "obviou": [422, 430, 487, 538, 539], "seem": [422, 442, 453, 462, 468, 477, 485, 487, 489, 490, 491, 496, 509, 510, 512, 517, 520, 533], "sconscript": 422, "wasn": [422, 435], "panic": 422, "suppli": [422, 520, 526, 547, 548], "libsqlite3": [422, 481], "procedur": [422, 452, 453, 468, 474, 496, 505, 520, 524, 535, 546, 547, 548, 549], "cppflag": 422, "cflag": 422, "dsqlite_enable_update_delete_limit": 422, "autoconfigtarget": 422, "autoconfig": 422, "rebuilt": [422, 490, 491, 492, 495, 496], "makefil": 422, "sqlite_configur": 422, "sqlite_mak": 422, "imagin": [422, 430, 442], "explicit": 422, "extraact": 422, "con": 422, "supos": 422, "complic": [422, 445], "funni": 422, "proce": [422, 428, 430, 447, 461, 468, 474, 477, 547, 548], "philosophi": 422, "scipion_sconscript": 422, "cuda_sdk_path": 422, "cuda_lib_path": 422, "tradit": 422, "ij": 423, "imageplu": 423, "loader": 423, "jni": 423, "gallerydata": 423, "galleryjfram": 423, "particlepick": 423, "imagegener": 423, "turn": [423, 428, 445, 477, 478, 505, 528], "busi": 423, "particlepickerjfram": 423, "particlepickercanva": 423, "imageplusload": 423, "xmippimagewindow": 423, "scipiongalleryjfram": 423, "diamet": [423, 468], "autopickcommand": 423, "apdogpick": 423, "thresh": 423, "diam": 423, "apix": 423, "outputmicrographs04": 423, "micrographnam": 423, "convertcommand": 423, "pw_convert": 423, "000348_protsplitset": 423, "micrographs4": 423, "thank": [424, 547, 548], "horizon": [424, 425], "biggest": [424, 468], "innov": 424, "programm": 424, "financ": 424, "capac": [424, 425, 492], "leverag": 424, "fund": [424, 425], "themat": [424, 425], "demonstr": [424, 479, 520], "aspect": [424, 468, 477], "technologi": 424, "languag": [424, 445], "ro": 424, "crate": 424, "egi": [424, 427], "datahub": 424, "onedata": 424, "cloudif": 424, "ceitec": [424, 457], "masaryk": 424, "brno": [424, 457], "compet": 424, "brain": 424, "vre": 424, "aw": [424, 425, 455], "stand": [424, 493, 507, 508], "alon": [424, 487, 501, 538, 539], "gatewai": [424, 428], "commerci": [424, 428, 502, 551], "hesit": [424, 438, 481], "ca\u00f1o": 424, "ldelcano": 424, "seamless": 425, "disciplin": 425, "feder": 425, "synergi": 425, "moodl": 425, "grant": [425, 449, 472], "hardwar": [425, 492], "publickei": 425, "openstack": 425, "ifca": 425, "ri": 425, "commiss": 425, "857647": 425, "387": 426, "applianc": [427, 455], "8000": 427, "contextu": 427, "privileg": [427, 449], "packer": 427, "vglrun": 427, "freal": 427, "396": 427, "terminologi": 428, "sysadmin": 428, "g4dn": 428, "straight": [428, 439, 468, 477, 505], "awai": [428, 439], "advis": [428, 508, 549], "arbitrari": 428, "chmod": [428, 442, 449, 481], "600": 428, "pem": [428, 449], "78": [428, 517], "warm": 428, "poor": [428, 539], "91": [428, 435], "460": [428, 546], "anaconda3": [428, 481], "disappear": [428, 507, 509], "safe": 428, "insuffici": [428, 492], "practis": 428, "sdf": 428, "mkf": 428, "ext4": 428, "xvdf": 428, "price": [428, 470], "tb": [428, 487, 492], "bill": 428, "afterward": [428, 453, 509, 532, 547, 548], "compens": 428, "s3": 428, "glacier": 428, "cheaper": 428, "slowli": [428, 444], "beforehand": 428, "internet": [429, 455], "frontend": 429, "apach": 429, "gunicorn": 429, "pw_home": 429, "cfg": [429, 449], "mw": 429, "upcom": 429, "dive": 429, "vand": 429, "service_root": 429, "apache2": 429, "mkhttpd_conf": 429, "httpd": 429, "mkservice_conf": 429, "theori": [429, 479], "myfirstmap": 429, "myresmap": 429, "ribomovi": 429, "bounc": 429, "deploy": 429, "anywher": 429, "crunchi": 429, "fs1": 429, "never": [430, 435, 464], "_samplingr": 430, "_acquisit": 430, "_magnif": 430, "sake": [430, 437], "persistsetofparticl": 430, "mysetoflegoparticl": 430, "flatmapp": 430, "legoparticl": 430, "lego": 430, "c9": 430, "thee": 430, "c2": [430, 485, 489, 502, 505, 512], "000002_protimportparticl": 430, "cx": 430, "label_properti": 430, "column_nam": 430, "c00": 430, "note1": 430, "c06": 430, "_hasctf": 430, "_align": 430, "align_non": 430, "_isphaseflip": 430, "_isamplitudecorrect": 430, "_firstdim": 430, "sqllite": 430, "myparticl": 430, "retrievesetofparticl": 430, "1234": 430, "polyhedron": 432, "magnitud": [432, 449], "360": [432, 536], "c7": 432, "perpendicular": [432, 528, 534], "dnx": 432, "d7x": 432, "dny": 432, "d7y": 432, "t222": [432, 528], "tz3": 432, "yz": [432, 519], "5773502": 432, "i222": [432, 519, 528], "xz": 432, "heymman": 432, "i222r": [432, 519, 520, 528], "in25": [432, 519, 528], "5fold": 432, "vertex": [432, 528], "minu": 432, "in25r": [432, 519, 528], "i2n3": [432, 519], "i2n3r": [432, 519], "varieti": 433, "watch": [433, 450, 475], "video": [433, 434, 436, 437, 439, 441, 442, 468, 475, 492, 547, 548, 550], "slide": [433, 442, 534, 536, 547, 548], "exercis": [433, 434, 445, 508], "course1_exbas": 434, "wand": [434, 468], "hola": 434, "mundo": 434, "magnifi": [434, 468, 548], "glass": 434, "conclus": [434, 487, 509, 512, 513, 547, 548], "stuck": 434, "consecut": [434, 488, 503, 519], "practice1": 434, "practiceday1": 434, "mygroup": 434, "reopen": [434, 442], "checkout": [434, 437, 438, 439, 442], "course1_ex1": 434, "coher": [434, 468], "dlg": 434, "myoper": 434, "ciao": 434, "mondo": 434, "course1_ex2": 434, "attributevalu": 434, "mypluginprefixhelloworld": [434, 436, 441], "course1_ex3": 434, "operand": [434, 438], "operand1": [434, 438], "divis": 434, "course1_ex4": 434, "operand2": [434, 438], "course1_ex5": 434, "greetingsstep": 434, "calculatestep": 434, "param_nam": 434, "course1_ex6": [434, 438], "listen": 435, "samplinginterv": 435, "monitortim": 435, "_notifi": 435, "printnotifi": 435, "initloop": 435, "break": [435, 437, 452, 498], "addnotifi": 435, "intention": 435, "myfacil": 435, "space_monitor": 435, "spacemonitor": 435, "disk_usag": 435, "activest": 435, "recip": 435, "577972": 435, "_ntuple_diskusag": 435, "namedtupl": 435, "statvf": 435, "f_bavail": 435, "f_frsize": 435, "f_block": 435, "f_bfree": 435, "expos": [435, 449, 464], "protmonitorspac": 435, "test_monitor": 435, "testmonitor": 435, "getcwd": 435, "detach": 435, "june_2018_cours": 435, "b9d0e37": 435, "run_test": 435, "245527773184": 435, "127268225024": 435, "105763827712": 435, "easiest": [435, 449, 456, 468], "tdd": 435, "mkdtemp": 435, "fnstoragefil": 435, "getstoragefilepath": 435, "asserttru": [435, 438, 447], "num_lin": 435, "assertequ": [435, 447], "traceback": 435, "pablo": [435, 454, 546], "desarrollo": [435, 454], "unittest": [435, 447], "329": 435, "testmethod": 435, "attributeerror": 435, "storeusagedata": 435, "space_usag": 435, "usagedata": 435, "fhstorag": 435, "tuse": 435, "tfree": 435, "workingfold": 435, "protmonitor": 435, "protocol_monitor": 435, "version_2_0": 435, "_lastupdatevers": 435, "hardli": 435, "someon": 435, "_paramlist": 435, "minimumfreespac": 435, "_sendmailparam": 435, "createemailnotifi": 435, "secondli": [435, 509, 511, 513], "emailnotifi": 435, "react": 435, "freegb": 435, "1024": 435, "bellow": 435, "touch": [435, 441, 442, 456, 547], "tmpfolder": 435, "freespac": 435, "diskusag": 435, "freespaceingb": 435, "foor": 435, "floor": 435, "testnotifi": 435, "getnotif": 435, "_notif": 435, "todai": 435, "test_spacemonitor_protocol": 435, "spacemon": 435, "txtpath": 435, "lambda": [435, 533], "2019": [435, 449, 451, 499, 508, 541, 546], "584fbfa": 435, "185": [435, 546], "83": [435, 517], "tmptrim1": 435, "217": 435, "186": 435, "000002_protmonitorspac": 435, "27553": 435, "27555": 435, "27562": 435, "27563": 435, "304": 435, "099": 435, "_prerequisit": 436, "_queueparam": 436, "previouscount": 436, "118": [436, 509], "imposs": [437, 481], "ahead": [437, 506, 507, 535], "artifici": [437, 533], "protocolo": 437, "inth": 437, "ftplib": 437, "status_new": 437, "empiardownload": [437, 439], "_outputclassnam": 437, "registeredfil": 437, "_stepschecksec": 437, "entryid": 437, "10200": 437, "ideal": [437, 505, 512, 525, 537, 538, 539], "amountofimag": 437, "_store": 437, "readxmlstep": 437, "hasattr": 437, "readxmlfromempiar": 437, "empiarxmlurl": 437, "xmlfile": 437, "allow_redirect": 437, "decod": [437, 449], "empiarnam": 437, "correspondingauthor": 437, "corresponding_author": 437, "depositiond": 437, "deposition_d": 437, "imageset": 437, "released": 437, "release_d": 437, "datasets": 437, "dataset_s": 437, "pixel_width": 437, "dataformat": 437, "data_format": 437, "downloadimagesstep": 437, "_gettmppath": 437, "downloadimagesfromempiar": 437, "downloadfold": 437, "finalfold": 437, "world_avail": 437, "imagescount": 437, "nlst": 437, "fileabspath": 437, "fhandl": 437, "wb": 437, "flush": 437, "retrbinari": 437, "retr": 437, "smarter": 437, "readxmlfil": 437, "downloadimag": 437, "closeset": 437, "_addmovietooutput": 437, "newimag": 437, "chanc": 437, "dirti": 437, "3a": 437, "_step": 437, "insertallstep": 437, "3b": 437, "writen": 438, "devcours": 438, "14159265359": 438, "test_protocol_mycalcul": 438, "testprotocolmycalcul": 438, "op1": 438, "op2": 438, "1e": [438, 450], "auxiliari": [438, 468, 509, 524], "testmultipli": 438, "course1_test": 438, "dropdown": [439, 477], "breakpoint": 439, "protocol_empiar_download": 439, "py_protocol_run": 439, "__name__": 439, "000353_empiardownload": [439, 445], "frequent": [439, 550], "familiar": [441, 442, 445, 468, 477, 492], "tiltseri": 441, "course5_exbas": 442, "protocol_run_myprogram": 442, "myprogram_hom": 442, "myprogram": 442, "v1_0": 442, "homevar": 442, "pathvar": 442, "_definevari": 442, "example_script": 442, "sh": [442, 445, 461, 481], "bash": [442, 459, 460, 461], "myprogram_v1": 442, "congratul": [442, 547, 548], "course5_ex1": 442, "recognis": 442, "pyworklow": 442, "explor": [442, 473, 485, 547], "miniconda3": [442, 461], "conda_activation_cmd": 442, "myprog_env_activ": 442, "myprogenv": 442, "getdepend": 442, "condaactivationcmd": 442, "getmyprogenvactiv": 442, "scipionhom": 442, "definevari": 442, "void": 442, "is_instal": 442, "did": [442, 474, 510, 513, 517, 547, 548], "luck": 442, "went": 442, "course5_ex5": 442, "brave": 442, "memcheck": 444, "invalid": 444, "cachegrind": 444, "callgrind": 444, "massif": 444, "helgrind": 444, "drd": 444, "mc": 444, "uninitialis": 444, "dealloc": 444, "redirect": 444, "cg": 444, "potenti": [444, 478, 507, 535, 536, 542], "cg_annot": 444, "spent": 444, "kcachegrind": 444, "depict": [444, 475, 512, 513, 520, 547, 548], "overview": [444, 449, 524], "evei": 444, "heap": 444, "ms_print": 444, "slower": [444, 460, 547, 548], "hg": 444, "aris": 444, "race": 444, "deadlock": 444, "misus": 444, "pthread": 444, "mutex": 444, "unreproduc": 444, "crash": 444, "misbehaviour": 444, "multithread": 445, "collector": 445, "interrupt": 445, "10m": 445, "gather": [445, 449, 524], "popular": 445, "cprofil": 445, "line_profil": 445, "granular": 445, "standalon": [445, 468], "hotspot": 445, "amplxe_runtool_opt": 445, "altstack": 445, "pythonunbuff": 445, "tick": 445, "chose": [445, 468, 477, 547, 548], "realiti": 445, "situat": [445, 452], "land": 445, "timelin": 445, "unwrap": 445, "caller": 445, "calle": 445, "__findtreeloc": 445, "consumpt": 445, "altogeth": [445, 462], "reader": 445, "drupal": 446, "teach": 447, "precaut": 447, "portabl": 447, "lastli": 447, "fixtur": 447, "datasetnam": 447, "xmipp_tutori": 447, "partfolderpath": 447, "bpv_": 447, "testcryosparc2d": 447, "protimportpart": 447, "filespath": [447, 452, 453], "filespattern": [447, 452], "lunch": 447, "partpattern": 447, "protcryo2d": 447, "doctf": 447, "maskdiametera": 447, "340": 447, "numberofclass": 447, "numberonlineemiter": 447, "compute_use_ssd": 447, "cryosparcprot": 447, "_runcryosparcclassify2d": 447, "_checkassert": 447, "cryosparcprotgpu": 447, "classify2d": 447, "explanatori": 447, "assertfals": 447, "asserti": 447, "assertisnon": 447, "assertin": 447, "flavour": 448, "analyt": 448, "scipionbox": [448, 449, 451], "lasthtmlreport": [448, 451], "3000": [448, 449, 451], "influxdb": 448, "agent": 449, "starter": 449, "influxdata": 449, "metric": 449, "lightweight": 449, "influx": 449, "devconnect": 449, "debian": [449, 459], "_intern": 449, "password1": 449, "scipion_writ": [449, 509, 524], "password2": 449, "scipion_read": 449, "password3": 449, "certif": 449, "telegraf": 449, "authent": 449, "auth": 449, "ssl": 449, "certtool": 449, "privkei": 449, "2048": 449, "cert": 449, "owner": 449, "chown": 449, "systemctl": 449, "unsafessl": 449, "8086": 449, "ON": 449, "TO": [449, 474], "host_withinflux": 449, "yy": 449, "zz": 449, "openssl": [449, 459], "genrsa": 449, "req": 449, "csr": 449, "x509": 449, "365": 449, "signkei": 449, "crt": 449, "ownership": 449, "ini": [449, 509, 524], "http_addr": 449, "cert_fil": 449, "cert_kei": 449, "viewers_can_edit": 449, "grafana_host": 449, "firewal": 449, "tunnel": 449, "8888": 449, "ssh_host": 449, "datasourc": 449, "cooki": 449, "tl": 449, "oauth": 449, "xxxxx": 449, "12351": 449, "12352": 449, "12353": 449, "12354": 449, "12355": 449, "remote_path": 449, "puzzl": 449, "secret": 449, "emfacilities_hom": 449, "secret_templ": 449, "encrypt": 449, "casual": 449, "usernameinflux": 449, "aw5mbhv4dxnlcm5hbwu": 449, "passwordinflux": 449, "aw5mbhv4cgfzc3dk": 449, "hostinflux": 449, "verify_ssl": 449, "timezon": 449, "sftp": 449, "keyfilepath": 449, "transferusernam": 449, "id_rsa": 449, "keyfiletyp": 449, "dsa": 449, "authoris_kei": 449, "remotepath": 449, "usernameparamiko": 449, "dxnlcm5hbwvqyxjhbwlrbw": 449, "passwordparamiko": 449, "l2hvbwuvcm9izxj0by8uc3nol2lkx3jzyq": 449, "ulnb": 449, "public_html": 449, "hostparamiko": 449, "paramikohost": 449, "base64": 449, "naiv": 449, "hacker": 449, "myusernam": 449, "message_byt": 449, "ascii": 449, "base64_byt": 449, "b64encod": 449, "grafanahost": 449, "oyw5bsewz": 449, "scipion_project": [449, 452], "scipion_project_nam": 449, "scipion_dir": 450, "cp": [450, 460], "refreshbtn": 450, "placement": [450, 508, 510, 525], "lg": 450, "span": [450, 495], "glyphicon": 450, "div": 450, "clearfix": 450, "h1": [450, 519], "valign": 450, "wikimedia": 450, "wikipedia": 450, "7f": 450, "logo_cnb": 450, "120px": 450, "nbsp": 450, "quicker": 450, "dig": 450, "scipionvers": 450, "acquisitionlin": 450, "runlin": 450, "ctfdata": 450, "moviegaindata": 450, "systemdata": 450, "populatereport": 450, "addmict": 450, "addacquisit": 450, "addrun": 450, "addctfchart": 450, "addmoviegainchart": 450, "addsystemchart": 450, "\u00b5m": 450, "datat": 450, "rowvalu": 450, "voila": 450, "gone": 450, "report_html": 450, "_fitqual": 450, "starttim": 450, "tnow": 450, "projectdur": 450, "projectstatu": 450, "scipion_vers": 450, "FOR": 450, "refreshsec": 450, "ctfmonitor": 450, "prototol_monitor_ctf": 450, "cur": 450, "_tablenam": 450, "monitorctf": 450, "_databas": 450, "fetchal": 450, "idvalu": 450, "fitqual": 450, "yai": 450, "imgmicpath": 450, "micpath": 450, "imgpsdpath": 450, "psdpath": 450, "imgshiftpath": 450, "shiftplotpath": 450, "conn": 450, "canada": 451, "israel": 451, "australia": 451, "maluenda": [451, 546], "d75": 451, "882": 451, "894": 451, "paid": 451, "stabil": [451, 481], "configdict": 452, "protmotioncorr": 452, "uncontrol": 452, "data_fold": 452, "amp_contr": 452, "sph_ab": 452, "vol_kv": 452, "doseiniti": 452, "dose0": 452, "doseperfram": [452, 453], "dosef": 452, "gainfil": [452, 453], "datastream": 452, "43200": 452, "12h": 452, "conceptu": 452, "gotten": [452, 481], "inconveni": 452, "drawback": 452, "posterior": 452, "protmotioncor": 452, "doapplydosefilt": 452, "wherea": [452, 453, 481, 488, 490, 505, 519, 527, 529, 537], "inputmovi": 452, "ouputmovi": 452, "waitoutput": 452, "outputattributenam": 452, "checknotempti": 452, "5000": 452, "timestep": 452, "_loadprot": 452, "prot2": 452, "outputobject": 452, "_updateprotocol": 452, "motiocor2": 452, "protgctf": 452, "protctf2": 452, "inputmicrograph": 452, "43": [453, 517], "eventu": [453, 464], "paus": 453, "myacquisitionproject": 453, "cope": 453, "tediou": 453, "emploi": 453, "firstli": [453, 509, 511, 515, 547, 548], "screenshot": [453, 468], "anybodi": 453, "incom": 453, "resent": 453, "myacquisit": 453, "untouch": 453, "jmbfalconmovi": [453, 454], "caligula": 453, "coat": 453, "enclos": [453, 481], "anyfield": 453, "typevalu": 453, "cmdid": 453, "fourth": [453, 477], "mix": [453, 476, 550], "wherev": 453, "mydynamictpl": 453, "remind": 453, "sa": 453, "unset": [453, 460], "draft": 454, "simulate_acquisit": 454, "falcon_": 454, "microscope_stream": 454, "input_pattern": 454, "output_fold": 454, "virtualbox": 455, "oracl": 455, "motherboard": 455, "vdi": 455, "xrandr": 455, "wxh": 455, "1280x1024": 455, "slow": [455, 462, 492, 494, 495, 496, 541], "scipioncombin": [455, 507, 511, 512, 515, 520, 521, 522, 523], "acquisition_simul": 455, "subscrib": 456, "daili": [456, 492], "rutger": 457, "brunnswick": 457, "nj": 457, "juli": 457, "hybrid": [457, 477], "august": 457, "costa": 457, "rica": 457, "leed": 457, "bueno": 457, "air": 457, "septemb": 457, "embo": 457, "london": 457, "lisbon": 457, "februari": 457, "oregon": 457, "health": 457, "inext": 457, "florenc": 457, "nagoya": 457, "march": 457, "cic": 457, "biogun": 457, "june": 457, "octob": 457, "necen": 457, "leiden": 457, "melbourn": 457, "diamond": 457, "esrf": 457, "denmark": 457, "scilifelab": 457, "heidelberg": 457, "carsten": 457, "sasch": 457, "sara": 457, "butcher": 457, "helsinki": 457, "delft": 457, "birbeck": 457, "colleg": 457, "novemb": 457, "industri": [457, 472], "copenhagen": 457, "guillermo": 457, "montoya": 457, "decemb": [457, 547], "cen": 457, "munich": 457, "fei": 457, "portug": 457, "april": 457, "divers": 457, "nmr": [457, 506, 510], "utrecht": 457, "netherland": 457, "shanghai": 457, "ncpss": 457, "china": 457, "symposium": 457, "taipei": 457, "taiwan": 457, "sweden": 457, "diseas": 457, "cry": 457, "montevideo": 457, "uruguai": 457, "cento": [458, 459, 461], "your_scipion_hom": 458, "gnu": [458, 472], "mpi_includ": [458, 461, 464], "openjdk": [459, 481], "jdk": [459, 481], "libxft": 459, "libxext": 459, "libxml2": 459, "libreadline6": 459, "libquadmath0": 459, "libxslt1": 459, "libopenmpi": [459, 461, 481], "libxss": 459, "libgsl0": 459, "libx11": 459, "gfortran": 459, "libfreetype6": 459, "libfftw3": [459, 481], "libopencv": [459, 481], "curl": 459, "libbz2": 459, "libreadline7": 459, "libgsl": 459, "opensus": 459, "42": [459, 462], "zypper": 459, "gcc5": 459, "1_8_0": 459, "32bit": 459, "libxss1": 459, "libgfortran4": 459, "fortran": 459, "libfftw3_threads3": 459, "libopencv3_1": 459, "opencv": [459, 461, 481], "libjbig": 459, "opensuse42": 459, "libopencv3_3": 459, "fedora": 459, "yum": [459, 461], "libxml": 459, "libquadmath": 459, "libxslt": 459, "gsl": 459, "dnf": 459, "readlin": 459, "libgfortran": 459, "freetyp": 459, "fftw": 459, "scl": 459, "devtoolset": 459, "python27": 459, "parallel_command": 460, "job_nod": 460, "myproject": 460, "000162_protctffind": 460, "3162": 460, "submit_prefix": 460, "run178": 460, "178": 460, "submit_command": 460, "sbatch": 460, "job_script": 460, "cancel_command": 460, "scancel": 460, "job_id": 460, "check_command": 460, "squeue": 460, "qsub": 460, "qdel": 460, "qstatu": 460, "submit_templ": 460, "myslurmqueu": 460, "job_memori": 460, "megabyt": 460, "job_tim": 460, "120": [460, 546], "gpu_count": 460, "queue_for_job": 460, "job_hour": 460, "job_done_regex": 460, "queues_default": 460, "job_gpu": 460, "distinct": [460, 509, 520, 535], "job_nam": 460, "partit": 460, "job_queu": 460, "ntask": 460, "job_thread": 460, "mem": 460, "gre": 460, "job_command": 460, "tesla": 460, "geforc": 460, "quadro": 460, "eo": 460, "ppn": 460, "job_real_nod": 460, "cpus_per_nod": 460, "anticip": [460, 505, 509], "walltim": 460, "hh": 460, "job_mem": 460, "workdir": 460, "pbs_o_workdir": 460, "xmipp_in_queu": 460, "pbs_nodefil": 460, "job_nodefil": 460, "nproc": 460, "wc": 460, "nnode": 460, "uniq": 460, "pwd": 460, "cat": 460, "canceljob": 460, "qstat": 460, "mypbsqueu": 460, "polito": 460, "sge6": 460, "x64": 460, "pe": 460, "job_p": 460, "job_slot": 460, "h_rt": 460, "vf": 460, "job_max_mem": 460, "sgequeu": 460, "ort": 460, "gcc10": 461, "epel": 461, "libzstd": 461, "hdf5": [461, 481], "miniconda": 461, "wget": [461, 481], "anaconda": [461, 481], "pip3": 461, "scipioninstal": [461, 481], "noxmipp": [461, 481], "noask": 461, "bashrc": 461, "checkupd": 462, "cryolo_model": 462, "201910": 462, "202002_n63": 462, "cryolo_negstain_model": 462, "20190226": 462, "janni_model": 462, "20190703": 462, "xmippsrc": [462, 481], "07b1": 462, "safest": 463, "eman2_hom": 463, "pluginpackag": [463, 464], "printenv": [463, 464], "customis": 464, "everyon": 464, "excerpt": 464, "ccp4_home": [464, 514], "056": [464, 514, 524, 525, 542], "cistem_hom": 464, "nvcc": 464, "xmipp_cuda_bin": 464, "xmipp_cuda_lib": 464, "relion_cuda_bin": 464, "gautomatch_cuda_lib": 464, "gctf_cuda_lib": 464, "motioncor2_cuda_lib": 464, "mpi4pi": 464, "java_bindir": 464, "jar": 464, "javac": [464, 481], "jni_cpppath": 464, "enrich": 464, "enforc": 464, "argv": 464, "fallsback": 464, "forlder": 464, "protect": 464, "pythonuserbas": 464, "spirit": 465, "demand": [465, 544], "pyworkflowtest": 465, "test_object": 465, "testobject": 465, "test_mapp": 465, "test_data": 465, "test_convert_xmipp": 465, "test_workflow_spidermda": [465, 477], "fake": 465, "worm": 465, "hemoglobin": 465, "emxlib": 465, "test_protocols_emx": 465, "testemxbas": 465, "test_workflow_xmipp_ctf_consensu": 465, "testctfconsensu": 465, "1073": 465, "pna": 465, "1404330111": 465, "test_workflow_xmipp": [465, 477], "2640m": 465, "8ghz": 465, "8gb": 465, "test_workflow_mix": 465, "testmixedbpv": 465, "testmixedbpv2": 465, "test_workflow_mixed_larg": 465, "testmixedreliontutori": 465, "xeon": 465, "e5540": 465, "ghz": 465, "test_workflow_xmipp_rct": 465, "80ghz": 465, "test_protocols_import_micrograph": 465, "test_protocols_import_particl": 465, "test_protocols_import_volum": 465, "test_protocols_xmipp_m": 465, "testxmipppreprocessmicrograph": 465, "testxmippctfestim": 465, "testxmippextractparticl": 465, "test_protocols_xmipp_2d": 465, "testxmippcreatemask2d": 465, "testxmippapplymask2d": 465, "testxmippfilterparticl": 465, "test_protocols_relion": 465, "testrelionpreprocess": 465, "testxmippcl2d": 465, "testxmippprotcl2dalign": 465, "testxmippapplyalign": 465, "testxmipprotspectra": 465, "testxmippkerdensom": 465, "testrelionclassify2d": 465, "test_protocols_xmipp_3d": 465, "testxmippcreatemask3d": 465, "testxmippapplymask3d": 465, "testxmippfiltervolum": 465, "testxmipppreprocessvolum": 465, "test_workflow_initialvolum": 465, "testsignific": 465, "groel": 465, "asimov": 465, "testrelionclassify3d": 465, "tomo3d": [468, 548, 549], "tomosegmemtv": [468, 549], "xmipptomo": [468, 547, 548, 549], "tomoviz": [468, 547, 548, 549], "emantomo": [468, 547, 548, 549], "situ": 468, "10439": 468, "intact": 468, "p19": 468, "plate": [468, 501, 502, 546], "day_2_memb_seg_and_pyseg_dir_pick": 468, "clink": 468, "3dmod": 468, "wokflow": 468, "vale": [468, 488], "newest": [468, 481], "oldest": 468, "proceed": 468, "opposit": [468, 547, 548], "discontinu": 468, "risk": [468, 533], "subject": [468, 477], "robustli": 468, "slice": [468, 478, 505, 520, 526, 527, 528, 531, 532, 533, 534, 543, 547, 548], "orovid": 468, "th": 468, "lbl": 468, "variat": [468, 520, 524, 546], "promis": 468, "unconnect": 468, "smoothli": 468, "grater": 468, "annotatin": 468, "111171": 468, "10330": 468, "inact": 468, "resi": 468, "unfilt": [468, 533], "interpol": 468, "treatment": 468, "pint": 468, "artifact": [468, 538, 539], "graphmcf": 468, "mbgraphmcf": 468, "sight": 468, "remark": [468, 487, 488, 489, 490, 491, 506, 507, 508, 509, 510, 512, 513, 517, 520, 521, 522, 523, 524, 527, 534, 535, 538, 539, 542, 543], "said": [468, 492, 512], "volxel": 468, "margin": 468, "neighbour": 468, "330": 468, "smooth": [468, 478, 526, 538, 539, 547, 548], "snr": 468, "dens": 468, "mb_eu_dst": 468, "geodes": 468, "sinuos": 468, "objet": 468, "descriptor": 468, "largest": [468, 526], "geodesiclength": 468, "euclideanlength": 468, "minima": 468, "cut": [468, 525], "2370": 468, "rid": 468, "coincid": [468, 487, 519], "150\u00e5": 468, "fot": 468, "mesh": [468, 489, 490, 505, 508, 547, 548], "539": 468, "subvolum": 468, "600\u00e5": 468, "68\u00e5": 468, "tha": 468, "shit": 468, "6px": 468, "82\u00e5": 468, "60\u00e5": 468, "20\u00e5": 468, "300\u00e5": 468, "380\u00e5": 468, "28px": 468, "ico": 468, "ap": [468, 546], "tomodataview": 468, "intro": 468, "101": 468, "sta": 468, "_setofvolumes_": 469, "_setofmovies_": 470, "_setofparticles_": 470, "_volume_": 470, "_ctfmodel_": 470, "_setofmicrographs_": 470, "broken": [470, 505], "_copi": 470, "_micname_ctffind3": 470, "log_": 470, "_micnam": 470, "ctf_": 470, "similarli": [470, 501, 513, 547], "_micname_gctf": 470, "eman1": 470, "_info": 470, "json_": 470, "box_": 470, "_auto_": 470, "_x": 470, "coord_": 470, "downward": 470, "exchang": 470, "_setofclasses_": 470, "_itxx_data": 470, "star_": 470, "_particl": 470, "sqlite_": 470, "_imag": 470, "xmd_": 470, "img_untilt_": 470, "img_tilt_": 470, "img_untilt_01": 470, "img_untilt_02": 470, "img_tilt_01": 470, "img_tilt_02": 470, "abil": 470, "gpl3": 472, "3rd": 472, "licenc": 472, "blur": [473, 477, 478, 538, 539], "bandpass": [473, 478, 533], "diffus": [473, 478], "lut": [473, 478], "dismiss": [473, 478], "profus": 473, "confid": [473, 477, 484, 487, 490, 492, 493, 498, 538, 539, 547], "youtub": [475, 479], "lawe9droypi": 475, "youtu": 475, "627": 475, "faq": [476, 487, 515], "corr": 476, "awk": 476, "thicker": 477, "darker": 477, "taskbar": 477, "Its": [477, 538, 539], "ourselv": [477, 509], "testspiderworkflow": 477, "testxmippworkflow": 477, "possess": 477, "expens": 477, "underneath": 477, "trough": 477, "combo": 478, "projector": 478, "xyz": [478, 528], "bpv": 479, "scipion_tutorial_intro": 479, "scipion_tutorial_initialvolum": 479, "galactosidas": 479, "scipion_tutorial_betag": 479, "scipion_tutorial_relion": 479, "betagalactosidas": 479, "example_10248_scipion3": 479, "scipion_tutorial_sax": 479, "mismatch": 479, "localrec": 479, "ilca": 479, "scipion_tutorial_localrec": 479, "reconstrutedthewith": 480, "purifi": [480, 485], "dry": 481, "venv": 481, "virtualenv": 481, "ugli": 481, "h14c3975_1005": 481, "bz2": 481, "clang": 481, "experinc": 481, "widest": 481, "movie_optical_align": 481, "volume_homogen": 481, "h5py": 481, "libhdf5": 481, "strongi": 481, "incompat": [481, 490, 537, 538, 539], "libtiff5": 481, "recompil": 481, "xmipp_noconfig": 481, "xmippdev": 481, "explos": 481, "cxxflag": 481, "mfma": 481, "mavx2": 481, "m3dnow": 481, "fomit": 481, "o3": 481, "amd64": 481, "java_xxx": 481, "alphafold": [482, 483, 488, 489, 490, 491, 492, 493, 494, 495, 496, 550], "4487": [483, 493, 494, 495, 496, 514, 536, 537, 538, 539, 540, 541, 542], "upgrad": 483, "multim": [483, 492, 535], "inaccuraci": [483, 500], "strutur": 484, "amino": [484, 485, 492, 498], "jumper": [484, 485, 487, 492, 493, 494, 495, 496, 498, 546], "homolog": [484, 487, 492, 501, 502, 506, 535], "morph": [484, 491, 495, 498, 539], "onto": [484, 498], "dock": [484, 495, 498, 499, 509, 510, 513, 523, 545], "transmembran": 485, "tmem120a": 485, "adipocit": 485, "pain": 485, "anim": 485, "plant": 485, "homodim": [485, 487, 489], "reconstitut": 485, "nanodisc": 485, "rong": [485, 546], "xue": [485, 546], "2022": [485, 499, 546], "unbound": 485, "ligand": [485, 526], "seesaw": 485, "rocker": 485, "protom": [485, 488], "relativelli": 485, "343": 485, "solubl": 485, "cytosol": 485, "embed": 485, "bilay": 485, "devot": [485, 509], "transport": [485, 502], "dimer": [485, 487, 490], "fatti": [485, 546], "cofactor": 485, "coash": 485, "intracellular": 485, "funnel": 485, "caviti": 485, "monom": [485, 489, 490, 491, 492, 502, 509, 518, 535, 536], "cholesterol": 485, "flank": 485, "dissoci": 485, "deterg": 485, "31441": [485, 489, 490, 491], "7f3u": 485, "cra_a": [485, 487, 488, 489, 490, 491], "uniprotkb": [485, 503, 504, 507, 530], "q9bxj8": 485, "a0a024r4k9": [485, 487], "deduct": [485, 502], "alphafold2": [485, 488, 489, 490, 491, 493, 494, 495, 496, 498], "evan": [485, 487, 492, 546], "borrow": [485, 489], "tacan": [487, 488, 489, 490, 491, 498, 546], "isoform": [487, 488, 489, 490, 491, 498], "unsolv": 487, "remarc": 487, "card": 487, "appendix": [487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 521, 537, 542], "googl": [487, 490, 492], "colaboratori": [487, 492], "colab": [487, 488, 490, 491, 492], "chimera21": [487, 488, 489, 491, 492], "tumor": [487, 498], "necrosi": [487, 498], "authorship": 487, "coupl": [487, 492, 505, 513, 519, 527, 532, 534, 535], "pae": [487, 488, 489, 490, 492, 493], "reorient": [487, 489], "diametr": 487, "oppos": [487, 528], "linker": 487, "plddt": [487, 488, 492, 493], "ribbon": [487, 520], "disord": [487, 490, 491], "amber": [487, 492], "surpass": 487, "dont_minim": 487, "unrelax": 487, "gap": [487, 492, 495, 507], "adter": 487, "simultan": [487, 488, 490, 505, 507, 509, 532, 535, 537, 538, 539, 541], "fair": [487, 505, 512, 525], "slightli": [487, 505, 508, 520], "inter": 487, "superposit": [487, 540], "oligomer": 487, "twice": 487, "concern": [487, 488, 490, 492, 538, 539], "Of": [487, 506, 525], "idl": 487, "programmat": 487, "seyon": 487, "lddt": [488, 492, 493, 494, 495, 496], "70": [488, 493, 517], "remaind": [488, 490], "neutral": 488, "pink": [488, 489, 490, 491, 508, 509, 510, 512], "unstructur": 488, "shorter": [488, 496, 509], "interdomain": 489, "talk": [489, 513, 534, 547], "metion": 489, "databass": 489, "notebok": 490, "frontal": 490, "unpredict": 490, "adopt": [490, 537, 538, 539], "character": [490, 506, 535, 537, 538, 539], "conclud": [491, 505, 510, 520], "misss": 491, "deepmind": 492, "extent": 492, "alphanumer": 492, "hasn": 492, "oportun": 492, "blast": [492, 506, 546], "interrog": [492, 519, 520, 544], "cutoff": [492, 493, 519, 535, 536, 538, 539], "hit": [492, 535], "scipionwrit": [492, 507, 508, 509, 510, 511, 512, 513, 515, 520, 521, 522, 523, 535], "800": 492, "hmmer": 492, "uniref90": 492, "smallbfd": 492, "mgnifi": 492, "openmm": 492, "forcefield": 492, "mmseqs2": 492, "encourag": [492, 513, 544], "skip_all_msa": 492, "intrins": 492, "uncompress": 492, "prokaryot": 492, "eukaryot": 492, "selecct": 492, "run_alphafold": 492, "seek": [492, 501, 506], "desappear": 492, "rigth": 492, "alphafold21_predict_colab": 492, "jpynb": 492, "suces": 492, "indep": 492, "uncommon": [492, 505], "uniprot_id": 492, "best_model": 492, "best_model_pa": 492, "iptm": 492, "ptm": 492, "a0a6m1q2m6": 492, "predicted_model_": 492, "addtion": 492, "rosettafold": [493, 494, 495, 496], "baek": [493, 494, 495, 496, 546], "process_predicted_model": 493, "rmsd": [493, 510, 511, 512, 517, 540], "backbon": [493, 501, 537, 538, 539], "mistak": [493, 538, 539], "empir": [493, 533], "nxn": 493, "fluctuat": 493, "closest": [493, 506], "domain_s": 493, "syntaxi": [493, 494, 495, 496], "ouputpdb": [493, 494, 495, 496, 518, 525, 529, 541], "version_doc": [493, 494, 495, 496], "4380": [493, 494, 495, 496], "dock_predicted_model": 494, "restraint": [494, 509, 537, 538, 539, 546], "appendic": [494, 499, 503, 504, 514, 522], "uncertain": 494, "trim": 494, "unfit": [494, 541], "rebuild_predicted_model": 495, "restrain": 495, "strectch": 495, "contribut": [495, 505, 513], "dock_and": 496, "_rebuild": 496, "dock_and_rebuild": 496, "goood": 496, "heavi": 498, "sole": 498, "primari": [498, 536, 547], "prelud": [498, 545], "ion": [498, 502], "singular": 499, "rapid": 500, "haemoglobin": [501, 503, 513, 545, 546], "tetram": 501, "mechanist": [501, 513], "inhibitor": 501, "drug": 501, "khoshouei": [501, 502, 546], "2\u00e5": [501, 502], "volta": [501, 502], "fortun": 501, "undergo": 501, "decad": 501, "revolut": 501, "suffici": 501, "rule": [501, 505, 508, 510, 520], "5\u00e5": [501, 536], "4\u00e5": 501, "recruit": 501, "asu": [501, 505], "novo": [501, 506, 507, 516], "reciproc": [501, 509, 525], "forbidden": 501, "steric": [501, 512, 537, 538, 539], "metalloprotein": 502, "hgb": [502, 503, 504, 506, 507, 508, 509, 510, 512, 513], "iron": 502, "aerob": 502, "reaction": 502, "blood": 502, "vertebr": 502, "1960": [502, 546], "perutz": [502, 546], "alongsid": 502, "myoglobin": 502, "emblemat": 502, "promin": 502, "heterotetram": 502, "globular": 502, "polypeptid": [502, 503, 507], "prosthet": 502, "heme": [502, 507, 508, 509, 510, 517], "fe": 502, "heterocycl": 502, "ring": 502, "porphyrin": 502, "ferrou": 502, "nonfunct": 502, "oxid": 502, "ferric": 502, "methgb": [502, 505, 508, 509, 510, 511, 512, 513], "3488": [502, 503, 512, 513, 517], "5ni1": [502, 506, 509, 510, 511, 512, 513, 517], "mart": [502, 546], "\u00ed": [502, 503, 505, 533, 546], "significantli": [503, 512], "sharp": [503, 538, 539], "localdeblur": [503, 509, 533], "rez": [503, 505, 533, 546], "sanchez": [503, 505, 527, 546], "garcia": [503, 505, 527, 546], "deblur": [503, 505, 545], "p69905": [503, 504], "p68871": [503, 504], "sp": 503, "hba_human": [503, 504], "mvlspadktnvkaawgkvgahageygaealermflsfpttktyfphfdlshgsaqvkghg": 503, "kkvadaltnavahvddmpnalsalsdlhahklrvdpvnfkllshcllvtlaahlpaeftp": 503, "avhasldkflasvstvltskyr": 503, "hbb_human": [503, 504], "mvhltpeeksavtalwgkvnvdevggealgrllvvypwtqrffesfgdlstpdavmgnpk": 503, "vkahgkkvlgafsdglahldnlkgtfatlselhcdklhvdpenfrllgnvlvcvlahhfg": 503, "keftppvqaayqkvvagvanalahkyh": 503, "cdna": 503, "retro": 503, "transcrib": 503, "messeng": 503, "rna": [503, 530], "mrna": 503, "unlik": [503, 509, 525, 533, 547, 548], "methionin": [503, 509], "trna": 503, "terminu": 503, "matur": 503, "reffer": 504, "orig": [504, 543], "goddard": [504, 546], "exception": [505, 511, 538, 539], "tap": [505, 526, 536, 537, 538, 539], "morpholog": [505, 526], "morphologi": 505, "evid": [505, 520], "botton": [505, 520], "corrobor": 505, "absent": [505, 513], "perfectli": [505, 508, 509, 511, 512, 520], "life": [505, 512], "unsharpen": [505, 509, 527], "cyclic": [505, 519, 520, 528], "45\u00ba": 505, "radii": 505, "compris": [505, 537, 538, 539], "ancestri": 506, "necessarili": [506, 547], "nearest": [506, 509], "pearson": [506, 507, 546], "kryshtafovych": [506, 546], "recognit": 506, "ab": 506, "initio": 506, "altschul": [506, 546], "1997": [506, 546], "evolutionarili": 506, "unrel": 506, "45": [506, 517, 534], "antarct": [506, 546], "fish": [506, 507, 546], "pagothenia": 506, "bernacchii": [506, 546], "camardella": [506, 546], "1pbx": [506, 507], "question1": 506, "diffract": [506, 510, 517, 525], "algoritnm": 506, "multichain": [507, 535], "blundel": [507, 535, 546], "1993": [507, 535, 546], "pairwis": 507, "distantli": 507, "conserv": [507, 527], "mutant": 507, "evolutionari": 507, "equu": 507, "caballu": 507, "hors": 507, "oryctolagu": 507, "cuniculu": 507, "rabbit": 507, "meleagri": 507, "gallopavo": 507, "wild": 507, "turkei": 507, "aldabrach": 507, "gigantea": 507, "aldabra": 507, "giant": 507, "tortois": 507, "p01958": 507, "p01948": 507, "p83134": 507, "p02062": 507, "hbb": 507, "p02057": 507, "rabit": 507, "g1u9q8": 507, "melga": 507, "p83133": 507, "aldgi": 507, "pro": 507, "prolin": [507, 536, 538, 539], "seqview": 507, "hba_human_p69905": 507, "hetatm": [507, 518], "ga341": [507, 535], "zdope": [507, 535], "model_from_modeller_3_2_": 507, "chaina": 507, "selectedonli": [507, 510, 513, 520], "hgb_alpha_": [507, 508], "hgb_alpha_atom__struct_6_006815": 507, "006815": 507, "chainb": 507, "heme_b": 507, "hgb_beta_": 507, "model_numb": 507, "old_id": 507, "new_id": 507, "scipionss": [507, 515, 520, 521, 522, 523], "liebschner": [508, 541, 546], "placed_model": [508, 510], "fitmap": [508, 509, 510], "inmap": [508, 509, 510, 511, 523], "slight": [508, 526], "movement": [508, 539], "hgb_alpha_atom_struct_3_003753": 508, "003753": 508, "surf": 508, "reveal": 509, "emslei": [509, 524, 546], "afonin": [509, 510, 537, 538, 539, 542, 546], "vagin": [509, 525, 546], "crystallopgraph": [509, 524], "hgb_alpha_atom_struct__3_007124": 509, "controversi": [509, 510, 524], "misfit": [509, 517, 538, 539], "clarifi": 509, "densisti": 509, "51": [509, 534], "73": [509, 517], "142": [509, 517], "translation": 509, "repair": 509, "myvar": 509, "imol": [509, 524], "aa": [509, 524], "aanumb": [509, 524], "agre": 509, "disagre": [509, 510], "methbg": 509, "tyr": 509, "displac": [509, 539, 547, 548], "rotam": [509, 517, 524, 536, 537, 538, 539], "label1_hba_human": 509, "000xxx_cootrefin": 509, "real_space_refin": [509, 539], "hgb_alpha_atom_struct_3_007124": 509, "new_label_hba_human": 509, "cc": [509, 510, 511, 512, 517, 527, 537, 538, 539], "suscept": 509, "question2": 509, "question3": 509, "rearrang": 509, "question4": 509, "clash": [509, 513, 517, 519, 537, 538, 539], "ala": [509, 520, 542], "sel": 509, "5ni1_chaina_": [509, 510], "mutat": [509, 542], "5ni1_chaina_fitted_": [509, 510], "swapaa": 509, "5ni1_chaina_94_118_mutala_": 509, "comand": 509, "mmaker": 509, "bondlength": [509, 510, 517, 525], "question5": 509, "question6": 509, "question7": 509, "wonder": [509, 510, 513], "premis": [509, 534], "barad": [510, 536, 546], "davi": [510, 537, 546], "zwart": [510, 540, 546], "chi_": 510, "circ": 510, "pm60": 510, "lysin": 510, "tyrosin": 510, "strand": 510, "roll": [510, 536], "question8": 510, "cctbx": 510, "william": [510, 546], "question9": 510, "question10": 510, "uncorrel": 510, "suppress": 510, "pose": [510, 513], "pdbx": [510, 518, 540], "5ni1_chaina": 510, "validation_cryoem": [510, 511, 538], "overcom": 510, "worflow": 510, "worsen": 510, "regener": [511, 512, 520], "hba_refin": 511, "hbb_refin": 511, "asymmetric_unit_model_": 511, "question11": 511, "worst": [511, 512], "whole_model_": 512, "chains_c_d": 512, "neighbor": [512, 513, 519], "question12": 512, "blurri": [512, 520, 547, 548], "remnant": [512, 520], "obvious": 512, "aproxim": 512, "nomin": 512, "unexpect": 512, "onedep": 513, "mak": 513, "zip": 513, "bundl": [513, 515], "emd_3488_fsc": 513, "emd_3488": 513, "unfavour": 513, "penultim": 513, "chainab": 513, "chainab_": 513, "discrimin": [513, 520], "eugeniu": 514, "2998": [514, 536, 537, 538, 539, 540], "3549": [514, 517, 536, 537, 538, 539, 540], "3660": [514, 536, 537, 538, 539, 540, 541], "3874": [514, 536, 537, 538, 539, 540, 541, 542], "4158": [514, 536, 537, 538, 539, 540, 541, 542], "clustal": [514, 535], "omega": [514, 535], "clustalo": 514, "phenix_hom": 514, "scipionr": 515, "path_to_scipion3_plugin": 515, "flex": 515, "bison": 515, "map_to_model": 516, "buccan": 516, "x_rai": 517, "778": 517, "186172531458": 517, "348504275208": 517, "81328813": 517, "787": 517, "4282267700789": 517, "81007005253": 517, "805": 517, "474205806292": 517, "821341112742": 517, "3865": 517, "3441": 517, "0142": 517, "0165": 517, "bondangl": 517, "0081": 517, "9696": 517, "chirvolum": 517, "0844": 517, "3506": 517, "0137": 517, "0150": 517, "6843": 517, "8655": 517, "0783": 517, "4869": 517, "4855": 517, "4971": 517, "4825": 517, "0176": 517, "0212": 517, "0136": 517, "0193": 517, "9186": 517, "8053": 517, "2382": 517, "1112": 517, "1055": 517, "1470": 517, "1043": 517, "rfactor": 517, "whitout": 517, "86": [517, 546], "569": 517, "725": 517, "803": 517, "801": 517, "843": 517, "98": 517, "bond": [517, 525, 537, 538, 539], "0188": 517, "0183": 517, "0090": 517, "020": 517, "0191": 517, "0126": 517, "88": 517, "77": 517, "81": 517, "39": [517, 536], "841": 517, "447": 517, "456": 517, "414": 517, "524": 517, "690": 517, "776": 517, "765": 517, "767": 517, "830": 517, "mringer": 517, "0313": 517, "0169": 517, "0078": 517, "0117": 517, "92": 517, "89": 517, "935": 517, "495": 517, "470": 517, "494": 517, "808": 517, "789": 517, "840": [517, 546], "58": 517, "0187": 517, "0093": 517, "0182": 517, "0122": 517, "860": 517, "380": 517, "410": 517, "59": 517, "46": 517, "509": 517, "537": 517, "810": 517, "792": 517, "842": 517, "0076": 517, "0181": 517, "390": 517, "350": 517, "454": 517, "polymer": 518, "addchain": 518, "unfavor": 519, "asign": 519, "h2": 519, "h3": 519, "h4": 519, "tx1": 519, "3\u00e5": [519, 525, 542], "tetrahedr": [519, 528], "octahedr": [519, 528], "eight": 519, "cgl": 519, "ucsf": [519, 546], "222r": [519, 528], "n25": [519, 528], "n25r": [519, 528], "2n3": 519, "2n3r": 519, "i2n5": 519, "2n5": 519, "i2n5r": 519, "2n5r": 519, "z3": 519, "interatom": 519, "unmodel": 520, "minuend": 520, "subtrahend": 520, "contour": [520, 524, 537, 538, 539], "molmap_map": 520, "sustrahend": 520, "cautiou": 520, "downstream": [520, 524], "zone_map": 520, "filtered_map": 520, "difference_map": 520, "acord": 520, "mutated_atom_structur": 520, "ouput": 520, "penton": 520, "adenoviru": [520, 546], "hadv": 520, "f41": 520, "10768": 520, "p\u00e9rez": [520, 546], "illana": [520, 546], "showoutlin": 520, "transpar": 520, "6yba": 520, "cartoon": 520, "renmant": 520, "molmap_chainm_map": 520, "c5": 520, "6b1t": 520, "hexon": 520, "oputput": 520, "densit": 520, "inconspicu": 520, "presum": [520, 542, 547], "output_volum": 520, "6b1t_chainx": 520, "proxim": 520, "idem": [520, 523, 524, 528], "prejudic": [521, 522, 523], "n1": [521, 522, 523], "n2": [521, 522, 523], "n3": [521, 522, 523], "my_favorite_model_": 521, "userstring_": [522, 523], "recomend": [522, 523, 527], "late": 522, "inactiv": 523, "map_nam": 523, "atom_struct_nam": 523, "acronym": [524, 530], "brown": [524, 525, 546], "diminish": 524, "00xxxx_cootrefin": 524, "aa_main_chain": 524, "aa_auxiliary_chain": 524, "coot_xxxxxx_imol_yyyy_version_zzzz": 524, "xxxxxx": 524, "yyyi": 524, "zzzz": 524, "backward": 524, "ramachandran": [524, 537, 538, 539], "output3dmap_xxxx": 524, "kovalevskii": [525, 546], "particullarli": 525, "scattter": 525, "electr": 525, "ioniz": 525, "sfcalc": 525, "mapradiu": 525, "mradiu": 525, "025": [525, 533], "nonbond": 525, "disminish": 525, "crystallograph": 525, "frac": 525, "f_o": 525, "f_c": 525, "fsc_": 525, "generalis": 525, "cruickshank": 525, "cosin": [525, 526], "uncertainti": 525, "thermal": 525, "fom": 525, "llfree": 525, "rmsbond": 525, "coval": 525, "zbond": 525, "rmsangl": 525, "zangl": 525, "rmschiral": 525, "chiral": 525, "piramid": 525, "dalton": 526, "dilat": 526, "eros": 526, "ouputmask": [526, 531], "preexist": 527, "apper": 527, "unmask": 527, "accomod": 527, "fiber": 527, "sd": 527, "mapstat": 527, "subregion": 527, "equidist": 527, "invest": 527, "simoultan": 527, "deeppostprocess": 527, "radial": [528, 537], "nomenclatur": 528, "cristallographi": 528, "360\u00ba": 528, "dxn": 528, "analog": [528, 530], "face": 528, "six": 528, "baricent": 528, "90\u00ba": 528, "180\u00ba": 528, "inward": 528, "outward": 528, "ouputvolum": [528, 532, 533, 543], "q05769": 530, "pgh2_mous": 530, "prostaglandin": 530, "synthas": 530, "iupac": 530, "canon": 530, "uniprotid": 530, "unambigu": 530, "ouputsequ": 530, "dessign": [531, 543], "wouldn": 532, "map1": 532, "map2": 532, "emdbid": 532, "unnecessarili": 532, "broad": 533, "membran": [533, 534, 546, 550], "absenc": 533, "guarante": 533, "sharpenedmap_last": 533, "monogen": 534, "genet": 534, "fosfolipid": 534, "hypothesi": 534, "67": 534, "resolution_volum": 534, "parirwise2": 535, "ilustr": 535, "hydrogen": [535, 537, 538, 539], "inclus": 535, "heteroatom": [535, 537], "n_initi": 535, "n_final": 535, "user_defined_name_": 535, "greeen": 535, "model_3_2_": 535, "q15116": 535, "q12lc89": 535, "aligned_2": 535, "blastprotein": 535, "blastp": 535, "5wt9": 535, "ringer": 536, "rotamer": 536, "binomi": 536, "5\u00ba": 536, "rescal": 536, "stablish": 536, "chi": [536, 537, 538, 539], "unusu": [537, 538, 539], "psi": [537, 538, 539, 546], "sidechain": [537, 538, 539], "chi1": [537, 538, 539], "chi2": [537, 538, 539], "clashscor": [537, 538, 539], "unsual": [537, 538, 539], "seriou": [537, 538, 539], "hang": 537, "clariti": 537, "tetrad": [537, 538, 539], "chilar": [537, 538, 539], "planar": [537, 538, 539], "asn": 537, "gln": 537, "harbor": 537, "favour": 537, "der": 537, "waal": 537, "twist": [537, 538, 539], "adp": [537, 539], "temperatur": [537, 539], "vibrat": 537, "isotrop": [537, 538, 539], "paramname1": [538, 539], "value1": [538, 539], "paramname2": [538, 539], "value2": [538, 539], "probe": [538, 539], "cablam": [538, 539], "mainchain": [538, 539], "25\u00e5": [538, 539], "cb": [538, 539], "certainli": [538, 539], "rhamachandran": [538, 539], "torsion": [538, 539], "strongest": [538, 539], "d99": [538, 539], "beyond": [538, 539], "negligibli": [538, 539], "biso": [538, 539], "d_model": [538, 539], "d_fsc_model_0": [538, 539], "d_fsc": [538, 539], "clahscor": 538, "superpose_pdb": [540, 546], "moving_structur": 540, "fixed_structur": 540, "densityprotocol": 542, "refiment": 542, "iterest": 542, "untrac": 542, "ouputatomstruct": 542, "samplig": 543, "ass": 543, "half_map_1": 544, "half_map_2": 544, "map_01": 544, "map_02": 544, "fsc_file_nam": 544, "mask_01": 544, "mask_02": 544, "atomic_structure_file_nam": 544, "symplifi": 544, "homologu": 545, "radjainia": 546, "danev": 546, "ryo": 546, "olta": 546, "nat": 546, "16099": 546, "jun": 546, "culli": 546, "muirhead": 546, "north": 546, "tructur": 546, "ourier": 546, "synthesi": 546, "4711": 546, "416": 546, "422": 546, "jim": 546, "\u00e9": 546, "cuervo": 546, "delcano": 546, "fonseca": 546, "garc": 546, "strelak": 546, "gim": 546, "isidro": 546, "ntegrat": 546, "odel": 546, "uild": 546, "oftwar": 546, "cipion": 546, "chem": 546, "inf": 546, "2533": 546, "2540": 546, "lui": 546, "josu": 546, "\u00f3": 546, "mez": 546, "jo": 546, "miguel": 546, "trev": 546, "joaquin": 546, "je": 546, "\u00fa": 546, "ernei": 546, "marta": 546, "mota": 546, "oscar": 546, "biorxiv": 546, "433284": 546, "arxiv": 546, "1101": 546, "jm": 546, "148296": 546, "meng": 546, "pettersen": 546, "couch": 546, "morri": 546, "ferrin": 546, "himera": 546, "eet": 546, "modern": 546, "curr": 546, "protoc": 546, "unit3": 546, "monastyrskyi": 546, "fide": 546, "moult": 546, "schwede": 546, "tramontano": 546, "valuat": 546, "casp": 546, "334": 546, "madden": 546, "schaffer": 546, "miller": 546, "lipman": 546, "3389": 546, "3402": 546, "caruso": 546, "avino": 546, "di": 546, "prisco": 546, "rutigliano": 546, "tamburrini": 546, "fermi": 546, "aemoglobin": 546, "agothenia": 546, "mino": 546, "equilibria": 546, "carbonmonoxi": 546, "224": 546, "449": 546, "ompar": 546, "satisfact": 546, "779": 546, "815": 546, "bunk": 546, "czi": 546, "croll": 546, "hintz": 546, "hung": 546, "jain": 546, "mccoi": 546, "moriarti": 546, "oeffner": 546, "poon": 546, "prisant": 546, "richardson": 546, "sammito": 546, "sobolev": 546, "stockwel": 546, "terwillig": 546, "urzhumtsev": 546, "videau": 546, "acromolecular": 546, "neutron": 546, "henix": 546, "861": 546, "lohkamp": 546, "scott": 546, "cowtan": 546, "eatur": 546, "486": 546, "501": 546, "apr": 546, "pavel": 546, "billi": 546, "randi": 546, "oleg": 546, "alexandr": 546, "crystallographica": 546, "531": 546, "544": 546, "s2059798318006551": 546, "steiner": 546, "lebedev": 546, "potterton": 546, "mcnichola": 546, "murshudov": 546, "chemic": 546, "guidelin": 546, "2184": 546, "2195": 546, "echol": 546, "wang": 546, "dimaio": 546, "fraser": 546, "emr": 546, "inger": 546, "943": 546, "946": 546, "murrai": 546, "w615": 546, "619": 546, "klaholz": 546, "ew": 546, "814": 546, "gross": 546, "kunstlev": 546, "headd": 546, "dei": 546, "verma": 546, "keedi": 546, "lewi": 546, "arendal": 546, "snoeyink": 546, "lovel": 546, "ol": 546, "robiti": 546, "ore": 546, "293": 546, "315": 546, "condezo": 546, "hernando": 546, "mangroo": 546, "adenovirus": 546, "adv": 546, "nichol": 546, "toot": 546, "ool": 546, "153": 546, "carlon": 546, "verview": 546, "215": 546, "pritzel": 546, "figurnov": 546, "ronneberg": 546, "tunyasuvunakool": 546, "bate": 546, "\u017e\u00eddek": 546, "potapenko": 546, "bridgland": 546, "meyer": 546, "kohl": 546, "ballard": 546, "cowi": 546, "romera": 546, "pared": 546, "nikolov": 546, "adler": 546, "petersen": 546, "reiman": 546, "clanci": 546, "zielinski": 546, "steinegg": 546, "pacholska": 546, "berghamm": 546, "bodenstein": 546, "silver": 546, "vinyal": 546, "senior": 546, "kavukcuoglu": 546, "kohli": 546, "hassabi": 546, "ighli": 546, "lpha": 546, "596": 546, "7873": 546, "583": 546, "jiang": 546, "guo": 546, "liu": 546, "tmem": 546, "coenzym": 546, "mediat": 546, "poke": 546, "han": 546, "baniasadi": 546, "pei": 546, "grishin": 546, "tu": 546, "elovl": 546, "elongas": 546, "lu": 546, "wen": 546, "shen": 546, "rep": 546, "110445": 546, "neill": 546, "alexand": 546, "natasha": 546, "antropova": 546, "andrew": 546, "tim": 546, "augustin": 546, "\u017e": 546, "dek": 546, "russ": 546, "sam": 546, "blackwel": 546, "jason": 546, "yim": 546, "olaf": 546, "sebastian": 546, "michal": 546, "alex": 546, "anna": 546, "kathryn": 546, "rishub": 546, "ellen": 546, "pushmeet": 546, "demi": 546, "rotein": 546, "463034": 546, "anishchenko": 546, "daupara": 546, "ovchinnikov": 546, "lee": 546, "cong": 546, "kinch": 546, "schaeffer": 546, "mill\u00e1n": 546, "park": 546, "glassman": 546, "degiovanni": 546, "pereira": 546, "rodrigu": 546, "dijk": 546, "ebrecht": 546, "opperman": 546, "sagmeist": 546, "buhlhel": 546, "pavkov": 546, "keller": 546, "rathinaswami": 546, "dalwadi": 546, "yip": 546, "burk": 546, "ccurat": 546, "373": 546, "6557": 546, "876": 546, "\u00bd": [547, 548, 549], "\u00bc": [547, 548, 549], "\u215b": [547, 548, 549], "\u00be": [547, 548, 549], "\u215c": [547, 548, 549], "\u215d": [547, 548, 549], "\u215e": [547, 548, 549], "\u00b5": [547, 548, 549], "\u03c9": [547, 548, 549], "\u00aa": [547, 548, 549], "\u00ba": [547, 548, 549], "\u00b9": [547, 548, 549], "\u00b2": [547, 548, 549], "\u00b3": [547, 548, 549], "valuabl": [547, 548], "worth": [547, 548], "earlier": [547, 548], "suspend": [547, 548], "vesicl": [547, 548], "ctlg": 547, "led": [547, 548], "setoftomogram": [547, 548], "prompt": [547, 548], "dtmslice": [547, 548], "pool": [547, 548], "rewrit": [547, 548], "neck": 547, "mitochondri": 547, "impart": [547, 548], "unchang": 547, "montag": [547, 548], "attract": [547, 548], "exterior": [547, 548], "posteriorli": [547, 548], "setofmesh": [547, 548], "softer": [547, 548], "triangl": [547, 548], "subdivis": 547, "lose": [547, 548], "unwant": [547, 548], "setofsubtomogram": [547, 548], "subtomomgram": [547, 548], "subtomo": [547, 548], "groupid": 547, "e2spt_boxer_conv": 547, "changebx": 547, "bead": 547, "applyal": 547, "e2spt_box": 547, "randomli": 547, "descent": 547, "shrink": 547, "subtl": 547, "ou": 548, "ellipsoid": 548, "setofcoordinates3d": 548, "webpag": 549, "reinstal": 549, "togheth": 549, "aretomo": 549, "emclar": 549, "novasta": 549, "apoferritin": 550, "sax": 550, "betatest": 550, "willing": 550, "hiv": 550, "hear": 551}, "objects": {"": [[2, 0, 0, "-", "pwem"], [87, 0, 0, "-", "pyworkflow"], [177, 0, 0, "-", "scipion"], [199, 0, 0, "-", "xmipp3"]], "pwem": [[2, 1, 1, "", "Config"], [2, 1, 1, "", "Domain"], [2, 1, 1, "", "Plugin"], [3, 0, 0, "-", "bibtex"], [4, 0, 0, "-", "constants"], [5, 0, 0, "-", "convert"], [12, 0, 0, "-", "emlib"], [2, 5, 1, "", "findFolderWithPattern"], [18, 0, 0, "-", "objects"], [21, 0, 0, "-", "protocols"], [62, 0, 0, "-", "utils"], [63, 0, 0, "-", "viewers"], [78, 0, 0, "-", "wizards"]], "pwem.Config": [[2, 2, 1, "", "CUDA_BIN"], [2, 2, 1, "", "CUDA_LIB"], [2, 2, 1, "", "EM_ROOT"], [2, 2, 1, "", "JAVA_HOME"], [2, 2, 1, "", "JAVA_MAX_MEMORY"], [2, 2, 1, "", "MAX_PREVIEW_FILE_SIZE"], [2, 2, 1, "", "MPI_BINDIR"], [2, 2, 1, "", "MPI_LIBDIR"], [2, 2, 1, "", "XMIPP_HOME"]], "pwem.Plugin": [[2, 3, 1, "", "defineBinaries"], [2, 3, 1, "", "defineBinariesMaxit"], [2, 3, 1, "", "getMaxitBin"], [2, 3, 1, "", "getMaxitHome"], [2, 3, 1, "", "getVersionFromPath"], [2, 3, 1, "", "getVersionFromVariable"], [2, 3, 1, "", "guessCudaVersion"]], "pwem.convert": [[6, 0, 0, "-", "atom_struct"], [7, 0, 0, "-", "headers"], [8, 0, 0, "-", "sequence"], [9, 0, 0, "-", "symmetry"], [10, 0, 0, "-", "transformations"], [11, 0, 0, "-", "utils"]], "pwem.convert.atom_struct": [[6, 1, 1, "", "AtomicStructHandler"], [6, 4, 1, "", "OutOfChainsError"], [6, 5, 1, "", "addScipionAttribute"], [6, 5, 1, "", "cifToPdb"], [6, 5, 1, "", "fromCIFToPDB"], [6, 5, 1, "", "fromCIFTommCIF"], [6, 5, 1, "", "fromPDBToCIF"], [6, 5, 1, "", "getEnviron"], [6, 5, 1, "", "partiallyCleaningFolder"], [6, 5, 1, "", "pdbToCif"], [6, 5, 1, "", "retry"], [6, 1, 1, "", "scipionMMCIFIO"], [6, 5, 1, "", "toCIF"], [6, 5, 1, "", "toPdb"]], "pwem.convert.atom_struct.AtomicStructHandler": [[6, 2, 1, "", "CIF"], [6, 2, 1, "", "PDB"], [6, 3, 1, "", "addStruct"], [6, 3, 1, "", "centerOfMass"], [6, 3, 1, "", "checkLabelInFile"], [6, 3, 1, "", "checkRead"], [6, 3, 1, "", "extractChain"], [6, 3, 1, "", "getBoundingBox"], [6, 3, 1, "", "getFullID"], [6, 3, 1, "", "getModelsChains"], [6, 3, 1, "", "getSequenceFromChain"], [6, 3, 1, "", "getStructure"], [6, 3, 1, "", "getStructureBFactorValues"], [6, 3, 1, "", "getTransformMatrix"], [6, 3, 1, "", "read"], [6, 3, 1, "", "readFromPDBDatabase"], [6, 3, 1, "", "readLowLevel"], [6, 3, 1, "", "renameChain"], [6, 3, 1, "", "renameChains"], [6, 3, 1, "", "renumberChain"], [6, 3, 1, "", "transform"], [6, 3, 1, "", "write"], [6, 3, 1, "", "writeAsCif"], [6, 3, 1, "", "writeAsPdb"]], "pwem.convert.headers": [[7, 1, 1, "", "Ccp4Header"], [7, 5, 1, "", "fixVolume"], [7, 5, 1, "", "getFileFormat"], [7, 5, 1, "", "setMRCSamplingRate"]], "pwem.convert.headers.Ccp4Header": [[7, 2, 1, "", "ORIGIN"], [7, 2, 1, "", "START"], [7, 3, 1, "", "cleanFileNameAnnotation"], [7, 3, 1, "", "computeSampling"], [7, 3, 1, "", "copyCCP4Header"], [7, 3, 1, "", "fixFile"], [7, 3, 1, "", "getCellDimensions"], [7, 3, 1, "", "getDims"], [7, 3, 1, "", "getGridSampling"], [7, 3, 1, "", "getHeader"], [7, 3, 1, "", "getISPG"], [7, 3, 1, "", "getNumberOfObjects"], [7, 3, 1, "", "getOrigin"], [7, 3, 1, "", "getSampling"], [7, 3, 1, "", "getStartAngstrom"], [7, 3, 1, "", "getStartPixel"], [7, 3, 1, "", "getXYZN"], [7, 3, 1, "", "isCompatible"], [7, 3, 1, "", "readHeader"], [7, 3, 1, "", "setCellDimensions"], [7, 3, 1, "", "setDims"], [7, 3, 1, "", "setGridSampling"], [7, 3, 1, "", "setHeader"], [7, 3, 1, "", "setISPG"], [7, 3, 1, "", "setMode"], [7, 3, 1, "", "setOrigin"], [7, 3, 1, "", "setSampling"], [7, 3, 1, "", "setStartAngstrom"], [7, 3, 1, "", "setStartPixel"], [7, 3, 1, "", "writeHeader"]], "pwem.convert.sequence": [[8, 1, 1, "", "SequenceHandler"], [8, 5, 1, "", "alignBioPairwise2Sequences"], [8, 5, 1, "", "alignClustalSequences"], [8, 5, 1, "", "alignMuscleSequences"], [8, 5, 1, "", "alphabetToIndex"], [8, 5, 1, "", "cleanSequence"], [8, 5, 1, "", "cleanSequenceScipion"], [8, 5, 1, "", "indexToAlphabet"], [8, 5, 1, "", "saveFileSequencesToAlign"], [8, 5, 1, "", "sequenceLength"]], "pwem.convert.sequence.SequenceHandler": [[8, 3, 1, "", "alignSeq"], [8, 3, 1, "", "appendFile"], [8, 3, 1, "", "downloadSeqFromDatabase"], [8, 3, 1, "", "getTypeFromFile"], [8, 3, 1, "", "readSequenceFromFile"], [8, 3, 1, "", "readSequencesFromFile"], [8, 3, 1, "", "saveFile"], [8, 3, 1, "", "saveFiles"]], "pwem.convert.symmetry": [[9, 1, 1, "", "Icosahedron"], [9, 5, 1, "", "getSymmetryMatrices"]], "pwem.convert.symmetry.Icosahedron": [[9, 3, 1, "", "coordinateSystemTransform"], [9, 3, 1, "", "get2foldAxis"], [9, 3, 1, "", "get3foldAxis"], [9, 3, 1, "", "getEdges"], [9, 3, 1, "", "getTriangles"], [9, 3, 1, "", "getVertices"], [9, 3, 1, "", "icosahedralMatrixTable"], [9, 3, 1, "", "icosahedralSymmetryMatrices"], [9, 3, 1, "", "icosahedronAngles"], [9, 3, 1, "", "icosahedronEdgeLength"], [9, 3, 1, "", "icosahedronGeometry"]], "pwem.convert.utils": [[11, 5, 1, "", "downloadPdb"], [11, 5, 1, "", "getSubsetByDefocus"]], "pwem.emlib": [[13, 0, 0, "-", "image"], [15, 0, 0, "-", "lib"], [16, 0, 0, "-", "metadata"]], "pwem.emlib.image": [[14, 0, 0, "-", "image_handler"]], "pwem.emlib.image.image_handler": [[14, 1, 1, "", "ImageHandler"]], "pwem.emlib.image.image_handler.ImageHandler": [[14, 3, 1, "", "addNoise"], [14, 3, 1, "", "applyTransform"], [14, 3, 1, "", "compareData"], [14, 3, 1, "", "computeAverage"], [14, 3, 1, "", "computeThumbnail"], [14, 3, 1, "", "convert"], [14, 3, 1, "", "convertStack"], [14, 3, 1, "", "createCircularMask"], [14, 3, 1, "", "createEmptyImage"], [14, 3, 1, "", "createImage"], [14, 3, 1, "", "existsLocation"], [14, 3, 1, "", "fixXmippVolumeFileName"], [14, 3, 1, "", "getDataType"], [14, 3, 1, "", "getDimensions"], [14, 3, 1, "", "getSupportedDataType"], [14, 3, 1, "", "getThumbnailFn"], [14, 3, 1, "", "getVolFileName"], [14, 3, 1, "", "invert"], [14, 3, 1, "", "invertStack"], [14, 3, 1, "", "isImageFile"], [14, 3, 1, "", "locationToXmipp"], [14, 3, 1, "", "read"], [14, 3, 1, "", "removeFileType"], [14, 3, 1, "", "rotateVolume"], [14, 3, 1, "", "scale2DStack"], [14, 3, 1, "", "scaleFourier"], [14, 3, 1, "", "scaleSplines"], [14, 3, 1, "", "truncateMask"], [14, 3, 1, "", "write"]], "pwem.emlib.metadata": [[17, 0, 0, "-", "utils"]], "pwem.emlib.metadata.utils": [[17, 1, 1, "", "Row"], [17, 1, 1, "", "RowMetaData"], [17, 1, 1, "", "SetMdIterator"], [17, 5, 1, "", "dropColumns"], [17, 5, 1, "", "getFirstRow"], [17, 5, 1, "", "getLabel"], [17, 5, 1, "", "getSize"], [17, 5, 1, "", "isEmpty"], [17, 5, 1, "", "iterRows"], [17, 5, 1, "", "joinBlocks"], [17, 5, 1, "", "keepColumns"], [17, 5, 1, "", "label2Python"]], "pwem.emlib.metadata.utils.Row": [[17, 3, 1, "", "addToMd"], [17, 3, 1, "", "clone"], [17, 3, 1, "", "containsAll"], [17, 3, 1, "", "containsAny"], [17, 3, 1, "", "containsLabel"], [17, 3, 1, "", "copyFromRow"], [17, 3, 1, "", "getObjId"], [17, 3, 1, "", "getValue"], [17, 3, 1, "", "getValueAsObject"], [17, 3, 1, "", "hasLabel"], [17, 3, 1, "", "printDict"], [17, 3, 1, "", "readFromFile"], [17, 3, 1, "", "readFromMd"], [17, 3, 1, "", "removeLabel"], [17, 3, 1, "", "setValue"], [17, 3, 1, "", "writeToFile"], [17, 3, 1, "", "writeToMd"]], "pwem.emlib.metadata.utils.RowMetaData": [[17, 3, 1, "", "containsLabel"], [17, 3, 1, "", "getValue"], [17, 3, 1, "", "read"], [17, 3, 1, "", "setValue"], [17, 3, 1, "", "write"]], "pwem.emlib.metadata.utils.SetMdIterator": [[17, 3, 1, "", "updateItem"]], "pwem.objects": [[19, 0, 0, "-", "data"], [20, 0, 0, "-", "data_tiltpairs"]], "pwem.objects.data": [[19, 1, 1, "", "Acquisition"], [19, 1, 1, "", "AtomStruct"], [19, 1, 1, "", "CTFModel"], [19, 1, 1, "", "Class2D"], [19, 1, 1, "", "Class3D"], [19, 1, 1, "", "ClassVol"], [19, 1, 1, "", "Coordinate"], [19, 1, 1, "", "DefocusGroup"], [19, 1, 1, "", "EMFile"], [19, 1, 1, "", "EMObject"], [19, 1, 1, "", "EMSet"], [19, 1, 1, "", "FSC"], [19, 1, 1, "", "FramesRange"], [19, 1, 1, "", "Image"], [19, 1, 1, "", "ImageDim"], [19, 1, 1, "", "Mask"], [19, 1, 1, "", "Matrix"], [19, 1, 1, "", "Micrograph"], [19, 1, 1, "", "Movie"], [19, 1, 1, "", "MovieAlignment"], [19, 1, 1, "", "MovieParticle"], [19, 1, 1, "", "NormalMode"], [19, 1, 1, "", "Particle"], [19, 1, 1, "", "PdbFile"], [19, 1, 1, "", "Sequence"], [19, 1, 1, "", "SetOfAtomStructs"], [19, 1, 1, "", "SetOfAverages"], [19, 1, 1, "", "SetOfCTF"], [19, 1, 1, "", "SetOfClasses"], [19, 1, 1, "", "SetOfClasses2D"], [19, 1, 1, "", "SetOfClasses3D"], [19, 1, 1, "", "SetOfClassesVol"], [19, 1, 1, "", "SetOfCoordinates"], [19, 1, 1, "", "SetOfDefocusGroup"], [19, 1, 1, "", "SetOfDefocusGroups"], [19, 1, 1, "", "SetOfFSCs"], [19, 1, 1, "", "SetOfImages"], [19, 1, 1, "", "SetOfMicrographs"], [19, 1, 1, "", "SetOfMicrographsBase"], [19, 1, 1, "", "SetOfMovieParticles"], [19, 1, 1, "", "SetOfMovies"], [19, 1, 1, "", "SetOfNormalModes"], [19, 1, 1, "", "SetOfPDBs"], [19, 1, 1, "", "SetOfParticles"], [19, 1, 1, "", "SetOfPrincipalComponents"], [19, 1, 1, "", "SetOfSequences"], [19, 1, 1, "", "SetOfVolumes"], [19, 1, 1, "", "Transform"], [19, 1, 1, "", "Volume"], [19, 1, 1, "", "VolumeMask"]], "pwem.objects.data.Acquisition": [[19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "getAmplitudeContrast"], [19, 3, 1, "", "getDoseInitial"], [19, 3, 1, "", "getDosePerFrame"], [19, 3, 1, "", "getMagnification"], [19, 3, 1, "", "getSphericalAberration"], [19, 3, 1, "", "getVoltage"], [19, 3, 1, "", "setAmplitudeContrast"], [19, 3, 1, "", "setDoseInitial"], [19, 3, 1, "", "setDosePerFrame"], [19, 3, 1, "", "setMagnification"], [19, 3, 1, "", "setSphericalAberration"], [19, 3, 1, "", "setVoltage"]], "pwem.objects.data.AtomStruct": [[19, 3, 1, "", "getOrigin"], [19, 3, 1, "", "getPseudoAtoms"], [19, 3, 1, "", "getVolume"], [19, 3, 1, "", "hasOrigin"], [19, 3, 1, "", "hasVolume"], [19, 3, 1, "", "setOrigin"], [19, 3, 1, "", "setPseudoAtoms"], [19, 3, 1, "", "setVolume"]], "pwem.objects.data.CTFModel": [[19, 2, 1, "", "DEFOCUS_RATIO_ERROR_VALUE"], [19, 2, 1, "", "DEFOCUS_V_MINIMUM_VALUE"], [19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "equalAttributes"], [19, 3, 1, "", "getDefocus"], [19, 3, 1, "", "getDefocusAngle"], [19, 3, 1, "", "getDefocusRatio"], [19, 3, 1, "", "getDefocusU"], [19, 3, 1, "", "getDefocusV"], [19, 3, 1, "", "getFitQuality"], [19, 3, 1, "", "getMicrograph"], [19, 3, 1, "", "getPhaseShift"], [19, 3, 1, "", "getPsdFile"], [19, 3, 1, "", "getResolution"], [19, 3, 1, "", "hasPhaseShift"], [19, 3, 1, "", "hasResolution"], [19, 3, 1, "", "setDefocusAngle"], [19, 3, 1, "", "setDefocusU"], [19, 3, 1, "", "setDefocusV"], [19, 3, 1, "", "setFitQuality"], [19, 3, 1, "", "setMicrograph"], [19, 3, 1, "", "setPhaseShift"], [19, 3, 1, "", "setPsdFile"], [19, 3, 1, "", "setResolution"], [19, 3, 1, "", "setStandardDefocus"], [19, 3, 1, "", "standardize"]], "pwem.objects.data.Class2D": [[19, 3, 1, "", "clone"], [19, 3, 1, "", "close"], [19, 3, 1, "", "copyInfo"]], "pwem.objects.data.Class3D": [[19, 2, 1, "", "REP_TYPE"], [19, 3, 1, "", "clone"], [19, 3, 1, "", "close"], [19, 3, 1, "", "copyInfo"]], "pwem.objects.data.ClassVol": [[19, 3, 1, "", "close"]], "pwem.objects.data.Coordinate": [[19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "getMicId"], [19, 3, 1, "", "getMicName"], [19, 3, 1, "", "getMicrograph"], [19, 3, 1, "", "getPosition"], [19, 3, 1, "", "getX"], [19, 3, 1, "", "getY"], [19, 3, 1, "", "invertY"], [19, 3, 1, "", "scale"], [19, 3, 1, "", "setMicId"], [19, 3, 1, "", "setMicName"], [19, 3, 1, "", "setMicrograph"], [19, 3, 1, "", "setPosition"], [19, 3, 1, "", "setX"], [19, 3, 1, "", "setY"], [19, 3, 1, "", "shiftX"], [19, 3, 1, "", "shiftY"]], "pwem.objects.data.DefocusGroup": [[19, 3, 1, "", "addCTF"], [19, 3, 1, "", "containsCTF"], [19, 3, 1, "", "getDefocusAvg"], [19, 3, 1, "", "getDefocusMax"], [19, 3, 1, "", "getDefocusMin"], [19, 3, 1, "", "getSize"]], "pwem.objects.data.EMFile": [[19, 3, 1, "", "getFileName"], [19, 3, 1, "", "setFileName"]], "pwem.objects.data.EMObject": [[19, 3, 1, "", "getFiles"]], "pwem.objects.data.EMSet": [[19, 3, 1, "", "clone"], [19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "copyItems"], [19, 3, 1, "", "create"], [19, 3, 1, "", "createCopy"], [19, 3, 1, "", "getFiles"]], "pwem.objects.data.FSC": [[19, 3, 1, "", "calculateResolution"], [19, 3, 1, "", "getData"], [19, 3, 1, "", "loadFromMd"], [19, 3, 1, "", "setData"]], "pwem.objects.data.FramesRange": [[19, 3, 1, "", "getFirstFrame"], [19, 3, 1, "", "getFirstFrameIndex"], [19, 3, 1, "", "getLastFrame"], [19, 3, 1, "", "getRange"], [19, 3, 1, "", "rangeStr"], [19, 3, 1, "", "setFirstFrame"], [19, 3, 1, "", "setFirstFrameIndex"], [19, 3, 1, "", "setLastFrame"]], "pwem.objects.data.Image": [[19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "copyLocation"], [19, 3, 1, "", "getAcquisition"], [19, 3, 1, "", "getBaseName"], [19, 3, 1, "", "getCTF"], [19, 3, 1, "", "getDataType"], [19, 3, 1, "", "getDim"], [19, 3, 1, "", "getDimensions"], [19, 3, 1, "", "getFileName"], [19, 3, 1, "", "getFiles"], [19, 3, 1, "", "getFormat"], [19, 3, 1, "", "getIndex"], [19, 3, 1, "", "getLocation"], [19, 3, 1, "", "getOrigin"], [19, 3, 1, "", "getSamplingRate"], [19, 3, 1, "", "getShiftsFromOrigin"], [19, 3, 1, "", "getTransform"], [19, 3, 1, "", "getXDim"], [19, 3, 1, "", "getYDim"], [19, 3, 1, "", "hasAcquisition"], [19, 3, 1, "", "hasCTF"], [19, 3, 1, "", "hasOrigin"], [19, 3, 1, "", "hasTransform"], [19, 3, 1, "", "originResampled"], [19, 3, 1, "", "setAcquisition"], [19, 3, 1, "", "setCTF"], [19, 3, 1, "", "setFileName"], [19, 3, 1, "", "setIndex"], [19, 3, 1, "", "setLocation"], [19, 3, 1, "", "setMRCSamplingRate"], [19, 3, 1, "", "setOrigin"], [19, 3, 1, "", "setSamplingRate"], [19, 3, 1, "", "setShiftsInOrigin"], [19, 3, 1, "", "setTransform"]], "pwem.objects.data.ImageDim": [[19, 3, 1, "", "getX"], [19, 3, 1, "", "getY"], [19, 3, 1, "", "getZ"]], "pwem.objects.data.Matrix": [[19, 3, 1, "", "getMatrix"], [19, 3, 1, "", "getObjValue"], [19, 3, 1, "", "setMatrix"], [19, 3, 1, "", "setValue"]], "pwem.objects.data.Micrograph": [[19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "getMicName"], [19, 3, 1, "", "setMicName"]], "pwem.objects.data.Movie": [[19, 3, 1, "", "getAlignment"], [19, 3, 1, "", "getDim"], [19, 3, 1, "", "getFramesRange"], [19, 3, 1, "", "getNumberOfFrames"], [19, 3, 1, "", "hasAlignment"], [19, 3, 1, "", "isCompressed"], [19, 3, 1, "", "setAlignment"], [19, 3, 1, "", "setFramesRange"]], "pwem.objects.data.MovieAlignment": [[19, 3, 1, "", "getRange"], [19, 3, 1, "", "getRoi"], [19, 3, 1, "", "getShifts"], [19, 3, 1, "", "setRoi"]], "pwem.objects.data.MovieParticle": [[19, 3, 1, "", "getFrameId"], [19, 3, 1, "", "getParticleId"], [19, 3, 1, "", "setFrameId"], [19, 3, 1, "", "setParticleId"]], "pwem.objects.data.NormalMode": [[19, 3, 1, "", "getCollectivity"], [19, 3, 1, "", "getModeFile"], [19, 3, 1, "", "getScore"], [19, 3, 1, "", "setCollectivity"], [19, 3, 1, "", "setModeFile"], [19, 3, 1, "", "setScore"]], "pwem.objects.data.Particle": [[19, 3, 1, "", "getClassId"], [19, 3, 1, "", "getCoordinate"], [19, 3, 1, "", "getMicId"], [19, 3, 1, "", "hasClassId"], [19, 3, 1, "", "hasCoordinate"], [19, 3, 1, "", "hasMicId"], [19, 3, 1, "", "scaleCoordinate"], [19, 3, 1, "", "setClassId"], [19, 3, 1, "", "setCoordinate"], [19, 3, 1, "", "setMicId"]], "pwem.objects.data.Sequence": [[19, 3, 1, "", "appendToFile"], [19, 3, 1, "", "exportToFile"], [19, 3, 1, "", "getAlphabet"], [19, 3, 1, "", "getDescription"], [19, 3, 1, "", "getId"], [19, 3, 1, "", "getIsAminoacids"], [19, 3, 1, "", "getSeqName"], [19, 3, 1, "", "getSequence"], [19, 3, 1, "", "importFromFile"], [19, 3, 1, "", "setDescription"], [19, 3, 1, "", "setId"], [19, 3, 1, "", "setSeqName"], [19, 3, 1, "", "setSequence"]], "pwem.objects.data.SetOfAtomStructs": [[19, 2, 1, "", "EXPOSE_ITEMS"], [19, 2, 1, "", "ITEM_TYPE"]], "pwem.objects.data.SetOfCTF": [[19, 2, 1, "", "ITEM_TYPE"], [19, 3, 1, "", "getMicrographs"], [19, 3, 1, "", "setMicrographs"]], "pwem.objects.data.SetOfClasses": [[19, 2, 1, "", "ITEM_TYPE"], [19, 2, 1, "", "REP_TYPE"], [19, 3, 1, "", "appendFromClasses"], [19, 3, 1, "", "classifyItems"], [19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "getDimensions"], [19, 3, 1, "", "getFirstItem"], [19, 3, 1, "", "getImages"], [19, 3, 1, "", "getImagesPointer"], [19, 3, 1, "", "getSamplingRate"], [19, 3, 1, "", "hasRepresentatives"], [19, 3, 1, "", "iterClassItems"], [19, 3, 1, "", "iterItems"], [19, 3, 1, "", "iterRepresentatives"], [19, 3, 1, "", "setImages"]], "pwem.objects.data.SetOfClasses2D": [[19, 2, 1, "", "ITEM_TYPE"], [19, 2, 1, "", "REP_TYPE"], [19, 3, 1, "", "writeStack"]], "pwem.objects.data.SetOfClasses3D": [[19, 2, 1, "", "ITEM_TYPE"], [19, 2, 1, "", "REP_TYPE"]], "pwem.objects.data.SetOfClassesVol": [[19, 2, 1, "", "ITEM_TYPE"]], "pwem.objects.data.SetOfCoordinates": [[19, 2, 1, "", "ITEM_TYPE"], [19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "getBoxSize"], [19, 3, 1, "", "getFiles"], [19, 3, 1, "", "getMicrographs"], [19, 3, 1, "", "iterCoordinates"], [19, 3, 1, "", "iterMicrographCoordinates"], [19, 3, 1, "", "iterMicrographs"], [19, 3, 1, "", "setBoxSize"], [19, 3, 1, "", "setMicrographs"]], "pwem.objects.data.SetOfDefocusGroup": [[19, 2, 1, "", "ITEM_TYPE"], [19, 3, 1, "", "getAvgSet"], [19, 3, 1, "", "getMaxSet"], [19, 3, 1, "", "getMinSet"], [19, 3, 1, "", "setAvgSet"], [19, 3, 1, "", "setMaxSet"], [19, 3, 1, "", "setMinSet"]], "pwem.objects.data.SetOfDefocusGroups": [[19, 3, 1, "", "getDefocusAvg"], [19, 3, 1, "", "getDefocusMax"], [19, 3, 1, "", "getGroupByCTF"], [19, 3, 1, "", "getGroupByName"], [19, 3, 1, "", "getSize"]], "pwem.objects.data.SetOfFSCs": [[19, 2, 1, "", "ITEM_TYPE"]], "pwem.objects.data.SetOfImages": [[19, 2, 1, "", "ITEM_TYPE"], [19, 3, 1, "", "append"], [19, 3, 1, "", "appendFromClasses"], [19, 3, 1, "", "appendFromImages"], [19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "getAcquisition"], [19, 3, 1, "", "getAlignment"], [19, 3, 1, "", "getDim"], [19, 3, 1, "", "getDimensions"], [19, 3, 1, "", "getFiles"], [19, 3, 1, "", "getSamplingRate"], [19, 3, 1, "", "getXDim"], [19, 3, 1, "", "hasAcquisition"], [19, 3, 1, "", "hasAlignment"], [19, 3, 1, "", "hasAlignment2D"], [19, 3, 1, "", "hasAlignment3D"], [19, 3, 1, "", "hasAlignmentProj"], [19, 3, 1, "", "hasCTF"], [19, 3, 1, "", "isAmplitudeCorrected"], [19, 3, 1, "", "isOddX"], [19, 3, 1, "", "isPhaseFlipped"], [19, 3, 1, "", "iterItems"], [19, 3, 1, "", "readStack"], [19, 3, 1, "", "setAcquisition"], [19, 3, 1, "", "setAlignment"], [19, 3, 1, "", "setAlignment2D"], [19, 3, 1, "", "setAlignment3D"], [19, 3, 1, "", "setAlignmentProj"], [19, 3, 1, "", "setDim"], [19, 3, 1, "", "setDownsample"], [19, 3, 1, "", "setHasCTF"], [19, 3, 1, "", "setIsAmplitudeCorrected"], [19, 3, 1, "", "setIsPhaseFlipped"], [19, 3, 1, "", "setSamplingRate"], [19, 3, 1, "", "writeStack"]], "pwem.objects.data.SetOfMicrographs": [[19, 2, 1, "", "ITEM_TYPE"]], "pwem.objects.data.SetOfMicrographsBase": [[19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "getScannedPixelSize"], [19, 3, 1, "", "setSamplingRate"], [19, 3, 1, "", "setScannedPixelSize"]], "pwem.objects.data.SetOfMovieParticles": [[19, 2, 1, "", "ITEM_TYPE"]], "pwem.objects.data.SetOfMovies": [[19, 2, 1, "", "ITEM_TYPE"], [19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "getDark"], [19, 3, 1, "", "getFramesRange"], [19, 3, 1, "", "getGain"], [19, 3, 1, "", "setDark"], [19, 3, 1, "", "setFramesRange"], [19, 3, 1, "", "setGain"]], "pwem.objects.data.SetOfNormalModes": [[19, 2, 1, "", "ITEM_TYPE"], [19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "getPdb"], [19, 3, 1, "", "setPdb"]], "pwem.objects.data.SetOfParticles": [[19, 2, 1, "", "ITEM_TYPE"], [19, 2, 1, "", "REP_TYPE"], [19, 3, 1, "", "copyInfo"], [19, 3, 1, "", "getCoordinates"], [19, 3, 1, "", "hasCoordinates"], [19, 3, 1, "", "setCoordinates"]], "pwem.objects.data.SetOfSequences": [[19, 2, 1, "", "ITEM_TYPE"], [19, 3, 1, "", "exportToFile"], [19, 3, 1, "", "importFromFile"]], "pwem.objects.data.SetOfVolumes": [[19, 2, 1, "", "EXPOSE_ITEMS"], [19, 2, 1, "", "ITEM_TYPE"], [19, 2, 1, "", "REP_TYPE"]], "pwem.objects.data.Transform": [[19, 2, 1, "", "ROT_X_90_CLOCKWISE"], [19, 2, 1, "", "ROT_X_90_COUNTERCLOCKWISE"], [19, 2, 1, "", "ROT_Y_90_CLOCKWISE"], [19, 2, 1, "", "ROT_Y_90_COUNTERCLOCKWISE"], [19, 2, 1, "", "ROT_Z_90_CLOCKWISE"], [19, 2, 1, "", "ROT_Z_90_COUNTERCLOCKWISE"], [19, 3, 1, "", "composeTransform"], [19, 3, 1, "", "create"], [19, 3, 1, "", "getMatrix"], [19, 3, 1, "", "getMatrixAsList"], [19, 3, 1, "", "getRotationMatrix"], [19, 3, 1, "", "getShifts"], [19, 3, 1, "", "invert"], [19, 3, 1, "", "scale"], [19, 3, 1, "", "scaleShifts"], [19, 3, 1, "", "setMatrix"], [19, 3, 1, "", "setShifts"], [19, 3, 1, "", "setShiftsTuple"]], "pwem.objects.data.Volume": [[19, 3, 1, "", "fixMRCVolume"], [19, 3, 1, "", "getClassId"], [19, 3, 1, "", "getDim"], [19, 3, 1, "", "getHalfMaps"], [19, 3, 1, "", "hasClassId"], [19, 3, 1, "", "hasHalfMaps"], [19, 3, 1, "", "setClassId"], [19, 3, 1, "", "setHalfMaps"]], "pwem.objects.data_tiltpairs": [[20, 1, 1, "", "Angles"], [20, 1, 1, "", "CoordinatesTiltPair"], [20, 1, 1, "", "MicrographsTiltPair"], [20, 1, 1, "", "ParticlesTiltPair"], [20, 1, 1, "", "SetOfAngles"], [20, 1, 1, "", "TiltPair"], [20, 1, 1, "", "TiltPairSet"]], "pwem.objects.data_tiltpairs.Angles": [[20, 3, 1, "", "getAngles"], [20, 3, 1, "", "setAngles"]], "pwem.objects.data_tiltpairs.CoordinatesTiltPair": [[20, 2, 1, "", "ITEM_TYPE"], [20, 3, 1, "", "close"], [20, 3, 1, "", "getAngles"], [20, 3, 1, "", "getBoxSize"], [20, 3, 1, "", "getFiles"], [20, 3, 1, "", "getMicsPair"], [20, 3, 1, "", "setAngles"], [20, 3, 1, "", "setMicsPair"]], "pwem.objects.data_tiltpairs.MicrographsTiltPair": [[20, 2, 1, "", "ITEM_TYPE"]], "pwem.objects.data_tiltpairs.ParticlesTiltPair": [[20, 2, 1, "", "ITEM_TYPE"], [20, 3, 1, "", "getCoordsPair"], [20, 3, 1, "", "getFiles"], [20, 3, 1, "", "setCoordsPair"]], "pwem.objects.data_tiltpairs.SetOfAngles": [[20, 2, 1, "", "ITEM_TYPE"]], "pwem.objects.data_tiltpairs.TiltPair": [[20, 3, 1, "", "getTilted"], [20, 3, 1, "", "getUntilted"], [20, 3, 1, "", "setTilted"], [20, 3, 1, "", "setUntilted"]], "pwem.objects.data_tiltpairs.TiltPairSet": [[20, 2, 1, "", "ITEM_TYPE"], [20, 3, 1, "", "close"], [20, 3, 1, "", "getFiles"], [20, 3, 1, "", "getTilted"], [20, 3, 1, "", "getUntilted"], [20, 3, 1, "", "setTilted"], [20, 3, 1, "", "setUntilted"], [20, 3, 1, "", "write"]], "pwem.protocols": [[22, 0, 0, "-", "parallel"], [23, 0, 0, "-", "protocol"], [24, 0, 0, "-", "protocol_2d"], [25, 0, 0, "-", "protocol_3d"], [26, 0, 0, "-", "protocol_align_movies"], [27, 0, 0, "-", "protocol_alignment_assign"], [28, 0, 0, "-", "protocol_alignment_invertHand"], [29, 0, 0, "-", "protocol_batch"], [30, 0, 0, "-", "protocol_boxsize_parameters"], [31, 0, 0, "-", "protocol_classes_selector"], [32, 0, 0, "-", "protocol_create_stream_data"], [33, 0, 0, "-", "protocol_ctf_assign"], [34, 0, 0, "-", "protocol_export"], [36, 0, 0, "-", "protocol_extract_coordinates"], [37, 0, 0, "-", "protocol_import"], [48, 0, 0, "-", "protocol_mathematical_operator"], [49, 0, 0, "-", "protocol_micrographs"], [50, 0, 0, "-", "protocol_movie_eraser"], [51, 0, 0, "-", "protocol_movies"], [52, 0, 0, "-", "protocol_origin_sampling_volume"], [53, 0, 0, "-", "protocol_particles"], [54, 0, 0, "-", "protocol_particles_picking"], [55, 0, 0, "-", "protocol_pdf_report"], [56, 0, 0, "-", "protocol_set_editor"], [57, 0, 0, "-", "protocol_set_filter"], [58, 0, 0, "-", "protocol_sets"], [59, 0, 0, "-", "protocol_tests"], [60, 0, 0, "-", "protocol_tiltpairs"], [61, 0, 0, "-", "protocol_tools"]], "pwem.protocols.parallel": [[22, 1, 1, "", "ProtTestParallel"]], "pwem.protocols.parallel.ProtTestParallel": [[22, 3, 1, "", "awakeStep"], [22, 3, 1, "", "endStep"], [22, 3, 1, "", "initStep"], [22, 3, 1, "", "sleepStep"]], "pwem.protocols.protocol": [[23, 1, 1, "", "EMProtocol"]], "pwem.protocols.protocol.EMProtocol": [[23, 3, 1, "", "allowsDelete"]], "pwem.protocols.protocol_2d": [[24, 1, 1, "", "Prot2D"], [24, 1, 1, "", "ProtAlign2D"], [24, 1, 1, "", "ProtAnalysis2D"], [24, 1, 1, "", "ProtClassify2D"], [24, 1, 1, "", "ProtCreateMask2D"], [24, 1, 1, "", "ProtEvenClassify2D"]], "pwem.protocols.protocol_2d.ProtEvenClassify2D": [[24, 3, 1, "", "createOutputStep"]], "pwem.protocols.protocol_3d": [[25, 1, 1, "", "Prot3D"], [25, 1, 1, "", "ProtAlignVolume"], [25, 1, 1, "", "ProtAnalysis3D"], [25, 1, 1, "", "ProtClassify3D"], [25, 1, 1, "", "ProtCreateMask3D"], [25, 1, 1, "", "ProtFilterVolumes"], [25, 1, 1, "", "ProtFitting3D"], [25, 1, 1, "", "ProtInitialVolume"], [25, 1, 1, "", "ProtMaskVolumes"], [25, 1, 1, "", "ProtOperateVolumes"], [25, 1, 1, "", "ProtPreprocessVolumes"], [25, 1, 1, "", "ProtReconstruct3D"], [25, 1, 1, "", "ProtRefine3D"]], "pwem.protocols.protocol_align_movies": [[26, 1, 1, "", "ProtAlignMovies"], [26, 1, 1, "", "ProtAverageFrames"], [26, 5, 1, "", "createAlignmentPlot"]], "pwem.protocols.protocol_align_movies.ProtAlignMovies": [[26, 3, 1, "", "averageMovie"], [26, 3, 1, "", "composePSD"], [26, 3, 1, "", "composePSDImages"], [26, 3, 1, "", "computePSD"], [26, 3, 1, "", "computePSDImages"], [26, 3, 1, "", "computePSDs"], [26, 3, 1, "", "computeThumbnail"], [26, 3, 1, "", "correctGain"], [26, 3, 1, "", "createOutputStep"], [26, 2, 1, "", "evenOddCapable"], [26, 3, 1, "", "getThumbnailFn"]], "pwem.protocols.protocol_align_movies.ProtAverageFrames": [[26, 3, 1, "", "createOutputStep"]], "pwem.protocols.protocol_alignment_assign": [[27, 1, 1, "", "ProtAlignmentAssign"]], "pwem.protocols.protocol_alignment_assign.ProtAlignmentAssign": [[27, 3, 1, "", "createOutputStep"]], "pwem.protocols.protocol_alignment_invertHand": [[28, 1, 1, "", "ProtAlignmentInvertHand"]], "pwem.protocols.protocol_alignment_invertHand.ProtAlignmentInvertHand": [[28, 3, 1, "", "createOutputStep"]], "pwem.protocols.protocol_batch": [[29, 1, 1, "", "BatchProtocol"], [29, 1, 1, "", "ProtCreateFSC"], [29, 1, 1, "", "ProtCreateMask"], [29, 1, 1, "", "ProtUserSubSet"]], "pwem.protocols.protocol_batch.ProtCreateFSC": [[29, 3, 1, "", "createOutputStep"], [29, 3, 1, "", "setInputFscList"], [29, 3, 1, "", "setInputObj"]], "pwem.protocols.protocol_batch.ProtCreateMask": [[29, 3, 1, "", "createMaskStep"]], "pwem.protocols.protocol_batch.ProtUserSubSet": [[29, 3, 1, "", "createSetObject"], [29, 3, 1, "", "createSetStep"], [29, 3, 1, "", "getDefaultSummary"]], "pwem.protocols.protocol_boxsize_parameters": [[30, 1, 1, "", "ProtBoxSizeParameters"], [30, 5, 1, "", "transform2EvenNumber"]], "pwem.protocols.protocol_boxsize_parameters.ProtBoxSizeParameters": [[30, 3, 1, "", "applyFormulaStep"], [30, 3, 1, "", "calculateConsensusParams"], [30, 3, 1, "", "calculateGautomatchParams"], [30, 3, 1, "", "calculateParticleExtractionParams"], [30, 3, 1, "", "calculateRelionParams"], [30, 3, 1, "", "calculateTopazParams"], [30, 3, 1, "", "createOutput"], [30, 3, 1, "", "createResultsOutput"], [30, 3, 1, "", "initParams"], [30, 2, 1, "", "outputsToDefine"], [30, 3, 1, "", "registerEvenBoxSize"], [30, 3, 1, "", "registerOutput"]], "pwem.protocols.protocol_classes_selector": [[31, 1, 1, "", "ProtClassesSelector"], [31, 5, 1, "", "createSetFromImages"], [31, 5, 1, "", "createSetFromRepresentative"]], "pwem.protocols.protocol_classes_selector.ProtClassesSelector": [[31, 3, 1, "", "extractElements"]], "pwem.protocols.protocol_create_stream_data": [[32, 1, 1, "", "ProtCreateStreamData"]], "pwem.protocols.protocol_create_stream_data.ProtCreateStreamData": [[32, 3, 1, "", "createCoordinatesStep"], [32, 3, 1, "", "createParticlesStep"], [32, 3, 1, "", "createRandomMicStep"], [32, 3, 1, "", "createStep"], [32, 3, 1, "", "delayStep"], [32, 3, 1, "", "getTimeInterval"], [32, 2, 1, "", "object"]], "pwem.protocols.protocol_ctf_assign": [[33, 1, 1, "", "ProtCTFAssign"]], "pwem.protocols.protocol_ctf_assign.ProtCTFAssign": [[33, 3, 1, "", "createOutputStep"]], "pwem.protocols.protocol_export": [[35, 0, 0, "-", "protocol_export_DB"]], "pwem.protocols.protocol_export.protocol_export_DB": [[35, 1, 1, "", "ProtExportDataBases"]], "pwem.protocols.protocol_export.protocol_export_DB.ProtExportDataBases": [[35, 2, 1, "", "ADDITIONALVOLUMEDIR"], [35, 2, 1, "", "ADDITIONALVOLUMENAME"], [35, 2, 1, "", "COORDINATEFILENAME"], [35, 2, 1, "", "HALFVOLUMENAME"], [35, 2, 1, "", "MASKDIR"], [35, 2, 1, "", "MASKNAME"], [35, 2, 1, "", "SYMPLIFIED_STRUCT"], [35, 2, 1, "", "VOLUMENAME"], [35, 3, 1, "", "createDirectoryStep"], [35, 3, 1, "", "exportAdditionalVolumeStep"], [35, 3, 1, "", "exportAtomStructStep"], [35, 3, 1, "", "exportFSCStep"], [35, 3, 1, "", "exportImageStep"], [35, 3, 1, "", "exportMasksStep"], [35, 3, 1, "", "exportVolumeStep"], [35, 3, 1, "", "getFnPath"]], "pwem.protocols.protocol_extract_coordinates": [[36, 1, 1, "", "ProtExtractCoords"]], "pwem.protocols.protocol_extract_coordinates.ProtExtractCoords": [[36, 3, 1, "", "createOutputStep"], [36, 3, 1, "", "extractCoordinates"], [36, 3, 1, "", "extractCoordsStep"], [36, 3, 1, "", "geometryFromMatrix"], [36, 3, 1, "", "getInputParticles"], [36, 3, 1, "", "getShifts"], [36, 3, 1, "", "getSuffix"], [36, 3, 1, "", "getTmpOutputPath"], [36, 3, 1, "", "loadInputs"]], "pwem.protocols.protocol_import": [[38, 0, 0, "-", "base"], [39, 0, 0, "-", "coordinates"], [40, 0, 0, "-", "ctfs"], [41, 0, 0, "-", "dataimport"], [42, 0, 0, "-", "images"], [43, 0, 0, "-", "masks"], [44, 0, 0, "-", "micrographs"], [45, 0, 0, "-", "particles"], [46, 0, 0, "-", "sequence"], [47, 0, 0, "-", "volumes"]], "pwem.protocols.protocol_import.base": [[38, 1, 1, "", "ProtImport"], [38, 1, 1, "", "ProtImportFiles"]], "pwem.protocols.protocol_import.base.ProtImportFiles": [[38, 2, 1, "", "IMPORT_FROM_FILES"], [38, 3, 1, "", "fileModified"], [38, 3, 1, "", "getCopyOrLink"], [38, 3, 1, "", "getMatchFiles"], [38, 3, 1, "", "getPattern"], [38, 3, 1, "", "isBlacklisted"], [38, 3, 1, "", "iterFiles"], [38, 3, 1, "", "worksInStreaming"]], "pwem.protocols.protocol_import.coordinates": [[39, 1, 1, "", "ProtImportCoordinates"], [39, 1, 1, "", "ProtImportCoordinatesPairs"]], "pwem.protocols.protocol_import.coordinates.ProtImportCoordinates": [[39, 2, 1, "", "IMPORT_FROM_AUTO"], [39, 2, 1, "", "IMPORT_FROM_DOGPICKER"], [39, 2, 1, "", "IMPORT_FROM_EMAN"], [39, 2, 1, "", "IMPORT_FROM_RELION"], [39, 2, 1, "", "IMPORT_FROM_SCIPION"], [39, 2, 1, "", "IMPORT_FROM_XMIPP"], [39, 3, 1, "", "correctCoordinatePosition"], [39, 3, 1, "", "createOutputStep"], [39, 3, 1, "", "getDefaultBoxSize"], [39, 3, 1, "", "getFormat"], [39, 3, 1, "", "getImportClass"], [39, 3, 1, "", "getImportFrom"], [39, 3, 1, "", "getInputMicrographs"], [39, 3, 1, "", "getMatchingMic"]], "pwem.protocols.protocol_import.coordinates.ProtImportCoordinatesPairs": [[39, 2, 1, "", "IMPORT_FROM_EMAN"], [39, 2, 1, "", "IMPORT_FROM_XMIPP"], [39, 3, 1, "", "correctCoordinatePosition"], [39, 3, 1, "", "createOutputStep"], [39, 3, 1, "", "getDefaultBoxSize"], [39, 3, 1, "", "getImportClass"], [39, 3, 1, "", "getInputMicrographs"], [39, 3, 1, "", "getMatchingCoord"], [39, 3, 1, "", "getSummary"], [39, 3, 1, "", "readCoordinates"], [39, 3, 1, "", "registerCoords"]], "pwem.protocols.protocol_import.ctfs": [[40, 1, 1, "", "ProtImportCTF"]], "pwem.protocols.protocol_import.ctfs.ProtImportCTF": [[40, 2, 1, "", "IMPORT_FROM_AUTO"], [40, 2, 1, "", "IMPORT_FROM_EMAN2"], [40, 2, 1, "", "IMPORT_FROM_GCTF"], [40, 2, 1, "", "IMPORT_FROM_GRIGORIEFF"], [40, 2, 1, "", "IMPORT_FROM_SCIPION"], [40, 2, 1, "", "IMPORT_FROM_XMIPP3"], [40, 3, 1, "", "getFormat"], [40, 3, 1, "", "getImportClass"], [40, 3, 1, "", "importCTFStep"]], "pwem.protocols.protocol_import.dataimport": [[41, 1, 1, "", "ScipionImport"]], "pwem.protocols.protocol_import.dataimport.ScipionImport": [[41, 3, 1, "", "getMicCTF"], [41, 3, 1, "", "importCoordinates"], [41, 3, 1, "", "importMicrographs"], [41, 3, 1, "", "importParticles"], [41, 3, 1, "", "loadAcquisitionInfo"], [41, 3, 1, "", "validate"], [41, 3, 1, "", "validateMicrographs"], [41, 3, 1, "", "validateParticles"]], "pwem.protocols.protocol_import.images": [[42, 1, 1, "", "ProtImportImages"]], "pwem.protocols.protocol_import.images.ProtImportImages": [[42, 3, 1, "", "fillAcquisition"], [42, 3, 1, "", "getAcquisition"], [42, 3, 1, "", "getActions"], [42, 3, 1, "", "getFiles"], [42, 3, 1, "", "handleImgHed"], [42, 3, 1, "", "importImagesStep"], [42, 3, 1, "", "importImagesStreamStep"], [42, 3, 1, "", "iterNewInputFiles"], [42, 3, 1, "", "loadAcquisitionInfo"], [42, 3, 1, "", "processImportDict"], [42, 3, 1, "", "stopImport"], [42, 3, 1, "", "streamingHasFinished"], [42, 3, 1, "", "validatePath"]], "pwem.protocols.protocol_import.masks": [[43, 1, 1, "", "ImportMaskOutput"], [43, 1, 1, "", "ProtImportMask"]], "pwem.protocols.protocol_import.masks.ImportMaskOutput": [[43, 2, 1, "", "outputMask"]], "pwem.protocols.protocol_import.masks.ProtImportMask": [[43, 3, 1, "", "importMaskStep"]], "pwem.protocols.protocol_import.micrographs": [[44, 1, 1, "", "ImportMicsOutput"], [44, 1, 1, "", "ImportMoviesOutput"], [44, 1, 1, "", "ProtImportMicBase"], [44, 1, 1, "", "ProtImportMicrographs"], [44, 1, 1, "", "ProtImportMovies"]], "pwem.protocols.protocol_import.micrographs.ImportMicsOutput": [[44, 2, 1, "", "outputMicrographs"]], "pwem.protocols.protocol_import.micrographs.ImportMoviesOutput": [[44, 2, 1, "", "outputMovies"]], "pwem.protocols.protocol_import.micrographs.ProtImportMicBase": [[44, 3, 1, "", "getBlacklistedItems"], [44, 3, 1, "", "getItemsToBlacklistFromFile"], [44, 3, 1, "", "isBlacklisted"], [44, 3, 1, "", "loadAcquisitionInfo"], [44, 3, 1, "", "setSamplingRate"]], "pwem.protocols.protocol_import.micrographs.ProtImportMicrographs": [[44, 2, 1, "", "IMPORT_FROM_EMX"], [44, 2, 1, "", "IMPORT_FROM_SCIPION"], [44, 2, 1, "", "IMPORT_FROM_XMIPP3"], [44, 3, 1, "", "getImportClass"], [44, 3, 1, "", "importMicrographsStep"]], "pwem.protocols.protocol_import.micrographs.ProtImportMovies": [[44, 3, 1, "", "getCopyOrLink"], [44, 3, 1, "", "ignoreCopy"], [44, 3, 1, "", "iterNewInputFiles"], [44, 3, 1, "", "setSamplingRate"]], "pwem.protocols.protocol_import.particles": [[45, 1, 1, "", "ProtImportAverages"], [45, 1, 1, "", "ProtImportParticles"]], "pwem.protocols.protocol_import.particles.ProtImportParticles": [[45, 2, 1, "", "IMPORT_FROM_CRYOSPARC"], [45, 2, 1, "", "IMPORT_FROM_EMAN"], [45, 2, 1, "", "IMPORT_FROM_EMX"], [45, 2, 1, "", "IMPORT_FROM_FREALIGN"], [45, 2, 1, "", "IMPORT_FROM_RELION"], [45, 2, 1, "", "IMPORT_FROM_SCIPION"], [45, 2, 1, "", "IMPORT_FROM_XMIPP3"], [45, 2, 1, "", "alignTypeList"], [45, 3, 1, "", "getImportClass"], [45, 2, 1, "", "importExts"], [45, 2, 1, "", "importFormats"], [45, 3, 1, "", "importParticlesStep"], [45, 3, 1, "", "setSamplingRate"]], "pwem.protocols.protocol_import.sequence": [[46, 1, 1, "", "ProtImportSequence"]], "pwem.protocols.protocol_import.sequence.ProtImportSequence": [[46, 2, 1, "", "IMPORT_FROM_FILES"], [46, 2, 1, "", "IMPORT_FROM_NUCLEOTIDE_FILES"], [46, 2, 1, "", "IMPORT_FROM_NUCLEOTIDE_GENEBANK"], [46, 2, 1, "", "IMPORT_FROM_NUCLEOTIDE_PLAIN_TEXT"], [46, 2, 1, "", "IMPORT_FROM_NUCLEOTIDE_STRUCTURE"], [46, 2, 1, "", "IMPORT_FROM_PLAIN_TEXT"], [46, 2, 1, "", "IMPORT_FROM_PROTEIN_GENEBANK"], [46, 2, 1, "", "IMPORT_FROM_STRUCTURE"], [46, 2, 1, "", "IMPORT_FROM_UNIPROT"], [46, 2, 1, "", "IMPORT_STRUCTURE_FROM_FILES"], [46, 2, 1, "", "IMPORT_STRUCTURE_FROM_ID"], [46, 3, 1, "", "createOutputStep"], [46, 3, 1, "", "fileDownloadStep"], [46, 3, 1, "", "getRawSequenceStep"], [46, 3, 1, "", "getSequenceOfChainStep"], [46, 3, 1, "", "sequenceDatabaseDownloadStep"], [46, 2, 1, "", "url"]], "pwem.protocols.protocol_import.volumes": [[47, 1, 1, "", "ImportVolumeOutputs"], [47, 1, 1, "", "ProtImportPdb"], [47, 1, 1, "", "ProtImportSetOfAtomStructs"], [47, 1, 1, "", "ProtImportVolumes"], [47, 5, 1, "", "fetch_emdb_map"], [47, 5, 1, "", "fetch_file"], [47, 5, 1, "", "gunzip"]], "pwem.protocols.protocol_import.volumes.ImportVolumeOutputs": [[47, 2, 1, "", "outputVolume"], [47, 2, 1, "", "outputVolumes"]], "pwem.protocols.protocol_import.volumes.ProtImportPdb": [[47, 2, 1, "", "IMPORT_FROM_FILES"], [47, 2, 1, "", "IMPORT_FROM_ID"], [47, 2, 1, "", "SYMPLIFIED_STRUCT"], [47, 3, 1, "", "createOutputStep"], [47, 3, 1, "", "pdbDownloadStep"]], "pwem.protocols.protocol_import.volumes.ProtImportSetOfAtomStructs": [[47, 2, 1, "", "IMPORT_FROM_FILES"], [47, 2, 1, "", "IMPORT_FROM_ID"], [47, 3, 1, "", "createOutputStep"], [47, 3, 1, "", "pdbDownloadStep"]], "pwem.protocols.protocol_import.volumes.ProtImportVolumes": [[47, 2, 1, "", "IMPORT_FROM_EMDB"], [47, 3, 1, "", "importFromEMDBStep"], [47, 3, 1, "", "importFromFileStep"]], "pwem.protocols.protocol_mathematical_operator": [[48, 1, 1, "", "ProtMathematicalOperator"]], "pwem.protocols.protocol_mathematical_operator.ProtMathematicalOperator": [[48, 2, 1, "", "PARAM1"], [48, 2, 1, "", "PARAM2"], [48, 3, 1, "", "computeStep"], [48, 3, 1, "", "createResultOutput"], [48, 3, 1, "", "formulaNeedsInput"], [48, 3, 1, "", "formulaNeedsParam"], [48, 3, 1, "", "getParam1"], [48, 3, 1, "", "getParam2"]], "pwem.protocols.protocol_micrographs": [[49, 1, 1, "", "ProtCTFMicOutputs"], [49, 1, 1, "", "ProtCTFMicrographs"], [49, 1, 1, "", "ProtMicrographs"], [49, 1, 1, "", "ProtPreprocessMicrographs"]], "pwem.protocols.protocol_micrographs.ProtCTFMicOutputs": [[49, 2, 1, "", "outputCTF"]], "pwem.protocols.protocol_micrographs.ProtCTFMicrographs": [[49, 3, 1, "", "createOutputStep"], [49, 3, 1, "", "estimateCtfListStep"], [49, 3, 1, "", "estimateCtfStep"], [49, 3, 1, "", "getCtfParamsDict"], [49, 3, 1, "", "getInputMicrographs"], [49, 3, 1, "", "getInputMicrographsPointer"], [49, 3, 1, "", "getRecalCtfParamsDict"], [49, 3, 1, "", "reEstimateCtfStep"]], "pwem.protocols.protocol_movie_eraser": [[50, 1, 1, "", "ProtMovieEraser"]], "pwem.protocols.protocol_movie_eraser.ProtMovieEraser": [[50, 3, 1, "", "deleteMoviesStep"], [50, 3, 1, "", "worksInStreaming"]], "pwem.protocols.protocol_movies": [[51, 1, 1, "", "ProtExtractMovieParticles"], [51, 1, 1, "", "ProtMovieAssignGain"], [51, 1, 1, "", "ProtProcessMovies"]], "pwem.protocols.protocol_movies.ProtMovieAssignGain": [[51, 3, 1, "", "createOutputStep"]], "pwem.protocols.protocol_movies.ProtProcessMovies": [[51, 2, 1, "", "CONVERT_TO_MRC"], [51, 2, 1, "", "CORRECT_GAIN"], [51, 3, 1, "", "convertInputStep"], [51, 3, 1, "", "getFinalCorrectionImagePath"], [51, 3, 1, "", "getGainAndDark"], [51, 3, 1, "", "processMovieStep"]], "pwem.protocols.protocol_origin_sampling_volume": [[52, 1, 1, "", "ProtOrigSampling"]], "pwem.protocols.protocol_origin_sampling_volume.ProtOrigSampling": [[52, 3, 1, "", "assignStep"], [52, 3, 1, "", "getFnPath"]], "pwem.protocols.protocol_particles": [[53, 1, 1, "", "ProtExtractParticles"], [53, 1, 1, "", "ProtExtractParticlesOutput"], [53, 1, 1, "", "ProtExtractParticlesPair"], [53, 1, 1, "", "ProtFilterParticles"], [53, 1, 1, "", "ProtMaskParticles"], [53, 1, 1, "", "ProtOperateParticles"], [53, 1, 1, "", "ProtParticles"], [53, 1, 1, "", "ProtProcessParticles"]], "pwem.protocols.protocol_particles.ProtExtractParticles": [[53, 3, 1, "", "createOutputStep"], [53, 3, 1, "", "extractMicrographListStep"], [53, 3, 1, "", "extractMicrographStep"], [53, 3, 1, "", "readPartsFromMics"]], "pwem.protocols.protocol_particles.ProtExtractParticlesOutput": [[53, 2, 1, "", "outputParticles"]], "pwem.protocols.protocol_particles_picking": [[54, 1, 1, "", "ProtParticlePicking"], [54, 1, 1, "", "ProtParticlePickingAuto"], [54, 1, 1, "", "ProtParticlePickingOutput"], [54, 1, 1, "", "ProtPickingDifference"]], "pwem.protocols.protocol_particles_picking.ProtParticlePicking": [[54, 2, 1, "", "OUTPUT_PREFIX"], [54, 3, 1, "", "createOutputStep"], [54, 3, 1, "", "getCoords"], [54, 3, 1, "", "getCoordsDir"], [54, 3, 1, "", "getCoordsTiltPair"], [54, 3, 1, "", "getInputMicrographs"], [54, 3, 1, "", "getInputMicrographsPointer"], [54, 3, 1, "", "getMethods"], [54, 3, 1, "", "getSummary"], [54, 3, 1, "", "readSetOfCoordinates"], [54, 3, 1, "", "registerCoords"]], "pwem.protocols.protocol_particles_picking.ProtParticlePickingAuto": [[54, 3, 1, "", "createOutputStep"], [54, 3, 1, "", "pickMicrographListStep"], [54, 3, 1, "", "pickMicrographStep"], [54, 3, 1, "", "readCoordsFromMics"]], "pwem.protocols.protocol_particles_picking.ProtParticlePickingOutput": [[54, 2, 1, "", "outputCoordinates"]], "pwem.protocols.protocol_particles_picking.ProtPickingDifference": [[54, 3, 1, "", "createOutputStep"], [54, 3, 1, "", "getInputMicrographs"]], "pwem.protocols.protocol_pdf_report": [[55, 1, 1, "", "ProtPDFReport"]], "pwem.protocols.protocol_pdf_report.ProtPDFReport": [[55, 3, 1, "", "createReport"], [55, 3, 1, "", "validateInstallation"]], "pwem.protocols.protocol_set_editor": [[56, 1, 1, "", "ProtSetEditor"]], "pwem.protocols.protocol_set_editor.ProtSetEditor": [[56, 2, 1, "", "CHOICE_FORMULA"], [56, 2, 1, "", "CHOICE_LABEL"], [56, 2, 1, "", "CHOICE_ROTATE_ICOSAHEDRAL"], [56, 2, 1, "", "CHOICE_ROTATE_VECTOR"], [56, 2, 1, "", "LOCAL_SYM_NAME"], [56, 3, 1, "", "createOutput"], [56, 3, 1, "", "formulaStep"], [56, 3, 1, "", "rotateIcoStep"], [56, 3, 1, "", "rotateStep"]], "pwem.protocols.protocol_set_filter": [[57, 1, 1, "", "ProtSetFilter"]], "pwem.protocols.protocol_set_filter.ProtSetFilter": [[57, 2, 1, "", "CHOICE_DISTANCE_BETWEEN_COORDS"], [57, 2, 1, "", "CHOICE_DISTANCE_CENTER"], [57, 2, 1, "", "CHOICE_FORMULA"], [57, 2, 1, "", "CHOICE_LABEL"], [57, 2, 1, "", "CHOICE_RANKED"], [57, 3, 1, "", "createOutput"], [57, 3, 1, "", "distanceBetweenCoorStep"], [57, 3, 1, "", "distanceCenterStep"], [57, 3, 1, "", "formulaStep"], [57, 3, 1, "", "getTopRankItems"], [57, 3, 1, "", "parseTopRankParam"], [57, 3, 1, "", "rankingStep"]], "pwem.protocols.protocol_sets": [[58, 1, 1, "", "ProtSets"], [58, 1, 1, "", "ProtSplitSet"], [58, 1, 1, "", "ProtSubSet"], [58, 1, 1, "", "ProtSubSetByCoord"], [58, 1, 1, "", "ProtSubSetByMic"], [58, 1, 1, "", "ProtUnionSet"]], "pwem.protocols.protocol_sets.ProtSplitSet": [[58, 3, 1, "", "createOutputStep"]], "pwem.protocols.protocol_sets.ProtSubSet": [[58, 2, 1, "", "SET_DIFFERENCE"], [58, 2, 1, "", "SET_INTERSECTION"], [58, 3, 1, "", "createOutputStep"]], "pwem.protocols.protocol_sets.ProtSubSetByCoord": [[58, 3, 1, "", "createOutputStep"]], "pwem.protocols.protocol_sets.ProtSubSetByMic": [[58, 3, 1, "", "createOutputStep"]], "pwem.protocols.protocol_sets.ProtUnionSet": [[58, 2, 1, "", "TYPE_CTF"], [58, 2, 1, "", "TYPE_VOLUME"], [58, 2, 1, "", "TYPE_VOLUME_INDEX"], [58, 3, 1, "", "cleanExtraAttributes"], [58, 3, 1, "", "commonAttributes"], [58, 3, 1, "", "createOutputStep"], [58, 3, 1, "", "duplicatedIds"], [58, 3, 1, "", "getAllSetsAttributes"], [58, 3, 1, "", "getObjDict"]], "pwem.protocols.protocol_tests": [[59, 1, 1, "", "ProtStress"], [59, 1, 1, "", "ProtTests"]], "pwem.protocols.protocol_tests.ProtStress": [[59, 3, 1, "", "delayStep"], [59, 3, 1, "", "stressStep"]], "pwem.protocols.protocol_tests.ProtTests": [[59, 3, 1, "", "isDisabled"]], "pwem.protocols.protocol_tiltpairs": [[60, 1, 1, "", "ProtImportMicrographsTiltPairs"]], "pwem.protocols.protocol_tiltpairs.ProtImportMicrographsTiltPairs": [[60, 2, 1, "", "OUTPUT_NAME"], [60, 3, 1, "", "createTiltedPairsStep"], [60, 3, 1, "", "getFiles"], [60, 3, 1, "", "importMicrographs"]], "pwem.protocols.protocol_tools": [[61, 1, 1, "", "ProtManualCheckpoint"]], "pwem.protocols.protocol_tools.ProtManualCheckpoint": [[61, 3, 1, "", "getActions"], [61, 3, 1, "", "getTimeOutInSeconds"], [61, 3, 1, "", "stopWait"], [61, 3, 1, "", "waitingHasFinished"], [61, 3, 1, "", "waitingStep"]], "pwem.utils": [[62, 5, 1, "", "cleanFileName"], [62, 5, 1, "", "convertPixToLength"], [62, 5, 1, "", "getCmdPath"], [62, 5, 1, "", "getPWEMPath"], [62, 5, 1, "", "getTemplatePath"], [62, 5, 1, "", "loadSetFromDb"], [62, 5, 1, "", "runProgram"], [62, 5, 1, "", "splitRange"]], "pwem.viewers": [[64, 0, 0, "-", "filehandlers"], [65, 0, 0, "-", "plotter"], [66, 0, 0, "-", "showj"], [67, 0, 0, "-", "viewer_base"], [68, 0, 0, "-", "viewer_chimera"], [69, 0, 0, "-", "viewer_fsc"], [70, 0, 0, "-", "viewer_localres"], [71, 0, 0, "-", "viewer_pdf"], [72, 0, 0, "-", "viewer_sequence"], [73, 0, 0, "-", "viewer_vmd"], [74, 0, 0, "-", "viewer_volumes"], [75, 0, 0, "-", "viewers_data"], [77, 0, 0, "-", "views"]], "pwem.viewers.filehandlers": [[64, 1, 1, "", "ChimeraHandler"], [64, 1, 1, "", "ImageFileHandler"], [64, 1, 1, "", "MdFileHandler"], [64, 1, 1, "", "ParticleFileHandler"], [64, 1, 1, "", "StackHandler"], [64, 1, 1, "", "VolFileHandler"], [64, 5, 1, "", "getImageFromPath"], [64, 5, 1, "", "getPILImage"], [64, 5, 1, "", "getTkImage"]], "pwem.viewers.filehandlers.ChimeraHandler": [[64, 3, 1, "", "getFileActions"], [64, 3, 1, "", "getFileIcon"]], "pwem.viewers.filehandlers.ImageFileHandler": [[64, 3, 1, "", "getFileActions"], [64, 3, 1, "", "getFilePreview"]], "pwem.viewers.filehandlers.MdFileHandler": [[64, 3, 1, "", "getFileIcon"], [64, 3, 1, "", "getFilePreview"]], "pwem.viewers.filehandlers.ParticleFileHandler": [[64, 3, 1, "", "getFileIcon"]], "pwem.viewers.filehandlers.StackHandler": [[64, 3, 1, "", "getFileIcon"]], "pwem.viewers.filehandlers.VolFileHandler": [[64, 3, 1, "", "getFileIcon"]], "pwem.viewers.plotter": [[65, 1, 1, "", "EmPlotter"], [65, 1, 1, "", "PlotData"]], "pwem.viewers.plotter.EmPlotter": [[65, 3, 1, "", "createFromFile"], [65, 3, 1, "", "plotAngularDistribution"], [65, 3, 1, "", "plotAngularDistributionFromMd"], [65, 3, 1, "", "plotAngularDistributionHistogram"], [65, 3, 1, "", "plotData"], [65, 3, 1, "", "plotDataBar"], [65, 3, 1, "", "plotHist"], [65, 3, 1, "", "plotMatrix"], [65, 3, 1, "", "plotScatter"]], "pwem.viewers.showj": [[66, 1, 1, "", "ColumnProperties"], [66, 1, 1, "", "ColumnsConfig"], [66, 1, 1, "", "MySocketServer"], [66, 1, 1, "", "ProtocolTCPRequestHandler"], [66, 5, 1, "", "getArchitecture"], [66, 5, 1, "", "getJavaIJappArguments"], [66, 5, 1, "", "getJvmMaxMemory"], [66, 5, 1, "", "initProtocolTCPServer"], [66, 5, 1, "", "launchSupervisedPickerGUI"], [66, 5, 1, "", "launchTiltPairPickerGUI"], [66, 5, 1, "", "runJavaIJapp"]], "pwem.viewers.showj.ColumnProperties": [[66, 3, 1, "", "allowsRenderable"], [66, 3, 1, "", "getColumnType"], [66, 3, 1, "", "getLabel"], [66, 3, 1, "", "getName"], [66, 3, 1, "", "getValues"], [66, 3, 1, "", "isRenderable"], [66, 3, 1, "", "setValues"]], "pwem.viewers.showj.ColumnsConfig": [[66, 3, 1, "", "configColumn"], [66, 3, 1, "", "getColumnProperty"], [66, 3, 1, "", "getRenderableColumns"], [66, 3, 1, "", "hasEnableColumn"], [66, 3, 1, "", "printColumns"]], "pwem.viewers.showj.MySocketServer": [[66, 3, 1, "", "serve_forever"]], "pwem.viewers.showj.ProtocolTCPRequestHandler": [[66, 3, 1, "", "handle"]], "pwem.viewers.viewer_base": [[67, 1, 1, "", "EmProtocolViewer"]], "pwem.viewers.viewer_base.EmProtocolViewer": [[67, 3, 1, "", "createAngDistributionSqlite"], [67, 3, 1, "", "createVolumesSqlite"], [67, 3, 1, "", "objectView"]], "pwem.viewers.viewer_chimera": [[68, 1, 1, "", "Chimera"], [68, 1, 1, "", "ChimeraAngDist"], [68, 1, 1, "", "ChimeraClientView"], [68, 1, 1, "", "ChimeraDataView"], [68, 1, 1, "", "ChimeraView"], [68, 1, 1, "", "ChimeraViewer"], [68, 5, 1, "", "generateColorLegend"], [68, 5, 1, "", "mapVolsWithColorkey"], [68, 5, 1, "", "printCmd"]], "pwem.viewers.viewer_chimera.Chimera": [[68, 3, 1, "", "createCoordinateAxisFile"], [68, 3, 1, "", "getEnviron"], [68, 3, 1, "", "getHome"], [68, 3, 1, "", "getProgram"], [68, 3, 1, "", "getSymmetry"], [68, 3, 1, "", "runProgram"]], "pwem.viewers.viewer_chimera.ChimeraAngDist": [[68, 3, 1, "", "createAngularDistributionFile"], [68, 3, 1, "", "initVolumeData"], [68, 3, 1, "", "readAngularDistFile"]], "pwem.viewers.viewer_chimera.ChimeraDataView": [[68, 3, 1, "", "show"]], "pwem.viewers.viewer_fsc": [[69, 1, 1, "", "FscViewer"]], "pwem.viewers.viewer_fsc.FscViewer": [[69, 3, 1, "", "createFSCObject"], [69, 3, 1, "", "plotFsc"], [69, 3, 1, "", "show"], [69, 3, 1, "", "visualize"]], "pwem.viewers.viewer_localres": [[70, 1, 1, "", "ChimeraAttributeViewer"], [70, 1, 1, "", "LocalResolutionViewer"], [70, 5, 1, "", "chimeraInstalled"], [70, 5, 1, "", "getCifKeyName"], [70, 5, 1, "", "getResidueAverage"], [70, 5, 1, "", "getResiduePositions"], [70, 5, 1, "", "getStructureRecipient"], [70, 5, 1, "", "makeResidueValuesDic"], [70, 5, 1, "", "replaceOcuppancyWithAttribute"]], "pwem.viewers.viewer_localres.ChimeraAttributeViewer": [[70, 3, 1, "", "createAttributesFile"], [70, 3, 1, "", "getAtomStructObject"], [70, 3, 1, "", "getColors"], [70, 3, 1, "", "getValuesRange"]], "pwem.viewers.viewer_localres.LocalResolutionViewer": [[70, 2, 1, "", "binaryCondition"], [70, 3, 1, "", "createChimeraScript"], [70, 3, 1, "", "getImgData"], [70, 3, 1, "", "getSlice"], [70, 3, 1, "", "getSliceImage"]], "pwem.viewers.viewer_pdf": [[71, 1, 1, "", "PDFReportViewer"]], "pwem.viewers.viewer_pdf.PDFReportViewer": [[71, 3, 1, "", "visualize"]], "pwem.viewers.viewer_sequence": [[72, 1, 1, "", "SequenceViewer"]], "pwem.viewers.viewer_sequence.SequenceViewer": [[72, 3, 1, "", "visualize"]], "pwem.viewers.viewer_vmd": [[73, 1, 1, "", "Vmd"], [73, 1, 1, "", "VmdView"], [73, 1, 1, "", "VmdViewer"]], "pwem.viewers.viewer_vmd.Vmd": [[73, 3, 1, "", "getEnviron"]], "pwem.viewers.viewer_vmd.VmdView": [[73, 3, 1, "", "show"]], "pwem.viewers.viewer_vmd.VmdViewer": [[73, 3, 1, "", "visualize"]], "pwem.viewers.viewer_volumes": [[74, 5, 1, "", "errorWindow"], [74, 1, 1, "", "viewerProtImportVolumes"]], "pwem.viewers.viewers_data": [[75, 1, 1, "", "DataViewer"]], "pwem.viewers.viewers_data.DataViewer": [[75, 3, 1, "", "registerConfig"]], "pwem.viewers.views": [[77, 1, 1, "", "Classes3DView"], [77, 1, 1, "", "ClassesView"], [77, 1, 1, "", "CoordinatesObjectView"], [77, 1, 1, "", "CtfView"], [77, 1, 1, "", "DataView"], [77, 1, 1, "", "ImageView"], [77, 1, 1, "", "MicrographsView"], [77, 1, 1, "", "ObjectView"], [77, 1, 1, "", "TableView"]], "pwem.viewers.views.CoordinatesObjectView": [[77, 2, 1, "", "MODE_AUTOMATIC"], [77, 3, 1, "", "show"]], "pwem.viewers.views.CtfView": [[77, 2, 1, "", "EXTRA_LABELS"], [77, 2, 1, "", "PSD_LABELS"]], "pwem.viewers.views.DataView": [[77, 3, 1, "", "getPath"], [77, 3, 1, "", "getShowJParams"], [77, 3, 1, "", "getShowJWebParams"], [77, 3, 1, "", "getTableName"], [77, 3, 1, "", "getViewParams"], [77, 3, 1, "", "setMemory"], [77, 3, 1, "", "show"]], "pwem.viewers.views.ImageView": [[77, 3, 1, "", "getImagePath"]], "pwem.viewers.views.MicrographsView": [[77, 2, 1, "", "EXTRA_LABELS"], [77, 2, 1, "", "RENDER_LABELS"]], "pwem.viewers.views.ObjectView": [[77, 3, 1, "", "getShowJParams"], [77, 3, 1, "", "show"]], "pwem.viewers.views.TableView": [[77, 3, 1, "", "saveData"]], "pwem.wizards": [[79, 0, 0, "-", "wizard"], [80, 0, 0, "-", "wizards"], [81, 0, 0, "-", "wizards_3d"]], "pwem.wizards.wizard": [[79, 1, 1, "", "BandPassFilterDialog"], [79, 1, 1, "", "ColorScaleDialog"], [79, 1, 1, "", "ColorScaleWizardBase"], [79, 1, 1, "", "CtfDialog"], [79, 1, 1, "", "CtfDownsampleDialog"], [79, 1, 1, "", "CtfWizard"], [79, 1, 1, "", "DownsampleDialog"], [79, 1, 1, "", "DownsampleWizard"], [79, 1, 1, "", "EmWizard"], [79, 1, 1, "", "FilterParticlesWizard"], [79, 1, 1, "", "FilterVolumesWizard"], [79, 1, 1, "", "FilterWizard"], [79, 1, 1, "", "FormulaDialog"], [79, 1, 1, "", "GaussianFilterDialog"], [79, 1, 1, "", "GaussianParticlesWizard"], [79, 1, 1, "", "GaussianVolumesWizard"], [79, 1, 1, "", "GaussianWizard"], [79, 1, 1, "", "ImagePreviewDialog"], [79, 1, 1, "", "MaskPreviewDialog"], [79, 1, 1, "", "MaskRadiiPreviewDialog"], [79, 1, 1, "", "MaskRadiiWizard"], [79, 1, 1, "", "MaskRadiusWizard"], [79, 1, 1, "", "PDBVolumeWizard"], [79, 1, 1, "", "ParticleMaskRadiusWizard"], [79, 1, 1, "", "ParticlesMaskRadiiWizard"], [79, 1, 1, "", "PreviewDialog"], [79, 1, 1, "", "VariableWizard"], [79, 1, 1, "", "VolumeMaskRadiiWizard"], [79, 1, 1, "", "VolumeMaskRadiusWizard"], [79, 5, 1, "", "insertText"]], "pwem.wizards.wizard.BandPassFilterDialog": [[79, 3, 1, "", "addFreqSlider"], [79, 3, 1, "", "getFreqDecay"], [79, 3, 1, "", "getHighFreq"], [79, 3, 1, "", "getLowFreq"], [79, 3, 1, "", "updateFilteredImage"]], "pwem.wizards.wizard.ColorScaleDialog": [[79, 3, 1, "", "body"], [79, 3, 1, "", "getAvailablePalettes"], [79, 3, 1, "", "getColorPalette"], [79, 3, 1, "", "getHighest"], [79, 3, 1, "", "getIntervals"], [79, 3, 1, "", "getLowest"]], "pwem.wizards.wizard.ColorScaleWizardBase": [[79, 3, 1, "", "defineColorScaleParams"], [79, 3, 1, "", "defineTargets"], [79, 3, 1, "", "show"]], "pwem.wizards.wizard.CtfDialog": [[79, 3, 1, "", "downKeyPress"], [79, 3, 1, "", "getDownsample"], [79, 3, 1, "", "getFreq"], [79, 3, 1, "", "getHighFreq"], [79, 3, 1, "", "getLowFreq"], [79, 3, 1, "", "highlightInnerSlider"], [79, 3, 1, "", "highlightOuterSlider"], [79, 3, 1, "", "makeBigger"], [79, 3, 1, "", "makeSmaller"], [79, 3, 1, "", "manageMaskVals"], [79, 3, 1, "", "setFreq"], [79, 3, 1, "", "showValues"], [79, 3, 1, "", "upKeyPress"], [79, 3, 1, "", "updateFreqRing"], [79, 3, 1, "", "updateSliderInnerRadius"], [79, 3, 1, "", "updateSliderOuterRadius"]], "pwem.wizards.wizard.CtfDownsampleDialog": [[79, 3, 1, "", "getDownsample"]], "pwem.wizards.wizard.CtfWizard": [[79, 3, 1, "", "getView"], [79, 3, 1, "", "show"]], "pwem.wizards.wizard.DownsampleDialog": [[79, 3, 1, "", "getDownsample"], [79, 3, 1, "", "manageMaskVals"]], "pwem.wizards.wizard.DownsampleWizard": [[79, 3, 1, "", "getView"], [79, 3, 1, "", "show"]], "pwem.wizards.wizard.FilterWizard": [[79, 3, 1, "", "show"]], "pwem.wizards.wizard.FormulaDialog": [[79, 3, 1, "", "addAttributeToFormula"], [79, 3, 1, "", "body"], [79, 3, 1, "", "evaluateFormula"], [79, 3, 1, "", "getFormula"], [79, 3, 1, "", "getItem"]], "pwem.wizards.wizard.GaussianFilterDialog": [[79, 3, 1, "", "getFreqSigma"]], "pwem.wizards.wizard.GaussianWizard": [[79, 3, 1, "", "show"]], "pwem.wizards.wizard.MaskPreviewDialog": [[79, 3, 1, "", "addRadiusBox"], [79, 3, 1, "", "getRadius"], [79, 3, 1, "", "getRadiusAngstroms"], [79, 3, 1, "", "makeBigger"], [79, 3, 1, "", "makeSmaller"], [79, 3, 1, "", "manageMaskVals"], [79, 3, 1, "", "setRadius"], [79, 3, 1, "", "showValues"], [79, 3, 1, "", "updateSliderRadius"]], "pwem.wizards.wizard.MaskRadiiPreviewDialog": [[79, 3, 1, "", "downKeyPress"], [79, 3, 1, "", "highlightInnerSlider"], [79, 3, 1, "", "highlightOuterSlider"], [79, 3, 1, "", "makeBigger"], [79, 3, 1, "", "makeSmaller"], [79, 3, 1, "", "manageMaskVals"], [79, 3, 1, "", "upKeyPress"], [79, 3, 1, "", "updateSliderInnerRadius"], [79, 3, 1, "", "updateSliderOuterRadius"]], "pwem.wizards.wizard.MaskRadiiWizard": [[79, 3, 1, "", "getView"], [79, 3, 1, "", "show"]], "pwem.wizards.wizard.MaskRadiusWizard": [[79, 3, 1, "", "setVar"], [79, 3, 1, "", "show"]], "pwem.wizards.wizard.PDBVolumeWizard": [[79, 3, 1, "", "show"]], "pwem.wizards.wizard.PreviewDialog": [[79, 3, 1, "", "body"]], "pwem.wizards.wizard.VariableWizard": [[79, 3, 1, "", "addTarget"], [79, 3, 1, "", "filterPresentInputs"], [79, 3, 1, "", "getInputOutput"]], "pwem.wizards.wizards": [[80, 1, 1, "", "ChangeOriginSamplingWizard"], [80, 1, 1, "", "ColorScaleWizardRMSD"], [80, 1, 1, "", "GetStructureChainsWizard"], [80, 1, 1, "", "ImportAcquisitionWizard"], [80, 1, 1, "", "ImportCoordinatesBoxSizeWizard"], [80, 1, 1, "", "ImportOriginVolumeWizard"], [80, 1, 1, "", "PythonFormulaWizardX1"], [80, 1, 1, "", "PythonFormulaWizardX2"], [80, 1, 1, "", "PythonFormulaeWizard"], [80, 1, 1, "", "PythonTopRankWizard"], [80, 1, 1, "", "SelectAttributeWizard"], [80, 1, 1, "", "SelectChainWizard"], [80, 1, 1, "", "SelectResidueWizard"]], "pwem.wizards.wizards.ChangeOriginSamplingWizard": [[80, 3, 1, "", "show"]], "pwem.wizards.wizards.GetStructureChainsWizard": [[80, 3, 1, "", "editionListOfChains"], [80, 3, 1, "", "getModelsChainsStep"], [80, 3, 1, "", "show"]], "pwem.wizards.wizards.ImportAcquisitionWizard": [[80, 3, 1, "", "show"]], "pwem.wizards.wizards.ImportCoordinatesBoxSizeWizard": [[80, 3, 1, "", "show"]], "pwem.wizards.wizards.ImportOriginVolumeWizard": [[80, 3, 1, "", "show"]], "pwem.wizards.wizards.PythonFormulaWizardX1": [[80, 3, 1, "", "show"]], "pwem.wizards.wizards.PythonFormulaWizardX2": [[80, 3, 1, "", "show"]], "pwem.wizards.wizards.PythonFormulaeWizard": [[80, 3, 1, "", "show"]], "pwem.wizards.wizards.SelectAttributeWizard": [[80, 3, 1, "", "getFirstItem"], [80, 3, 1, "", "getInputAttributes"], [80, 3, 1, "", "show"]], "pwem.wizards.wizards.SelectChainWizard": [[80, 3, 1, "", "editionListOfChains"], [80, 3, 1, "", "getModelsChainsStep"], [80, 3, 1, "", "show"]], "pwem.wizards.wizards.SelectResidueWizard": [[80, 3, 1, "", "editionListOfResidues"], [80, 3, 1, "", "getResidues"], [80, 3, 1, "", "getSequence"], [80, 3, 1, "", "show"]], "pwem.wizards.wizards_3d": [[82, 0, 0, "-", "callbacks"], [83, 0, 0, "-", "mask_structure_wizard"], [84, 0, 0, "-", "mask_volume_wizard"]], "pwem.wizards.wizards_3d.callbacks": [[82, 1, 1, "", "DraggablePoint"]], "pwem.wizards.wizards_3d.callbacks.DraggablePoint": [[82, 3, 1, "", "connect"], [82, 3, 1, "", "disconnect"], [82, 3, 1, "", "getxyz"], [82, 2, 1, "", "lock"], [82, 3, 1, "", "on_motion"], [82, 3, 1, "", "on_press"], [82, 3, 1, "", "on_release"], [82, 3, 1, "", "remove_projection_direction"]], "pwem.wizards.wizards_3d.mask_structure_wizard": [[83, 1, 1, "", "MaskStructureWizard"]], "pwem.wizards.wizards_3d.mask_structure_wizard.MaskStructureWizard": [[83, 3, 1, "", "change_view"], [83, 3, 1, "", "downsamplingPC"], [83, 3, 1, "", "get_sphere_params"], [83, 3, 1, "", "initializePlot"], [83, 3, 1, "", "is_window_closed"], [83, 3, 1, "", "on_release"], [83, 3, 1, "", "plotScatter"], [83, 3, 1, "", "plot_sphere"], [83, 3, 1, "", "press_shift"], [83, 3, 1, "", "release_shift"], [83, 3, 1, "", "set_axes_equal"]], "pwem.wizards.wizards_3d.mask_volume_wizard": [[84, 1, 1, "", "MaskVolumeWizard"]], "pwem.wizards.wizards_3d.mask_volume_wizard.MaskVolumeWizard": [[84, 3, 1, "", "changeThreshold"], [84, 3, 1, "", "change_view"], [84, 3, 1, "", "downsamplingPC"], [84, 3, 1, "", "get_sphere_params"], [84, 3, 1, "", "initializePlot"], [84, 3, 1, "", "is_window_closed"], [84, 3, 1, "", "on_release"], [84, 3, 1, "", "plotScatter"], [84, 3, 1, "", "plot_sphere"], [84, 3, 1, "", "press_shift"], [84, 3, 1, "", "release_shift"], [84, 3, 1, "", "remove_outliers"], [84, 3, 1, "", "set_axes_equal"]], "pyworkflow": [[88, 0, 0, "-", "apps"], [101, 0, 0, "-", "config"], [102, 0, 0, "-", "constants"], [103, 0, 0, "-", "exceptions"], [104, 0, 0, "-", "gui"], [131, 0, 0, "-", "mapper"], [136, 0, 0, "-", "object"], [137, 0, 0, "-", "plugin"], [138, 0, 0, "-", "project"], [142, 0, 0, "-", "protocol"], [151, 0, 0, "-", "template"], [152, 0, 0, "-", "tests"], [155, 0, 0, "-", "utils"], [169, 0, 0, "-", "viewer"], [170, 0, 0, "-", "webservices"], [174, 0, 0, "-", "wizard"]], "pyworkflow.apps": [[89, 0, 0, "-", "pw_manager"], [90, 0, 0, "-", "pw_plot"], [91, 0, 0, "-", "pw_project"], [92, 0, 0, "-", "pw_protocol_list"], [93, 0, 0, "-", "pw_protocol_mpirun"], [94, 0, 0, "-", "pw_protocol_remote"], [95, 0, 0, "-", "pw_protocol_run"], [96, 0, 0, "-", "pw_run_tests"], [97, 0, 0, "-", "pw_schedule_run"], [98, 0, 0, "-", "pw_sleep"], [99, 0, 0, "-", "pw_sync_data"], [100, 0, 0, "-", "pw_viewer"]], "pyworkflow.apps.pw_plot": [[90, 5, 1, "", "main"]], "pyworkflow.apps.pw_project": [[91, 5, 1, "", "openProject"]], "pyworkflow.apps.pw_protocol_list": [[92, 5, 1, "", "getFirstLine"], [92, 5, 1, "", "hasDoubleInheritance"]], "pyworkflow.apps.pw_protocol_remote": [[94, 5, 1, "", "usage"]], "pyworkflow.apps.pw_run_tests": [[96, 1, 1, "", "Tester"]], "pyworkflow.apps.pw_run_tests.Tester": [[96, 3, 1, "", "getTestsCommand"], [96, 3, 1, "", "main"], [96, 3, 1, "", "printTests"], [96, 3, 1, "", "runSingleTest"], [96, 3, 1, "", "runTests"]], "pyworkflow.apps.pw_schedule_run": [[97, 1, 1, "", "RunScheduler"], [97, 5, 1, "", "parseArgs"]], "pyworkflow.apps.pw_schedule_run.RunScheduler": [[97, 3, 1, "", "getInitialSleepTime"], [97, 3, 1, "", "getSleepTime"], [97, 3, 1, "", "schedule"]], "pyworkflow.apps.pw_sync_data": [[99, 5, 1, "", "ask"], [99, 5, 1, "", "check"], [99, 5, 1, "", "createMANIFEST"], [99, 5, 1, "", "download"], [99, 5, 1, "", "get_parser"], [99, 5, 1, "", "listDatasets"], [99, 5, 1, "", "main"], [99, 5, 1, "", "md5sum"], [99, 5, 1, "", "update"], [99, 5, 1, "", "upload"]], "pyworkflow.apps.pw_viewer": [[100, 5, 1, "", "showDir"], [100, 5, 1, "", "showFile"]], "pyworkflow.config": [[101, 1, 1, "", "Config"], [101, 5, 1, "", "findResource"], [101, 5, 1, "", "genNotesHeading"], [101, 5, 1, "", "getAppsPath"], [101, 5, 1, "", "getModuleFolder"], [101, 5, 1, "", "getPwProtMpiRunScript"], [101, 5, 1, "", "getPyworkflowPath"], [101, 5, 1, "", "getScheduleScript"], [101, 5, 1, "", "getSyncDataScript"], [101, 5, 1, "", "getTestsScript"], [101, 5, 1, "", "getViewerScript"], [101, 5, 1, "", "join"]], "pyworkflow.config.Config": [[101, 2, 1, "", "NO_COLOR"], [101, 1, 1, "", "Root"], [101, 2, 1, "", "SCIPION_CANCEL_FASTCOPY"], [101, 2, 1, "", "SCIPION_CONFIG"], [101, 2, 1, "", "SCIPION_CWD"], [101, 2, 1, "", "SCIPION_DOMAIN"], [101, 2, 1, "", "SCIPION_FONT_NAME"], [101, 2, 1, "", "SCIPION_FONT_SIZE"], [101, 2, 1, "", "SCIPION_GUI_CANCEL_AUTO_REFRESH"], [101, 2, 1, "", "SCIPION_GUI_REFRESH_INITIAL_WAIT"], [101, 2, 1, "", "SCIPION_GUI_REFRESH_IN_THREAD"], [101, 2, 1, "", "SCIPION_HOME"], [101, 2, 1, "", "SCIPION_HOSTS"], [101, 2, 1, "", "SCIPION_LOCAL_CONFIG"], [101, 2, 1, "", "SCIPION_LOG"], [101, 2, 1, "", "SCIPION_LOGO"], [101, 2, 1, "", "SCIPION_LOGS"], [101, 2, 1, "", "SCIPION_LOG_CONFIG"], [101, 2, 1, "", "SCIPION_LOG_FORMAT"], [101, 2, 1, "", "SCIPION_LOG_LEVEL"], [101, 2, 1, "", "SCIPION_NOTES_ARGS"], [101, 2, 1, "", "SCIPION_NOTES_FILE"], [101, 2, 1, "", "SCIPION_NOTES_PROGRAM"], [101, 2, 1, "", "SCIPION_NOTIFY"], [101, 2, 1, "", "SCIPION_PLUGIN_JSON"], [101, 2, 1, "", "SCIPION_PLUGIN_REPO_URL"], [101, 2, 1, "", "SCIPION_PRIORITY_PACKAGE_LIST"], [101, 2, 1, "", "SCIPION_PROTOCOLS"], [101, 2, 1, "", "SCIPION_SCRATCH"], [101, 2, 1, "", "SCIPION_SOFTWARE"], [101, 2, 1, "", "SCIPION_STEPS_CHECK_SEC"], [101, 2, 1, "", "SCIPION_SUPPORT_EMAIL"], [101, 2, 1, "", "SCIPION_TESTS"], [101, 2, 1, "", "SCIPION_TESTS_CMD"], [101, 2, 1, "", "SCIPION_TESTS_OUTPUT"], [101, 2, 1, "", "SCIPION_TEST_NOSYNC"], [101, 2, 1, "", "SCIPION_TMP"], [101, 2, 1, "", "SCIPION_UPDATE_SET_ATTEMPTS"], [101, 2, 1, "", "SCIPION_UPDATE_SET_ATTEMPT_WAIT"], [101, 2, 1, "", "SCIPION_URL"], [101, 2, 1, "", "SCIPION_URL_SOFTWARE"], [101, 2, 1, "", "SCIPION_URL_TESTDATA"], [101, 2, 1, "", "SCIPION_USER_DATA"], [101, 2, 1, "", "VIEWERS"], [101, 2, 1, "", "WIZARD_MASK_COLOR"], [101, 3, 1, "", "colorsInTerminal"], [101, 3, 1, "", "debugOn"], [101, 3, 1, "", "debugSQLOn"], [101, 3, 1, "", "getBindingsFolder"], [101, 3, 1, "", "getDomain"], [101, 3, 1, "", "getExternalJsonTemplates"], [101, 3, 1, "", "getLibFolder"], [101, 3, 1, "", "getLogsFolder"], [101, 3, 1, "", "getPriorityPackageList"], [101, 3, 1, "", "getPythonLibFolder"], [101, 3, 1, "", "getStepsCheckSeconds"], [101, 3, 1, "", "getUpdateSetAttempts"], [101, 3, 1, "", "getUpdateSetAttemptsWait"], [101, 3, 1, "", "getVars"], [101, 3, 1, "", "getWizardMaskColor"], [101, 3, 1, "", "printVars"], [101, 3, 1, "", "refreshInThreads"], [101, 3, 1, "", "setDomain"], [101, 3, 1, "", "toggleDebug"], [101, 3, 1, "", "toggleDebugSQL"]], "pyworkflow.config.Config.Root": [[101, 3, 1, "", "join"]], "pyworkflow.constants": [[102, 1, 1, "", "DOCSITEURLS"], [102, 1, 1, "", "TK"]], "pyworkflow.constants.DOCSITEURLS": [[102, 2, 1, "", "CONFIG"], [102, 2, 1, "", "CONFIG_SECTION"], [102, 2, 1, "", "CONTACTUS"], [102, 2, 1, "", "DOCS"], [102, 2, 1, "", "GUI"], [102, 2, 1, "", "HOME"], [102, 2, 1, "", "HOST_CONFIG"], [102, 2, 1, "", "PLUGIN_MANAGER"], [102, 2, 1, "", "USER"], [102, 2, 1, "", "WAIT_FOR"]], "pyworkflow.constants.TK": [[102, 2, 1, "", "ENTER"], [102, 2, 1, "", "LEFT_CLICK"], [102, 2, 1, "", "LEFT_DOUBLE_CLICK"], [102, 2, 1, "", "RETURN"], [102, 2, 1, "", "TREEVIEW_CLOSE"], [102, 2, 1, "", "TREEVIEW_OPEN"]], "pyworkflow.exceptions": [[103, 4, 1, "", "PyworkflowException"], [103, 4, 1, "", "ValidationException"]], "pyworkflow.exceptions.PyworkflowException": [[103, 3, 1, "", "getUrl"]], "pyworkflow.gui": [[105, 0, 0, "-", "browser"], [106, 0, 0, "-", "canvas"], [107, 0, 0, "-", "dialog"], [108, 0, 0, "-", "form"], [109, 0, 0, "-", "graph"], [110, 0, 0, "-", "graph_layout"], [111, 0, 0, "-", "gui"], [112, 0, 0, "-", "matplotlib_image"], [113, 0, 0, "-", "plotter"], [114, 0, 0, "-", "project"], [127, 0, 0, "-", "text"], [128, 0, 0, "-", "tooltip"], [129, 0, 0, "-", "tree"], [130, 0, 0, "-", "widgets"]], "pyworkflow.gui.browser": [[105, 1, 1, "", "BrowserWindow"], [105, 1, 1, "", "FileBrowser"], [105, 1, 1, "", "FileBrowserWindow"], [105, 1, 1, "", "FileHandler"], [105, 1, 1, "", "FileInfo"], [105, 1, 1, "", "FileTreeProvider"], [105, 1, 1, "", "ObjectBrowser"], [105, 1, 1, "", "ShortCut"], [105, 1, 1, "", "SqlFileHandler"], [105, 1, 1, "", "TextFileHandler"], [105, 5, 1, "", "isStandardImage"]], "pyworkflow.gui.browser.BrowserWindow": [[105, 3, 1, "", "setBrowser"]], "pyworkflow.gui.browser.FileBrowser": [[105, 3, 1, "", "getCurrentDir"], [105, 3, 1, "", "getEntryValue"], [105, 3, 1, "", "onClose"]], "pyworkflow.gui.browser.FileBrowserWindow": [[105, 3, 1, "", "getCurrentDir"], [105, 3, 1, "", "getEntryValue"], [105, 3, 1, "", "registerHandlers"]], "pyworkflow.gui.browser.FileHandler": [[105, 3, 1, "", "getFileActions"], [105, 3, 1, "", "getFileIcon"], [105, 3, 1, "", "getFilePreview"]], "pyworkflow.gui.browser.FileInfo": [[105, 3, 1, "", "getDate"], [105, 3, 1, "", "getDateStr"], [105, 3, 1, "", "getFileName"], [105, 3, 1, "", "getPath"], [105, 3, 1, "", "getSize"], [105, 3, 1, "", "getSizeStr"], [105, 3, 1, "", "isDir"], [105, 3, 1, "", "isLink"]], "pyworkflow.gui.browser.FileTreeProvider": [[105, 2, 1, "", "FILE_COLUMN"], [105, 2, 1, "", "SIZE_COLUMN"], [105, 3, 1, "", "fileKey"], [105, 3, 1, "", "getDir"], [105, 3, 1, "", "getFileHandlers"], [105, 3, 1, "", "getObjectActions"], [105, 3, 1, "", "getObjectInfo"], [105, 3, 1, "", "getObjectPreview"], [105, 3, 1, "", "getObjects"], [105, 3, 1, "", "registerFileHandler"], [105, 3, 1, "", "setDir"]], "pyworkflow.gui.browser.ObjectBrowser": [[105, 3, 1, "", "getSelected"]], "pyworkflow.gui.browser.ShortCut": [[105, 3, 1, "", "factory"]], "pyworkflow.gui.browser.SqlFileHandler": [[105, 3, 1, "", "getFileIcon"]], "pyworkflow.gui.browser.TextFileHandler": [[105, 3, 1, "", "getFileIcon"]], "pyworkflow.gui.canvas": [[106, 1, 1, "", "Cable"], [106, 1, 1, "", "Canvas"], [106, 1, 1, "", "ColoredConnector"], [106, 1, 1, "", "Connector"], [106, 1, 1, "", "Edge"], [106, 1, 1, "", "Item"], [106, 1, 1, "", "Oval"], [106, 1, 1, "", "Rectangle"], [106, 1, 1, "", "RoundConnector"], [106, 1, 1, "", "RoundedTextBox"], [106, 1, 1, "", "SquareConnector"], [106, 1, 1, "", "TextBox"], [106, 1, 1, "", "TextCircle"], [106, 1, 1, "", "TextItem"], [106, 5, 1, "", "findClosestConnectors"], [106, 5, 1, "", "findClosestPoints"], [106, 5, 1, "", "findStrictClosestConnectors"], [106, 5, 1, "", "findUpDownClosestConnectors"], [106, 5, 1, "", "getConnectors"]], "pyworkflow.gui.canvas.Cable": [[106, 3, 1, "", "dstMoved"], [106, 3, 1, "", "paint"], [106, 3, 1, "", "paintPlugs"], [106, 3, 1, "", "srcMoved"], [106, 3, 1, "", "updateCoords"]], "pyworkflow.gui.canvas.Canvas": [[106, 3, 1, "", "addItem"], [106, 3, 1, "", "clear"], [106, 3, 1, "", "createCable"], [106, 3, 1, "", "createEdge"], [106, 3, 1, "", "createRoundedTextbox"], [106, 3, 1, "", "createTextCircle"], [106, 3, 1, "", "createTextbox"], [106, 3, 1, "", "drawGraph"], [106, 3, 1, "", "getCoordinates"], [106, 3, 1, "", "getImage"], [106, 3, 1, "", "getRunsFont"], [106, 3, 1, "", "hideTooltip"], [106, 3, 1, "", "moveTo"], [106, 3, 1, "", "move_start"], [106, 3, 1, "", "multipleItemsSelected"], [106, 3, 1, "", "onButton1Release"], [106, 3, 1, "", "onClick"], [106, 3, 1, "", "onControlClick"], [106, 3, 1, "", "onDoubleClick"], [106, 3, 1, "", "onDrag"], [106, 3, 1, "", "onLeave"], [106, 3, 1, "", "onMotion"], [106, 3, 1, "", "onRightClick"], [106, 3, 1, "", "reorganizeGraph"], [106, 3, 1, "", "selectItem"], [106, 3, 1, "", "updateScrollRegion"], [106, 3, 1, "", "zoomerM"], [106, 3, 1, "", "zoomerP"]], "pyworkflow.gui.canvas.Connector": [[106, 3, 1, "", "move"], [106, 3, 1, "", "paintPlug"], [106, 3, 1, "", "paintSocket"]], "pyworkflow.gui.canvas.Edge": [[106, 3, 1, "", "paint"], [106, 3, 1, "", "updateColor"], [106, 3, 1, "", "updateDst"], [106, 3, 1, "", "updateSrc"]], "pyworkflow.gui.canvas.Item": [[106, 2, 1, "", "BOTTOM"], [106, 2, 1, "", "LEFT"], [106, 2, 1, "", "RIGHT"], [106, 2, 1, "", "TOP"], [106, 3, 1, "", "addPositionListener"], [106, 3, 1, "", "addSelectionListener"], [106, 3, 1, "", "addSocket"], [106, 3, 1, "", "countSockets"], [106, 3, 1, "", "getBottomConnectorCoordinates"], [106, 3, 1, "", "getCenter"], [106, 3, 1, "", "getConnectorsCoordinates"], [106, 3, 1, "", "getCorners"], [106, 3, 1, "", "getDimensions"], [106, 3, 1, "", "getInputConnectorCoordinates"], [106, 3, 1, "", "getLeftConnectorCoordinates"], [106, 3, 1, "", "getOutputConnectorCoordinates"], [106, 3, 1, "", "getRightConnectorCoordinates"], [106, 3, 1, "", "getSelected"], [106, 3, 1, "", "getSocket"], [106, 3, 1, "", "getSocketCoords"], [106, 3, 1, "", "getSocketCoordsAt"], [106, 3, 1, "", "getSocketsAt"], [106, 3, 1, "", "getTopConnectorCoordinates"], [106, 3, 1, "", "getUpDownConnectorsCoordinates"], [106, 3, 1, "", "lift"], [106, 3, 1, "", "lower"], [106, 3, 1, "", "move"], [106, 3, 1, "", "moveTo"], [106, 3, 1, "", "paintSocket"], [106, 3, 1, "", "paintSockets"], [106, 3, 1, "", "relocateSockets"], [106, 3, 1, "", "setSelected"], [106, 2, 1, "", "socketSeparation"], [106, 2, 1, "", "verticalFlow"]], "pyworkflow.gui.canvas.Oval": [[106, 3, 1, "", "paint"], [106, 3, 1, "", "selectionListener"], [106, 3, 1, "", "updateSrc"]], "pyworkflow.gui.canvas.Rectangle": [[106, 3, 1, "", "paint"], [106, 3, 1, "", "selectionListener"], [106, 3, 1, "", "updateSrc"]], "pyworkflow.gui.canvas.RoundConnector": [[106, 3, 1, "", "paintPlug"], [106, 3, 1, "", "paintSocket"], [106, 2, 1, "", "radius"]], "pyworkflow.gui.canvas.RoundedTextBox": [[106, 3, 1, "", "getDimensions"]], "pyworkflow.gui.canvas.SquareConnector": [[106, 2, 1, "", "halfside"], [106, 3, 1, "", "paintPlug"], [106, 3, 1, "", "paintSocket"]], "pyworkflow.gui.canvas.TextItem": [[106, 3, 1, "", "lift"], [106, 3, 1, "", "lower"], [106, 3, 1, "", "move"], [106, 3, 1, "", "paint"]], "pyworkflow.gui.dialog": [[107, 1, 1, "", "Dialog"], [107, 1, 1, "", "EditObjectDialog"], [107, 1, 1, "", "EntryDialog"], [107, 1, 1, "", "ExceptionDialog"], [107, 1, 1, "", "FileBrowseDialog"], [107, 1, 1, "", "FlashMessage"], [107, 1, 1, "", "FloatingMessage"], [107, 1, 1, "", "GenericDialog"], [107, 1, 1, "", "ListDialog"], [107, 1, 1, "", "MessageDialog"], [107, 1, 1, "", "SearchBaseWindow"], [107, 1, 1, "", "ToolbarButton"], [107, 1, 1, "", "ToolbarListDialog"], [107, 1, 1, "", "YesNoDialog"], [107, 5, 1, "", "askColor"], [107, 5, 1, "", "askSingleAllCancel"], [107, 5, 1, "", "askString"], [107, 5, 1, "", "askYesNo"], [107, 5, 1, "", "askYesNoCancel"], [107, 5, 1, "", "createMessageBody"], [107, 5, 1, "", "fillMessageText"], [107, 5, 1, "", "showError"], [107, 5, 1, "", "showInfo"], [107, 5, 1, "", "showWarning"]], "pyworkflow.gui.dialog.Dialog": [[107, 3, 1, "", "apply"], [107, 3, 1, "", "body"], [107, 3, 1, "", "buttonbox"], [107, 3, 1, "", "cancel"], [107, 3, 1, "", "destroy"], [107, 3, 1, "", "getImage"], [107, 3, 1, "", "getResult"], [107, 3, 1, "", "resultCancel"], [107, 3, 1, "", "resultNo"], [107, 3, 1, "", "resultYes"], [107, 3, 1, "", "validate"]], "pyworkflow.gui.dialog.EditObjectDialog": [[107, 3, 1, "", "apply"], [107, 3, 1, "", "body"], [107, 3, 1, "", "buttonbox"], [107, 3, 1, "", "getComment"], [107, 3, 1, "", "getLabel"]], "pyworkflow.gui.dialog.EntryDialog": [[107, 3, 1, "", "apply"], [107, 3, 1, "", "body"], [107, 3, 1, "", "validate"]], "pyworkflow.gui.dialog.ExceptionDialog": [[107, 3, 1, "", "body"]], "pyworkflow.gui.dialog.FileBrowseDialog": [[107, 3, 1, "", "apply"], [107, 3, 1, "", "body"], [107, 3, 1, "", "validate"]], "pyworkflow.gui.dialog.FlashMessage": [[107, 3, 1, "", "close"], [107, 3, 1, "", "process"]], "pyworkflow.gui.dialog.FloatingMessage": [[107, 3, 1, "", "close"], [107, 3, 1, "", "show"]], "pyworkflow.gui.dialog.GenericDialog": [[107, 3, 1, "", "body"]], "pyworkflow.gui.dialog.ListDialog": [[107, 3, 1, "", "apply"], [107, 3, 1, "", "body"], [107, 3, 1, "", "validate"]], "pyworkflow.gui.dialog.MessageDialog": [[107, 3, 1, "", "body"]], "pyworkflow.gui.dialog.SearchBaseWindow": [[107, 2, 1, "", "CASTING_INDEX"], [107, 2, 1, "", "COLUMN_KWARGS_INDEX"], [107, 2, 1, "", "COLUMN_TEXT_INDEX"], [107, 2, 1, "", "WEIGHT_INDEX"], [107, 3, 1, "", "addSearchWeight"], [107, 2, 1, "", "columnConfig"], [107, 3, 1, "", "getColumnKeys"]], "pyworkflow.gui.dialog.ToolbarListDialog": [[107, 3, 1, "", "body"]], "pyworkflow.gui.form": [[108, 1, 1, "", "Binding"], [108, 1, 1, "", "BoolVar"], [108, 1, 1, "", "ComboVar"], [108, 1, 1, "", "FormWindow"], [108, 1, 1, "", "GroupWidget"], [108, 1, 1, "", "LineWidget"], [108, 1, 1, "", "MultiPointerTreeProvider"], [108, 1, 1, "", "MultiPointerVar"], [108, 1, 1, "", "ParamWidget"], [108, 1, 1, "", "PointerVar"], [108, 1, 1, "", "ProtocolClassTreeProvider"], [108, 1, 1, "", "QueueDialog"], [108, 1, 1, "", "RelationsTreeProvider"], [108, 1, 1, "", "ScalarTreeProvider"], [108, 1, 1, "", "ScalarWithPointerVar"], [108, 1, 1, "", "SectionFrame"], [108, 1, 1, "", "SectionWidget"], [108, 1, 1, "", "SubclassesTreeProvider"], [108, 1, 1, "", "TextVar"], [108, 1, 1, "", "VerticalScrolledFrame"], [108, 5, 1, "", "editObject"], [108, 5, 1, "", "getObjectLabel"], [108, 5, 1, "", "getPointerLabelAndInfo"]], "pyworkflow.gui.form.BoolVar": [[108, 3, 1, "", "get"], [108, 3, 1, "", "set"]], "pyworkflow.gui.form.ComboVar": [[108, 3, 1, "", "get"], [108, 3, 1, "", "set"]], "pyworkflow.gui.form.FormWindow": [[108, 3, 1, "", "adjustSections"], [108, 3, 1, "", "adjustSize"], [108, 3, 1, "", "execute"], [108, 3, 1, "", "getVarValue"], [108, 3, 1, "", "getWidgetValue"], [108, 3, 1, "", "resize"], [108, 3, 1, "", "save"], [108, 3, 1, "", "schedule"], [108, 3, 1, "", "setParamFromVar"], [108, 3, 1, "", "setVar"], [108, 3, 1, "", "setVarFromParam"], [108, 3, 1, "", "updateLabelAndCommentVars"], [108, 3, 1, "", "updateProtocolLabel"], [108, 3, 1, "", "updateProtocolParams"]], "pyworkflow.gui.form.GroupWidget": [[108, 3, 1, "", "hide"], [108, 3, 1, "", "show"]], "pyworkflow.gui.form.LineWidget": [[108, 3, 1, "", "show"]], "pyworkflow.gui.form.MultiPointerTreeProvider": [[108, 3, 1, "", "addObject"], [108, 3, 1, "", "clear"], [108, 3, 1, "", "getColumns"], [108, 3, 1, "", "getObjectInfo"], [108, 3, 1, "", "getObjects"], [108, 3, 1, "", "removeObject"]], "pyworkflow.gui.form.MultiPointerVar": [[108, 3, 1, "", "clear"], [108, 3, 1, "", "get"], [108, 3, 1, "", "getSelectedObjects"], [108, 3, 1, "", "remove"], [108, 3, 1, "", "set"]], "pyworkflow.gui.form.ParamWidget": [[108, 3, 1, "", "clear"], [108, 3, 1, "", "createBoolWidget"], [108, 3, 1, "", "display"], [108, 3, 1, "", "get"], [108, 3, 1, "", "hide"], [108, 3, 1, "", "isMultiPointer"], [108, 3, 1, "", "set"], [108, 3, 1, "", "show"]], "pyworkflow.gui.form.PointerVar": [[108, 3, 1, "", "get"], [108, 3, 1, "", "getPointer"], [108, 3, 1, "", "remove"], [108, 3, 1, "", "set"]], "pyworkflow.gui.form.ProtocolClassTreeProvider": [[108, 3, 1, "", "getColumns"], [108, 3, 1, "", "getObjectInfo"], [108, 3, 1, "", "getObjects"]], "pyworkflow.gui.form.QueueDialog": [[108, 3, 1, "", "apply"], [108, 3, 1, "", "body"], [108, 3, 1, "", "validate"]], "pyworkflow.gui.form.RelationsTreeProvider": [[108, 3, 1, "", "getObjects"]], "pyworkflow.gui.form.ScalarTreeProvider": [[108, 2, 1, "", "CREATION_COLUMN"], [108, 2, 1, "", "INFO_COLUMN"], [108, 3, 1, "", "getColumns"], [108, 3, 1, "", "getObjectInfo"], [108, 3, 1, "", "getObjects"], [108, 3, 1, "", "isSelected"], [108, 3, 1, "", "objectKey"]], "pyworkflow.gui.form.ScalarWithPointerVar": [[108, 3, 1, "", "get"], [108, 3, 1, "", "getPointer"], [108, 3, 1, "", "hasPointer"], [108, 3, 1, "", "set"], [108, 3, 1, "", "trace"]], "pyworkflow.gui.form.SectionFrame": [[108, 3, 1, "", "adjustContent"]], "pyworkflow.gui.form.SectionWidget": [[108, 3, 1, "", "get"], [108, 3, 1, "", "hide"], [108, 3, 1, "", "set"], [108, 3, 1, "", "show"]], "pyworkflow.gui.form.SubclassesTreeProvider": [[108, 2, 1, "", "CREATION_COLUMN"], [108, 2, 1, "", "ID_COLUMN"], [108, 2, 1, "", "INFO_COLUMN"], [108, 3, 1, "", "getColumns"], [108, 3, 1, "", "getObjectActions"], [108, 3, 1, "", "getObjectInfo"], [108, 3, 1, "", "getObjects"], [108, 3, 1, "", "isSelected"], [108, 3, 1, "", "objectKey"]], "pyworkflow.gui.form.TextVar": [[108, 3, 1, "", "get"], [108, 3, 1, "", "set"]], "pyworkflow.gui.graph": [[109, 1, 1, "", "LevelTree"]], "pyworkflow.gui.graph.LevelTree": [[109, 3, 1, "", "paint"], [109, 3, 1, "", "setCanvas"]], "pyworkflow.gui.graph_layout": [[110, 1, 1, "", "BasicLayout"], [110, 1, 1, "", "GraphLayout"], [110, 1, 1, "", "LevelTreeLayout"]], "pyworkflow.gui.graph_layout.BasicLayout": [[110, 3, 1, "", "draw"]], "pyworkflow.gui.graph_layout.GraphLayout": [[110, 3, 1, "", "draw"], [110, 3, 1, "", "getFontScaleFactor"], [110, 3, 1, "", "getY"]], "pyworkflow.gui.graph_layout.LevelTreeLayout": [[110, 3, 1, "", "draw"]], "pyworkflow.gui.gui": [[111, 1, 1, "", "Config"], [111, 1, 1, "", "Window"], [111, 5, 1, "", "aliasFont"], [111, 5, 1, "", "centerWindows"], [111, 5, 1, "", "changeFontSize"], [111, 5, 1, "", "changeFontSizeByDeltha"], [111, 5, 1, "", "configureWeigths"], [111, 5, 1, "", "defineStyle"], [111, 5, 1, "", "getBigFont"], [111, 5, 1, "", "getDefaultFont"], [111, 5, 1, "", "getGeometry"], [111, 5, 1, "", "getImage"], [111, 5, 1, "", "getNamedFont"], [111, 5, 1, "", "hasFont"], [111, 5, 1, "", "saveConfig"], [111, 5, 1, "", "setCommonFonts"], [111, 5, 1, "", "setFont"]], "pyworkflow.gui.gui.Window": [[111, 3, 1, "", "askYesNo"], [111, 3, 1, "", "close"], [111, 3, 1, "", "configureWeights"], [111, 3, 1, "", "createCloseButton"], [111, 3, 1, "", "createMainMenu"], [111, 3, 1, "", "desiredDimensions"], [111, 3, 1, "", "enqueue"], [111, 3, 1, "", "getImage"], [111, 3, 1, "", "getRoot"], [111, 3, 1, "", "handleMove"], [111, 3, 1, "", "handleResize"], [111, 3, 1, "", "plugin_callback"], [111, 3, 1, "", "registerPluginMenu"], [111, 3, 1, "", "show"], [111, 3, 1, "", "showError"], [111, 3, 1, "", "showInfo"], [111, 3, 1, "", "showWarning"]], "pyworkflow.gui.matplotlib_image": [[112, 1, 1, "", "FigureFrame"], [112, 1, 1, "", "ImagePreview"], [112, 1, 1, "", "MaskPreview"], [112, 1, 1, "", "Preview"], [112, 1, 1, "", "PsdPreview"], [112, 5, 1, "", "createBgImage"], [112, 5, 1, "", "getPngData"], [112, 5, 1, "", "getWedgeExtraParams"]], "pyworkflow.gui.matplotlib_image.FigureFrame": [[112, 3, 1, "", "getCanvas"], [112, 3, 1, "", "getFigure"]], "pyworkflow.gui.matplotlib_image.MaskPreview": [[112, 3, 1, "", "updateMask"]], "pyworkflow.gui.matplotlib_image.Preview": [[112, 3, 1, "", "clear"], [112, 3, 1, "", "setWindowTitle"], [112, 3, 1, "", "updateData"]], "pyworkflow.gui.matplotlib_image.PsdPreview": [[112, 3, 1, "", "createRing"], [112, 3, 1, "", "updateFreq"]], "pyworkflow.gui.plotter": [[113, 1, 1, "", "Plotter"], [113, 5, 1, "", "getHexColorList"]], "pyworkflow.gui.plotter.Plotter": [[113, 3, 1, "", "activate"], [113, 2, 1, "", "backend"], [113, 3, 1, "", "clear"], [113, 3, 1, "", "close"], [113, 3, 1, "", "createCanvas"], [113, 3, 1, "", "createSubPlot"], [113, 3, 1, "", "draw"], [113, 3, 1, "", "getCanvas"], [113, 3, 1, "", "getColorBar"], [113, 3, 1, "", "getFigure"], [113, 3, 1, "", "getLastSubPlot"], [113, 3, 1, "", "isClosed"], [113, 3, 1, "", "legend"], [113, 3, 1, "", "savefig"], [113, 3, 1, "", "setBackend"], [113, 3, 1, "", "show"], [113, 3, 1, "", "showLegend"], [113, 3, 1, "", "tightLayout"]], "pyworkflow.gui.project": [[115, 0, 0, "-", "base"], [116, 0, 0, "-", "constants"], [117, 0, 0, "-", "labels"], [118, 0, 0, "-", "project"], [119, 0, 0, "-", "searchprotocol"], [120, 0, 0, "-", "searchrun"], [121, 0, 0, "-", "steps"], [122, 0, 0, "-", "utils"], [123, 0, 0, "-", "viewdata"], [124, 0, 0, "-", "viewprojects"], [125, 0, 0, "-", "viewprotocols"], [126, 0, 0, "-", "viewprotocols_extra"]], "pyworkflow.gui.project.base": [[115, 1, 1, "", "ProjectBaseWindow"]], "pyworkflow.gui.project.base.ProjectBaseWindow": [[115, 3, 1, "", "addViewList"], [115, 3, 1, "", "createHeaderFrame"], [115, 3, 1, "", "getViewWidget"], [115, 3, 1, "", "onAbout"], [115, 3, 1, "", "onContactSupport"], [115, 3, 1, "", "onExit"], [115, 3, 1, "", "onOnlineHelp"], [115, 3, 1, "", "switchView"]], "pyworkflow.gui.project.labels": [[117, 1, 1, "", "EditLabelDialog"], [117, 1, 1, "", "LabelsDialog"], [117, 1, 1, "", "LabelsTreeProvider"]], "pyworkflow.gui.project.labels.EditLabelDialog": [[117, 3, 1, "", "apply"], [117, 3, 1, "", "body"], [117, 3, 1, "", "validate"]], "pyworkflow.gui.project.labels.LabelsTreeProvider": [[117, 3, 1, "", "configureTags"], [117, 3, 1, "", "getColumns"], [117, 3, 1, "", "getObjectActions"], [117, 3, 1, "", "getObjectInfo"], [117, 3, 1, "", "getObjectPreview"], [117, 3, 1, "", "getObjects"]], "pyworkflow.gui.project.project": [[118, 1, 1, "", "ProjectManagerWindow"], [118, 1, 1, "", "ProjectTCPRequestHandler"], [118, 1, 1, "", "ProjectTCPServer"], [118, 1, 1, "", "ProjectWindow"]], "pyworkflow.gui.project.project.ProjectManagerWindow": [[118, 3, 1, "", "onBrowseFiles"], [118, 3, 1, "", "onGeneral"], [118, 3, 1, "", "onHosts"], [118, 3, 1, "", "onProtocols"], [118, 3, 1, "", "onUser"]], "pyworkflow.gui.project.project.ProjectTCPRequestHandler": [[118, 3, 1, "", "handle"]], "pyworkflow.gui.project.project.ProjectWindow": [[118, 3, 1, "", "createHeaderFrame"], [118, 3, 1, "", "getSettings"], [118, 3, 1, "", "initProjectTCPServer"], [118, 3, 1, "", "loadProject"], [118, 3, 1, "", "manageLabels"], [118, 3, 1, "", "onAddAProtocol"], [118, 3, 1, "", "onBrowseFiles"], [118, 3, 1, "", "onDebugMode"], [118, 3, 1, "", "onExportTreeGraph"], [118, 3, 1, "", "onImportWorkflow"], [118, 3, 1, "", "onLocateAProtocol"], [118, 3, 1, "", "onManageProjectLabels"], [118, 3, 1, "", "onNotes"], [118, 3, 1, "", "onRemoveTemporaryFiles"], [118, 3, 1, "", "onScipionLog"], [118, 3, 1, "", "onSearchWorkflow"], [118, 3, 1, "", "onSelectAllProtocols"], [118, 3, 1, "", "onToggleColorMode"], [118, 3, 1, "", "recalculateCTF"], [118, 3, 1, "", "registerObjectCommand"], [118, 3, 1, "", "runObjectCommand"], [118, 3, 1, "", "saveSettings"], [118, 3, 1, "", "schedulePlot"]], "pyworkflow.gui.project.searchprotocol": [[119, 1, 1, "", "ProtocolTreeProvider"], [119, 1, 1, "", "SearchProtocolWindow"]], "pyworkflow.gui.project.searchprotocol.SearchProtocolWindow": [[119, 2, 1, "", "columnConfig"], [119, 3, 1, "", "scoreProtocols"]], "pyworkflow.gui.project.searchrun": [[120, 1, 1, "", "RunsTreeProvider"], [120, 1, 1, "", "SearchRunWindow"]], "pyworkflow.gui.project.searchrun.RunsTreeProvider": [[120, 3, 1, "", "getActionsFromSelection"], [120, 3, 1, "", "getObjectActions"]], "pyworkflow.gui.project.searchrun.SearchRunWindow": [[120, 2, 1, "", "columnConfig"]], "pyworkflow.gui.project.steps": [[121, 1, 1, "", "StepsTreeProvider"], [121, 1, 1, "", "StepsWindow"]], "pyworkflow.gui.project.steps.StepsTreeProvider": [[121, 3, 1, "", "getObjectInfo"], [121, 3, 1, "", "getObjectPreview"], [121, 3, 1, "", "getObjects"]], "pyworkflow.gui.project.steps.StepsWindow": [[121, 3, 1, "", "fillToolBar"]], "pyworkflow.gui.project.utils": [[122, 1, 1, "", "LinuxHandler"], [122, 1, 1, "", "MacHandler"], [122, 1, 1, "", "OS"], [122, 1, 1, "", "OSHandler"], [122, 1, 1, "", "WindowsHandler"], [122, 5, 1, "", "getStatusColor"], [122, 5, 1, "", "getStatusColorFromNode"], [122, 5, 1, "", "getStatusColorFromRun"], [122, 5, 1, "", "inspectObj"], [122, 5, 1, "", "isAFinalProtocol"]], "pyworkflow.gui.project.utils.LinuxHandler": [[122, 3, 1, "", "maximizeWindow"]], "pyworkflow.gui.project.utils.MacHandler": [[122, 3, 1, "", "maximizeWindow"]], "pyworkflow.gui.project.utils.OS": [[122, 3, 1, "", "getDistro"], [122, 3, 1, "", "getPlatform"], [122, 3, 1, "", "handler"]], "pyworkflow.gui.project.utils.OSHandler": [[122, 3, 1, "", "maximizeWindow"]], "pyworkflow.gui.project.utils.WindowsHandler": [[122, 3, 1, "", "maximizeWindow"]], "pyworkflow.gui.project.viewdata": [[123, 1, 1, "", "DataTextBox"], [123, 1, 1, "", "ProjectDataView"], [123, 5, 1, "", "populateTree"]], "pyworkflow.gui.project.viewdata.ProjectDataView": [[123, 3, 1, "", "refreshData"], [123, 3, 1, "", "toggleItemSelection"]], "pyworkflow.gui.project.viewprojects": [[124, 1, 1, "", "ProjectCreateWindow"], [124, 1, 1, "", "ProjectImportWindow"], [124, 1, 1, "", "ProjectsView"]], "pyworkflow.gui.project.viewprojects.ProjectsView": [[124, 3, 1, "", "addActionsFrame"], [124, 3, 1, "", "createNewProject"], [124, 3, 1, "", "createProjectLabel"], [124, 3, 1, "", "createProjectList"], [124, 3, 1, "", "deleteProject"], [124, 3, 1, "", "importProject"], [124, 3, 1, "", "openProject"], [124, 3, 1, "", "renameProject"]], "pyworkflow.gui.project.viewprotocols": [[125, 6, 1, "", "INIT_REFRESH_SECONDS"], [125, 1, 1, "", "ProtocolsView"], [125, 1, 1, "", "RunBox"], [125, 1, 1, "", "ScipionLogWindow"]], "pyworkflow.gui.project.viewprotocols.ProtocolsView": [[125, 2, 1, "", "RUNS_CANVAS_NAME"], [125, 2, 1, "", "SIZE_COLORS"], [125, 3, 1, "", "cleanInfo"], [125, 3, 1, "", "createActionToolbar"], [125, 3, 1, "", "createContent"], [125, 3, 1, "", "createRunItem"], [125, 3, 1, "", "createRunsGraph"], [125, 3, 1, "", "createRunsTree"], [125, 3, 1, "", "drawRunsGraph"], [125, 3, 1, "", "executeProtocol"], [125, 3, 1, "", "getCurrentProtocolView"], [125, 3, 1, "", "getProtocolViews"], [125, 3, 1, "", "getSelectedProtocol"], [125, 3, 1, "", "hasParentHidden"], [125, 3, 1, "", "info"], [125, 3, 1, "", "keyPressed"], [125, 3, 1, "", "populateTree"], [125, 3, 1, "", "refreshDisplayedRuns"], [125, 3, 1, "", "refreshRuns"], [125, 3, 1, "", "setVisibleNodes"], [125, 3, 1, "", "switchRunsView"], [125, 3, 1, "", "toggleDataSelection"], [125, 3, 1, "", "updateProtocolsTree"], [125, 3, 1, "", "updateRunsGraph"], [125, 3, 1, "", "updateRunsTree"], [125, 3, 1, "", "updateRunsTreeSelection"]], "pyworkflow.gui.project.viewprotocols.RunBox": [[125, 3, 1, "", "move"], [125, 3, 1, "", "moveTo"]], "pyworkflow.gui.project.viewprotocols_extra": [[126, 1, 1, "", "ProtocolConfig"], [126, 1, 1, "", "ProtocolTreeConfig"], [126, 1, 1, "", "RunIOTreeProvider"]], "pyworkflow.gui.project.viewprotocols_extra.ProtocolConfig": [[126, 3, 1, "", "addSubMenu"]], "pyworkflow.gui.project.viewprotocols_extra.ProtocolTreeConfig": [[126, 2, 1, "", "ALL_PROTOCOLS"], [126, 2, 1, "", "PLUGIN_CONFIG_PROTOCOLS"], [126, 2, 1, "", "TAG_PROTOCOL"], [126, 2, 1, "", "TAG_PROTOCOL_BETA"], [126, 2, 1, "", "TAG_PROTOCOL_DISABLED"], [126, 2, 1, "", "TAG_PROTOCOL_GROUP"], [126, 2, 1, "", "TAG_PROTOCOL_NEW"], [126, 2, 1, "", "TAG_SECTION"], [126, 3, 1, "", "getProtocolTag"], [126, 3, 1, "", "load"]], "pyworkflow.gui.project.viewprotocols_extra.RunIOTreeProvider": [[126, 3, 1, "", "getColumns"], [126, 3, 1, "", "getObjectActions"], [126, 3, 1, "", "getObjectInfo"], [126, 3, 1, "", "getObjectLabel"], [126, 3, 1, "", "getObjectPreview"], [126, 3, 1, "", "getObjects"]], "pyworkflow.gui.text": [[127, 1, 1, "", "HyperlinkManager"], [127, 1, 1, "", "OutputText"], [127, 1, 1, "", "TaggedText"], [127, 1, 1, "", "Text"], [127, 1, 1, "", "TextFileViewer"], [127, 5, 1, "", "configureColorTags"], [127, 5, 1, "", "find_prog"], [127, 5, 1, "", "openTextFile"], [127, 5, 1, "", "openTextFileEditor"], [127, 5, 1, "", "showTextFileViewer"]], "pyworkflow.gui.text.HyperlinkManager": [[127, 3, 1, "", "add"], [127, 3, 1, "", "reset"]], "pyworkflow.gui.text.OutputText": [[127, 3, 1, "", "addLine"], [127, 3, 1, "", "configureTags"], [127, 3, 1, "", "doRefresh"], [127, 3, 1, "", "getDefaults"], [127, 3, 1, "", "readFile"]], "pyworkflow.gui.text.TaggedText": [[127, 3, 1, "", "addLine"], [127, 3, 1, "", "configureTags"], [127, 3, 1, "", "getDefaults"], [127, 3, 1, "", "mailTo"], [127, 3, 1, "", "matchHyperText"], [127, 3, 1, "", "openLink"]], "pyworkflow.gui.text.Text": [[127, 3, 1, "", "addLine"], [127, 3, 1, "", "addNewline"], [127, 3, 1, "", "addText"], [127, 3, 1, "", "clear"], [127, 3, 1, "", "configureTags"], [127, 3, 1, "", "copyToClipboard"], [127, 3, 1, "", "getDefaults"], [127, 3, 1, "", "getText"], [127, 3, 1, "", "goBegin"], [127, 3, 1, "", "goEnd"], [127, 3, 1, "", "highlight"], [127, 3, 1, "", "isAtEnd"], [127, 3, 1, "", "onClick"], [127, 3, 1, "", "onRightClick"], [127, 3, 1, "", "openFile"], [127, 3, 1, "", "openPath"], [127, 3, 1, "", "setReadOnly"], [127, 3, 1, "", "setText"], [127, 3, 1, "", "updateMenu"]], "pyworkflow.gui.text.TextFileViewer": [[127, 2, 1, "", "LabelBgColor"], [127, 3, 1, "", "addBinding"], [127, 3, 1, "", "addFile"], [127, 3, 1, "", "buildSearchList"], [127, 3, 1, "", "changeFont"], [127, 3, 1, "", "changePosition"], [127, 3, 1, "", "clear"], [127, 3, 1, "", "createWidgets"], [127, 3, 1, "", "findPrevText"], [127, 3, 1, "", "findText"], [127, 3, 1, "", "getIndex"], [127, 3, 1, "", "nextSearchIndex"], [127, 3, 1, "", "refreshAll"], [127, 3, 1, "", "refreshOutput"], [127, 3, 1, "", "selectedText"], [127, 3, 1, "", "setIndex"]], "pyworkflow.gui.tooltip": [[128, 1, 1, "", "ToolTip"]], "pyworkflow.gui.tooltip.ToolTip": [[128, 3, 1, "", "configure"], [128, 3, 1, "", "coords"], [128, 3, 1, "", "create_contents"], [128, 3, 1, "", "enter"], [128, 3, 1, "", "leave"], [128, 3, 1, "", "motion"]], "pyworkflow.gui.tree": [[129, 1, 1, "", "AttributesTreeProvider"], [129, 1, 1, "", "BoundTree"], [129, 1, 1, "", "DbTreeProvider"], [129, 1, 1, "", "ListTreeProvider"], [129, 1, 1, "", "ListTreeProviderString"], [129, 1, 1, "", "ListTreeProviderTemplate"], [129, 1, 1, "", "ObjectTreeProvider"], [129, 1, 1, "", "ProjectRunsTreeProvider"], [129, 1, 1, "", "Tree"], [129, 1, 1, "", "TreeProvider"]], "pyworkflow.gui.tree.AttributesTreeProvider": [[129, 3, 1, "", "getObjectInfo"], [129, 3, 1, "", "getText"], [129, 3, 1, "", "getValues"]], "pyworkflow.gui.tree.BoundTree": [[129, 3, 1, "", "getColumnKeyByColumnName"], [129, 3, 1, "", "getObjectFromId"], [129, 3, 1, "", "getSelectedObjects"], [129, 3, 1, "", "itemConfig"], [129, 3, 1, "", "iterSelectedObjects"], [129, 3, 1, "", "setProvider"], [129, 3, 1, "", "sortTree"], [129, 3, 1, "", "update"]], "pyworkflow.gui.tree.ListTreeProvider": [[129, 3, 1, "", "getObjectInfo"], [129, 3, 1, "", "getObjs"], [129, 3, 1, "", "getText"]], "pyworkflow.gui.tree.ListTreeProviderString": [[129, 3, 1, "", "getText"]], "pyworkflow.gui.tree.ListTreeProviderTemplate": [[129, 3, 1, "", "getObjectInfo"], [129, 3, 1, "", "getText"], [129, 3, 1, "", "getValues"]], "pyworkflow.gui.tree.ObjectTreeProvider": [[129, 3, 1, "", "getObjectActions"], [129, 3, 1, "", "getObjectInfo"], [129, 3, 1, "", "getObjectPreview"], [129, 3, 1, "", "getObjects"]], "pyworkflow.gui.tree.ProjectRunsTreeProvider": [[129, 2, 1, "", "ID_COLUMN"], [129, 2, 1, "", "RUN_COLUMN"], [129, 2, 1, "", "STATE_COLUMN"], [129, 2, 1, "", "TIME_COLUMN"], [129, 3, 1, "", "getColumns"], [129, 3, 1, "", "getObjectFromId"], [129, 3, 1, "", "getObjectInfo"], [129, 3, 1, "", "getObjects"], [129, 3, 1, "", "runsKey"], [129, 3, 1, "", "setRefresh"]], "pyworkflow.gui.tree.Tree": [[129, 3, 1, "", "clear"], [129, 3, 1, "", "getFirst"], [129, 3, 1, "", "getImage"], [129, 3, 1, "", "moveItemDown"], [129, 3, 1, "", "moveItemUp"], [129, 3, 1, "", "moveSelectionDown"], [129, 3, 1, "", "moveSelectionUp"], [129, 3, 1, "", "search"], [129, 3, 1, "", "selectChild"], [129, 3, 1, "", "selectChildByIndex"], [129, 3, 1, "", "sortByColumn"]], "pyworkflow.gui.tree.TreeProvider": [[129, 3, 1, "", "configureTags"], [129, 3, 1, "", "getColumns"], [129, 3, 1, "", "getObjectActions"], [129, 3, 1, "", "getObjectInfo"], [129, 3, 1, "", "getObjectPreview"], [129, 3, 1, "", "getObjects"], [129, 3, 1, "", "getSortingColumnName"], [129, 3, 1, "", "isSortingAscending"], [129, 3, 1, "", "setSortingParams"], [129, 3, 1, "", "sortEnabled"]], "pyworkflow.gui.widgets": [[130, 1, 1, "", "AutoScrollbar"], [130, 1, 1, "", "Button"], [130, 1, 1, "", "ComboBox"], [130, 1, 1, "", "ExplanationText"], [130, 1, 1, "", "GradientFrame"], [130, 1, 1, "", "HotButton"], [130, 1, 1, "", "IconButton"], [130, 1, 1, "", "LabelSlider"], [130, 1, 1, "", "Scrollable"]], "pyworkflow.gui.widgets.AutoScrollbar": [[130, 3, 1, "", "set"]], "pyworkflow.gui.widgets.Button": [[130, 3, 1, "", "setImage"]], "pyworkflow.gui.widgets.ComboBox": [[130, 3, 1, "", "getIndex"], [130, 3, 1, "", "getText"], [130, 3, 1, "", "getValue"], [130, 3, 1, "", "setChangeCallback"]], "pyworkflow.gui.widgets.ExplanationText": [[130, 3, 1, "", "updateExpText"]], "pyworkflow.gui.widgets.LabelSlider": [[130, 3, 1, "", "get"], [130, 3, 1, "", "highlightLabel"], [130, 3, 1, "", "removeHighlightFromLabel"]], "pyworkflow.gui.widgets.Scrollable": [[130, 3, 1, "", "bindWidget"], [130, 3, 1, "", "getHScroll"], [130, 3, 1, "", "getVScroll"], [130, 3, 1, "", "scroll"], [130, 3, 1, "", "scrollH"], [130, 3, 1, "", "scrollV"]], "pyworkflow.mapper": [[132, 0, 0, "-", "mapper"], [133, 0, 0, "-", "sqlite"], [134, 0, 0, "-", "sqlite_db"], [135, 0, 0, "-", "xmlmapper"]], "pyworkflow.mapper.mapper": [[132, 1, 1, "", "Mapper"]], "pyworkflow.mapper.mapper.Mapper": [[132, 2, 1, "", "ORIGINAL_CLASS_NAME_ATTRIBUTE"], [132, 3, 1, "", "annotateClassName"], [132, 3, 1, "", "commit"], [132, 3, 1, "", "deleteRelations"], [132, 3, 1, "", "exists"], [132, 3, 1, "", "getFullName"], [132, 3, 1, "", "getObjectPersistingClassName"], [132, 3, 1, "", "getParent"], [132, 3, 1, "", "getRelationChilds"], [132, 3, 1, "", "getRelationParents"], [132, 3, 1, "", "getRelationsByCreator"], [132, 3, 1, "", "insert"], [132, 3, 1, "", "insertRelation"], [132, 3, 1, "", "selectAll"], [132, 3, 1, "", "selectBy"], [132, 3, 1, "", "selectByClass"], [132, 3, 1, "", "selectById"], [132, 3, 1, "", "selectFirst"], [132, 3, 1, "", "store"], [132, 3, 1, "", "update"], [132, 3, 1, "", "updateFrom"], [132, 3, 1, "", "updateTo"], [132, 3, 1, "", "warning"]], "pyworkflow.mapper.sqlite": [[133, 1, 1, "", "SqliteFlatDb"], [133, 1, 1, "", "SqliteFlatMapper"], [133, 4, 1, "", "SqliteFlatMapperException"], [133, 1, 1, "", "SqliteMapper"], [133, 1, 1, "", "SqliteObjectsDb"]], "pyworkflow.mapper.sqlite.SqliteFlatDb": [[133, 2, 1, "", "CLASS_MAP"], [133, 2, 1, "", "VERSION"], [133, 3, 1, "", "aggregate"], [133, 3, 1, "", "clear"], [133, 3, 1, "", "count"], [133, 3, 1, "", "createTables"], [133, 3, 1, "", "deleteAll"], [133, 3, 1, "", "deleteObject"], [133, 3, 1, "", "deleteProperty"], [133, 3, 1, "", "doesRowExist"], [133, 3, 1, "", "getClassRows"], [133, 3, 1, "", "getProperty"], [133, 3, 1, "", "getPropertyKeys"], [133, 3, 1, "", "getSelfClassName"], [133, 3, 1, "", "hasProperty"], [133, 3, 1, "", "insertObject"], [133, 3, 1, "", "maxId"], [133, 3, 1, "", "missingTables"], [133, 3, 1, "", "selectAll"], [133, 3, 1, "", "selectCmd"], [133, 3, 1, "", "selectObjectById"], [133, 3, 1, "", "selectObjectsBy"], [133, 3, 1, "", "selectObjectsWhere"], [133, 3, 1, "", "setProperty"], [133, 3, 1, "", "setupCommands"], [133, 3, 1, "", "unique"], [133, 3, 1, "", "updateObject"]], "pyworkflow.mapper.sqlite.SqliteFlatMapper": [[133, 3, 1, "", "aggregate"], [133, 3, 1, "", "clear"], [133, 3, 1, "", "close"], [133, 3, 1, "", "commit"], [133, 3, 1, "", "count"], [133, 3, 1, "", "delete"], [133, 3, 1, "", "deleteAll"], [133, 3, 1, "", "deleteProperty"], [133, 3, 1, "", "enableAppend"], [133, 3, 1, "", "exists"], [133, 3, 1, "", "fmtDate"], [133, 3, 1, "", "getAttributes2Store"], [133, 3, 1, "", "getProperty"], [133, 3, 1, "", "getPropertyKeys"], [133, 3, 1, "", "hasProperty"], [133, 3, 1, "", "insert"], [133, 3, 1, "", "maxId"], [133, 3, 1, "", "selectAll"], [133, 3, 1, "", "selectBy"], [133, 3, 1, "", "selectById"], [133, 3, 1, "", "setProperty"], [133, 3, 1, "", "unique"], [133, 3, 1, "", "updateTo"]], "pyworkflow.mapper.sqlite.SqliteMapper": [[133, 3, 1, "", "close"], [133, 3, 1, "", "commit"], [133, 3, 1, "", "delete"], [133, 3, 1, "", "deleteAll"], [133, 3, 1, "", "deleteChilds"], [133, 3, 1, "", "deleteRelations"], [133, 3, 1, "", "exists"], [133, 3, 1, "", "fillObject"], [133, 3, 1, "", "fillObjectWithRow"], [133, 3, 1, "", "getParent"], [133, 3, 1, "", "getRelationChilds"], [133, 3, 1, "", "getRelationParents"], [133, 3, 1, "", "getRelationsByCreator"], [133, 3, 1, "", "getRelationsByName"], [133, 3, 1, "", "insert"], [133, 3, 1, "", "insertChild"], [133, 3, 1, "", "insertChilds"], [133, 3, 1, "", "insertRelation"], [133, 3, 1, "", "insertRelationData"], [133, 3, 1, "", "selectAll"], [133, 3, 1, "", "selectAllBatch"], [133, 3, 1, "", "selectBy"], [133, 3, 1, "", "selectByClass"], [133, 3, 1, "", "selectById"], [133, 3, 1, "", "updateFrom"], [133, 3, 1, "", "updateTo"]], "pyworkflow.mapper.sqlite.SqliteObjectsDb": [[133, 2, 1, "", "DELETE"], [133, 2, 1, "", "DELETE_SEQUENCE"], [133, 2, 1, "", "EXISTS"], [133, 2, 1, "", "SELECT"], [133, 2, 1, "", "SELECT_RELATION"], [133, 2, 1, "", "SELECT_RELATIONS"], [133, 2, 1, "", "VERSION"], [133, 3, 1, "", "deleteAll"], [133, 3, 1, "", "deleteChildObjects"], [133, 3, 1, "", "deleteMissingObjectsByAncestor"], [133, 3, 1, "", "deleteObject"], [133, 3, 1, "", "deleteRelationsByCreator"], [133, 3, 1, "", "doesRowExist"], [133, 3, 1, "", "insertObject"], [133, 3, 1, "", "insertRelation"], [133, 3, 1, "", "selectAllObjects"], [133, 3, 1, "", "selectCmd"], [133, 3, 1, "", "selectMissingObjectsByAncestor"], [133, 3, 1, "", "selectObjectById"], [133, 3, 1, "", "selectObjectsBy"], [133, 3, 1, "", "selectObjectsByAncestor"], [133, 3, 1, "", "selectObjectsByParent"], [133, 3, 1, "", "selectObjectsWhere"], [133, 3, 1, "", "selectRelationChilds"], [133, 3, 1, "", "selectRelationParents"], [133, 3, 1, "", "selectRelationsByCreator"], [133, 3, 1, "", "selectRelationsByName"], [133, 3, 1, "", "updateObject"]], "pyworkflow.mapper.sqlite_db": [[134, 1, 1, "", "SqliteDb"]], "pyworkflow.mapper.sqlite_db.SqliteDb": [[134, 2, 1, "", "OPEN_CONNECTIONS"], [134, 3, 1, "", "close"], [134, 3, 1, "", "closeConnection"], [134, 3, 1, "", "getDbName"], [134, 3, 1, "", "getTableColumns"], [134, 3, 1, "", "getTables"], [134, 3, 1, "", "getVersion"], [134, 3, 1, "", "hasTable"], [134, 3, 1, "", "setVersion"]], "pyworkflow.mapper.xmlmapper": [[135, 1, 1, "", "XmlMapper"]], "pyworkflow.mapper.xmlmapper.XmlMapper": [[135, 3, 1, "", "addSubElement"], [135, 3, 1, "", "commit"], [135, 3, 1, "", "fillObject"], [135, 3, 1, "", "indent"], [135, 3, 1, "", "insert"], [135, 3, 1, "", "insertObjectWithChilds"], [135, 3, 1, "", "selectAll"], [135, 3, 1, "", "selectById"], [135, 3, 1, "", "setChildObject"], [135, 3, 1, "", "setClassTag"], [135, 3, 1, "", "setObjectId"], [135, 3, 1, "", "strId"], [135, 3, 1, "", "updateFrom"], [135, 3, 1, "", "updateTo"]], "pyworkflow.object": [[136, 1, 1, "", "Boolean"], [136, 1, 1, "", "CsvList"], [136, 1, 1, "", "Dict"], [136, 1, 1, "", "Float"], [136, 1, 1, "", "Integer"], [136, 1, 1, "", "List"], [136, 1, 1, "", "Object"], [136, 5, 1, "", "ObjectWrap"], [136, 1, 1, "", "OrderedObject"], [136, 1, 1, "", "Pointer"], [136, 1, 1, "", "PointerList"], [136, 1, 1, "", "Scalar"], [136, 1, 1, "", "Set"], [136, 1, 1, "", "String"]], "pyworkflow.object.CsvList": [[136, 3, 1, "", "clear"], [136, 3, 1, "", "get"], [136, 3, 1, "", "getObjValue"], [136, 3, 1, "", "isEmpty"]], "pyworkflow.object.Float": [[136, 2, 1, "", "EQUAL_PRECISION"], [136, 3, 1, "", "equalAttributes"], [136, 3, 1, "", "setPrecision"]], "pyworkflow.object.Integer": [[136, 3, 1, "", "increment"]], "pyworkflow.object.List": [[136, 2, 1, "", "ITEM_PREFIX"], [136, 3, 1, "", "clear"], [136, 3, 1, "", "getAttributes"], [136, 3, 1, "", "getSize"], [136, 3, 1, "", "isEmpty"]], "pyworkflow.object.Object": [[136, 3, 1, "", "cleanObjId"], [136, 3, 1, "", "clone"], [136, 3, 1, "", "copy"], [136, 3, 1, "", "copyAttributes"], [136, 3, 1, "", "copyObjId"], [136, 3, 1, "", "equalAttributes"], [136, 3, 1, "", "evalCondition"], [136, 3, 1, "", "fillObjDict"], [136, 3, 1, "", "get"], [136, 3, 1, "", "getAttributeValue"], [136, 3, 1, "", "getAttributes"], [136, 3, 1, "", "getAttributesToStore"], [136, 3, 1, "", "getClass"], [136, 3, 1, "", "getClassName"], [136, 3, 1, "", "getDoc"], [136, 3, 1, "", "getLastName"], [136, 3, 1, "", "getMappedDict"], [136, 3, 1, "", "getName"], [136, 3, 1, "", "getNameId"], [136, 3, 1, "", "getNestedValue"], [136, 3, 1, "", "getObjComment"], [136, 3, 1, "", "getObjCreation"], [136, 3, 1, "", "getObjCreationAsDate"], [136, 3, 1, "", "getObjDict"], [136, 3, 1, "", "getObjId"], [136, 3, 1, "", "getObjLabel"], [136, 3, 1, "", "getObjName"], [136, 3, 1, "", "getObjParentId"], [136, 3, 1, "", "getObjValue"], [136, 3, 1, "", "getStore"], [136, 3, 1, "", "getValuesFromDict"], [136, 3, 1, "", "getValuesFromMappedDict"], [136, 3, 1, "", "hasAttribute"], [136, 3, 1, "", "hasAttributeExt"], [136, 3, 1, "", "hasObjId"], [136, 3, 1, "", "hasObjParentId"], [136, 3, 1, "", "hasValue"], [136, 3, 1, "", "isEnabled"], [136, 3, 1, "", "isPointer"], [136, 3, 1, "", "printAll"], [136, 3, 1, "", "printObjDict"], [136, 3, 1, "", "set"], [136, 3, 1, "", "setAttributeValue"], [136, 3, 1, "", "setAttributesFromDict"], [136, 3, 1, "", "setEnabled"], [136, 3, 1, "", "setName"], [136, 3, 1, "", "setObjComment"], [136, 3, 1, "", "setObjCreation"], [136, 3, 1, "", "setObjId"], [136, 3, 1, "", "setObjLabel"], [136, 3, 1, "", "setStore"], [136, 3, 1, "", "strId"], [136, 3, 1, "", "trace"]], "pyworkflow.object.Pointer": [[136, 2, 1, "", "EXTENDED_ATTR"], [136, 2, 1, "", "EXTENDED_ITEMID"], [136, 3, 1, "", "addExtended"], [136, 3, 1, "", "get"], [136, 3, 1, "", "getAttributes"], [136, 3, 1, "", "getExtended"], [136, 3, 1, "", "getExtendedParts"], [136, 3, 1, "", "getUniqueId"], [136, 3, 1, "", "hasExtended"], [136, 3, 1, "", "hasValue"], [136, 3, 1, "", "pointsNone"], [136, 3, 1, "", "removeExtended"], [136, 3, 1, "", "set"], [136, 3, 1, "", "setExtended"], [136, 3, 1, "", "setExtendedParts"]], "pyworkflow.object.PointerList": [[136, 3, 1, "", "append"]], "pyworkflow.object.Scalar": [[136, 3, 1, "", "equalAttributes"], [136, 3, 1, "", "get"], [136, 3, 1, "", "getPointer"], [136, 3, 1, "", "hasPointer"], [136, 3, 1, "", "hasValue"], [136, 3, 1, "", "multiply"], [136, 3, 1, "", "setPointer"], [136, 3, 1, "", "sum"], [136, 3, 1, "", "swap"]], "pyworkflow.object.Set": [[136, 2, 1, "", "ITEM_TYPE"], [136, 2, 1, "", "STREAM_CLOSED"], [136, 2, 1, "", "STREAM_OPEN"], [136, 3, 1, "", "aggregate"], [136, 3, 1, "", "append"], [136, 3, 1, "", "clear"], [136, 3, 1, "", "close"], [136, 3, 1, "", "enableAppend"], [136, 3, 1, "", "equalItemAttributes"], [136, 3, 1, "", "fmtDate"], [136, 3, 1, "", "getFileName"], [136, 3, 1, "", "getFiles"], [136, 3, 1, "", "getFirstItem"], [136, 3, 1, "", "getIdSet"], [136, 3, 1, "", "getPrefix"], [136, 3, 1, "", "getProperty"], [136, 3, 1, "", "getRepresentative"], [136, 3, 1, "", "getSize"], [136, 3, 1, "", "getStreamState"], [136, 3, 1, "", "getSubset"], [136, 3, 1, "", "getUniqueValues"], [136, 3, 1, "", "hasChangedSince"], [136, 3, 1, "", "hasProperty"], [136, 3, 1, "", "hasRepresentative"], [136, 2, 1, "", "indexes"], [136, 3, 1, "", "isEmpty"], [136, 3, 1, "", "isStreamClosed"], [136, 3, 1, "", "isStreamOpen"], [136, 3, 1, "", "iterItems"], [136, 3, 1, "", "load"], [136, 3, 1, "", "loadAllProperties"], [136, 3, 1, "", "loadProperty"], [136, 3, 1, "", "setClassesDict"], [136, 3, 1, "", "setMapperClass"], [136, 3, 1, "", "setRepresentative"], [136, 3, 1, "", "setStreamState"], [136, 3, 1, "", "update"], [136, 3, 1, "", "write"]], "pyworkflow.object.String": [[136, 2, 1, "", "DATETIME_FORMAT"], [136, 2, 1, "", "FS"], [136, 3, 1, "", "datetime"], [136, 3, 1, "", "empty"], [136, 3, 1, "", "getDatetime"], [136, 3, 1, "", "getListFromRange"], [136, 3, 1, "", "getListFromValues"]], "pyworkflow.plugin": [[137, 1, 1, "", "Domain"], [137, 1, 1, "", "Plugin"], [137, 1, 1, "", "PluginInfo"]], "pyworkflow.plugin.Domain": [[137, 3, 1, "", "findClass"], [137, 3, 1, "", "findSubClasses"], [137, 3, 1, "", "findViewers"], [137, 3, 1, "", "findWizards"], [137, 3, 1, "", "getMapperDict"], [137, 3, 1, "", "getModuleClasses"], [137, 3, 1, "", "getName"], [137, 3, 1, "", "getObjects"], [137, 3, 1, "", "getPlugin"], [137, 3, 1, "", "getPlugins"], [137, 3, 1, "", "getPreferredViewers"], [137, 3, 1, "", "getProtocols"], [137, 3, 1, "", "getViewers"], [137, 3, 1, "", "getWizards"], [137, 3, 1, "", "importFromPlugin"], [137, 3, 1, "", "printInfo"], [137, 3, 1, "", "refreshPlugin"], [137, 3, 1, "", "registerPlugin"], [137, 3, 1, "", "viewersLoaded"]], "pyworkflow.plugin.Plugin": [[137, 3, 1, "", "defineBinaries"], [137, 3, 1, "", "getActiveVersion"], [137, 3, 1, "", "getCondaActivationCmd"], [137, 3, 1, "", "getEnviron"], [137, 3, 1, "", "getHome"], [137, 3, 1, "", "getName"], [137, 3, 1, "", "getPluginDir"], [137, 3, 1, "", "getPluginTemplateDir"], [137, 3, 1, "", "getSupportedVersions"], [137, 3, 1, "", "getTemplates"], [137, 3, 1, "", "getUrl"], [137, 3, 1, "", "getVar"], [137, 3, 1, "", "getVars"], [137, 3, 1, "", "validateInstallation"]], "pyworkflow.plugin.PluginInfo": [[137, 3, 1, "", "getAuthor"], [137, 3, 1, "", "getAuthorEmail"], [137, 3, 1, "", "getHomePage"], [137, 3, 1, "", "getKeywords"]], "pyworkflow.project": [[139, 0, 0, "-", "config"], [140, 0, 0, "-", "manager"], [141, 0, 0, "-", "project"]], "pyworkflow.project.config": [[139, 1, 1, "", "Label"], [139, 1, 1, "", "LabelsList"], [139, 1, 1, "", "MenuConfig"], [139, 1, 1, "", "NodeConfig"], [139, 1, 1, "", "NodeConfigList"], [139, 1, 1, "", "ProjectConfig"], [139, 1, 1, "", "ProjectSettings"]], "pyworkflow.project.config.Label": [[139, 3, 1, "", "get"], [139, 3, 1, "", "getColor"], [139, 3, 1, "", "getId"], [139, 3, 1, "", "getName"], [139, 3, 1, "", "getObjValue"], [139, 3, 1, "", "setColor"], [139, 3, 1, "", "setName"]], "pyworkflow.project.config.LabelsList": [[139, 3, 1, "", "addLabel"], [139, 3, 1, "", "clear"], [139, 3, 1, "", "deleteLabel"], [139, 3, 1, "", "getLabel"], [139, 3, 1, "", "updateDict"]], "pyworkflow.project.config.MenuConfig": [[139, 3, 1, "", "addSubMenu"], [139, 3, 1, "", "isEmpty"]], "pyworkflow.project.config.NodeConfig": [[139, 3, 1, "", "get"], [139, 3, 1, "", "getId"], [139, 3, 1, "", "getLabels"], [139, 3, 1, "", "getObjValue"], [139, 3, 1, "", "getPosition"], [139, 3, 1, "", "getX"], [139, 3, 1, "", "getY"], [139, 3, 1, "", "isExpanded"], [139, 3, 1, "", "isSelected"], [139, 3, 1, "", "isVisible"], [139, 3, 1, "", "setExpanded"], [139, 3, 1, "", "setLabels"], [139, 3, 1, "", "setPosition"], [139, 3, 1, "", "setSelected"], [139, 3, 1, "", "setVisible"], [139, 3, 1, "", "setX"], [139, 3, 1, "", "setY"]], "pyworkflow.project.config.NodeConfigList": [[139, 3, 1, "", "addNode"], [139, 3, 1, "", "clear"], [139, 3, 1, "", "getNode"], [139, 3, 1, "", "updateDict"]], "pyworkflow.project.config.ProjectSettings": [[139, 2, 1, "", "COLOR_MODES"], [139, 2, 1, "", "COLOR_MODE_AGE"], [139, 2, 1, "", "COLOR_MODE_LABELS"], [139, 2, 1, "", "COLOR_MODE_SIZE"], [139, 2, 1, "", "COLOR_MODE_STATUS"], [139, 3, 1, "", "addNode"], [139, 3, 1, "", "ageColorMode"], [139, 3, 1, "", "commit"], [139, 3, 1, "", "getColorMode"], [139, 3, 1, "", "getConfig"], [139, 3, 1, "", "getCreationTime"], [139, 3, 1, "", "getLabels"], [139, 3, 1, "", "getLifeTime"], [139, 3, 1, "", "getNodeById"], [139, 3, 1, "", "getNodes"], [139, 3, 1, "", "getProtocolView"], [139, 3, 1, "", "getReadOnly"], [139, 3, 1, "", "getRunsView"], [139, 3, 1, "", "labelsColorMode"], [139, 3, 1, "", "load"], [139, 3, 1, "", "setColorMode"], [139, 3, 1, "", "setCreationTime"], [139, 3, 1, "", "setLifeTime"], [139, 3, 1, "", "setProtocolView"], [139, 3, 1, "", "setReadOnly"], [139, 3, 1, "", "setRunsView"], [139, 3, 1, "", "sizeColorMode"], [139, 3, 1, "", "statusColorMode"], [139, 3, 1, "", "write"]], "pyworkflow.project.manager": [[140, 1, 1, "", "Manager"], [140, 1, 1, "", "ProjectInfo"]], "pyworkflow.project.manager.Manager": [[140, 3, 1, "", "createProject"], [140, 3, 1, "", "deleteProject"], [140, 3, 1, "", "getProjectPath"], [140, 3, 1, "", "hasProject"], [140, 3, 1, "", "importProject"], [140, 3, 1, "", "listProjects"], [140, 3, 1, "", "loadProject"], [140, 3, 1, "", "renameProject"]], "pyworkflow.project.manager.ProjectInfo": [[140, 3, 1, "", "getCreationTime"], [140, 3, 1, "", "getModificationTime"], [140, 3, 1, "", "getName"], [140, 3, 1, "", "isLink"], [140, 3, 1, "", "realPath"]], "pyworkflow.project.project": [[141, 4, 1, "", "MissingProjectDbException"], [141, 4, 1, "", "ModificationNotAllowedException"], [141, 1, 1, "", "Project"]], "pyworkflow.project.project.Project": [[141, 3, 1, "", "checkPid"], [141, 3, 1, "", "cleanProjectName"], [141, 3, 1, "", "closeMapper"], [141, 3, 1, "", "continueProtocol"], [141, 3, 1, "", "copyProtocol"], [141, 3, 1, "", "create"], [141, 3, 1, "", "createMapper"], [141, 3, 1, "", "createSettings"], [141, 3, 1, "", "deleteProtocol"], [141, 3, 1, "", "deleteProtocolOutput"], [141, 3, 1, "", "doesProtocolExists"], [141, 3, 1, "", "exportProtocols"], [141, 3, 1, "", "fixLinks"], [141, 3, 1, "", "getCreationTime"], [141, 3, 1, "", "getDbLastModificationDate"], [141, 3, 1, "", "getDbName"], [141, 3, 1, "", "getDbPath"], [141, 3, 1, "", "getDomain"], [141, 3, 1, "", "getElapsedTime"], [141, 3, 1, "", "getGraphFromRuns"], [141, 3, 1, "", "getHostConfig"], [141, 3, 1, "", "getHostNames"], [141, 3, 1, "", "getLeftTime"], [141, 3, 1, "", "getLocalConfigHosts"], [141, 3, 1, "", "getLogPath"], [141, 3, 1, "", "getName"], [141, 3, 1, "", "getObjId"], [141, 3, 1, "", "getObject"], [141, 3, 1, "", "getPath"], [141, 3, 1, "", "getProtWorkingDir"], [141, 3, 1, "", "getProtocol"], [141, 3, 1, "", "getProtocolView"], [141, 3, 1, "", "getProtocolsByClass"], [141, 3, 1, "", "getProtocolsDict"], [141, 3, 1, "", "getProtocolsJson"], [141, 3, 1, "", "getRelatedObjects"], [141, 3, 1, "", "getRuns"], [141, 3, 1, "", "getRunsGraph"], [141, 3, 1, "", "getSettings"], [141, 3, 1, "", "getSettingsCreationTime"], [141, 3, 1, "", "getShortName"], [141, 3, 1, "", "getSourceChilds"], [141, 3, 1, "", "getSourceGraph"], [141, 3, 1, "", "getSourceParents"], [141, 3, 1, "", "getTmpPath"], [141, 3, 1, "", "getTransformGraph"], [141, 3, 1, "", "isInReadOnlyFolder"], [141, 3, 1, "", "isLink"], [141, 3, 1, "", "isReadOnly"], [141, 3, 1, "", "iterSubclasses"], [141, 3, 1, "", "launchProtocol"], [141, 3, 1, "", "launchWorkflow"], [141, 3, 1, "", "load"], [141, 3, 1, "", "loadProtocols"], [141, 3, 1, "", "needRefresh"], [141, 3, 1, "", "newProtocol"], [141, 3, 1, "", "openedAsReadOnly"], [141, 3, 1, "", "resetProtocol"], [141, 3, 1, "", "resetWorkFlow"], [141, 3, 1, "", "saveProtocol"], [141, 3, 1, "", "saveSettings"], [141, 3, 1, "", "scheduleProtocol"], [141, 3, 1, "", "setDbPath"], [141, 3, 1, "", "setReadOnly"], [141, 3, 1, "", "stopProtocol"], [141, 3, 1, "", "stopWorkFlow"]], "pyworkflow.protocol": [[143, 0, 0, "-", "bibtex"], [144, 0, 0, "-", "constants"], [145, 0, 0, "-", "executor"], [146, 0, 0, "-", "hosts"], [147, 0, 0, "-", "launch"], [148, 0, 0, "-", "package"], [149, 0, 0, "-", "params"], [150, 0, 0, "-", "protocol"]], "pyworkflow.protocol.executor": [[145, 1, 1, "", "MPIStepExecutor"], [145, 1, 1, "", "QueueStepExecutor"], [145, 1, 1, "", "StepExecutor"], [145, 1, 1, "", "StepThread"], [145, 1, 1, "", "ThreadStepExecutor"]], "pyworkflow.protocol.executor.MPIStepExecutor": [[145, 3, 1, "", "runJob"], [145, 3, 1, "", "runSteps"]], "pyworkflow.protocol.executor.QueueStepExecutor": [[145, 3, 1, "", "runJob"]], "pyworkflow.protocol.executor.StepExecutor": [[145, 3, 1, "", "getGpuList"], [145, 3, 1, "", "runJob"], [145, 3, 1, "", "runSteps"]], "pyworkflow.protocol.executor.StepThread": [[145, 3, 1, "", "run"]], "pyworkflow.protocol.executor.ThreadStepExecutor": [[145, 3, 1, "", "getGpuList"], [145, 3, 1, "", "runSteps"]], "pyworkflow.protocol.hosts": [[146, 1, 1, "", "HostConfig"], [146, 1, 1, "", "QueueConfig"], [146, 1, 1, "", "QueueSystemConfig"]], "pyworkflow.protocol.hosts.HostConfig": [[146, 3, 1, "", "getAddress"], [146, 3, 1, "", "getCancelCommand"], [146, 3, 1, "", "getCheckCommand"], [146, 3, 1, "", "getHostName"], [146, 3, 1, "", "getHostPath"], [146, 3, 1, "", "getJobDoneRegex"], [146, 3, 1, "", "getLabel"], [146, 3, 1, "", "getMpiCommand"], [146, 3, 1, "", "getPassword"], [146, 3, 1, "", "getQueueSystem"], [146, 3, 1, "", "getQueuesDefault"], [146, 3, 1, "", "getScipionConfig"], [146, 3, 1, "", "getScipionHome"], [146, 3, 1, "", "getSubmitCommand"], [146, 3, 1, "", "getSubmitPrefix"], [146, 3, 1, "", "getSubmitTemplate"], [146, 3, 1, "", "getUserName"], [146, 3, 1, "", "isQueueMandatory"], [146, 3, 1, "", "load"], [146, 3, 1, "", "setAddress"], [146, 3, 1, "", "setHostName"], [146, 3, 1, "", "setHostPath"], [146, 3, 1, "", "setLabel"], [146, 3, 1, "", "setMpiCommand"], [146, 3, 1, "", "setPassword"], [146, 3, 1, "", "setQueueSystem"], [146, 3, 1, "", "setScipionConfig"], [146, 3, 1, "", "setScipionHome"], [146, 3, 1, "", "setUserName"], [146, 3, 1, "", "writeBasic"]], "pyworkflow.protocol.hosts.QueueConfig": [[146, 3, 1, "", "getAllowMPI"], [146, 3, 1, "", "getAllowThreads"], [146, 3, 1, "", "getMaxCores"], [146, 3, 1, "", "getMaxHours"], [146, 3, 1, "", "getName"], [146, 3, 1, "", "setAllowMPI"], [146, 3, 1, "", "setAllowThreads"], [146, 3, 1, "", "setMaxCores"], [146, 3, 1, "", "setMaxHours"], [146, 3, 1, "", "setName"]], "pyworkflow.protocol.hosts.QueueSystemConfig": [[146, 3, 1, "", "getCancelCommand"], [146, 3, 1, "", "getCheckCommand"], [146, 3, 1, "", "getMandatory"], [146, 3, 1, "", "getName"], [146, 3, 1, "", "getQueueConfig"], [146, 3, 1, "", "getQueues"], [146, 3, 1, "", "getSubmitCommand"], [146, 3, 1, "", "getSubmitTemplate"], [146, 3, 1, "", "hasName"], [146, 3, 1, "", "hasValue"], [146, 3, 1, "", "setCancelCommand"], [146, 3, 1, "", "setCheckCommand"], [146, 3, 1, "", "setJobDoneRegex"], [146, 3, 1, "", "setMandatory"], [146, 3, 1, "", "setName"], [146, 3, 1, "", "setQueues"], [146, 3, 1, "", "setSubmitCommand"], [146, 3, 1, "", "setSubmitTemplate"]], "pyworkflow.protocol.launch": [[147, 5, 1, "", "analyzeFormattingTypeError"], [147, 5, 1, "", "launch"], [147, 5, 1, "", "schedule"], [147, 5, 1, "", "stop"]], "pyworkflow.protocol.package": [[148, 1, 1, "", "Package"]], "pyworkflow.protocol.package.Package": [[148, 3, 1, "", "getName"], [148, 3, 1, "", "isInstalled"]], "pyworkflow.protocol.params": [[149, 1, 1, "", "BooleanParam"], [149, 1, 1, "", "Conditional"], [149, 1, 1, "", "DeprecatedParam"], [149, 1, 1, "", "DigFreqParam"], [149, 1, 1, "", "ElementGroup"], [149, 1, 1, "", "EnumParam"], [149, 1, 1, "", "FileParam"], [149, 1, 1, "", "FloatParam"], [149, 1, 1, "", "FolderParam"], [149, 1, 1, "", "Form"], [149, 1, 1, "", "FormElement"], [149, 1, 1, "", "Format"], [149, 1, 1, "", "GE"], [149, 1, 1, "", "GT"], [149, 1, 1, "", "Group"], [149, 1, 1, "", "HiddenBooleanParam"], [149, 1, 1, "", "IntParam"], [149, 1, 1, "", "LE"], [149, 1, 1, "", "LT"], [149, 1, 1, "", "LabelParam"], [149, 1, 1, "", "Line"], [149, 1, 1, "", "MultiPointerParam"], [149, 1, 1, "", "NonEmptyBoolCondition"], [149, 1, 1, "", "NonEmptyCondition"], [149, 1, 1, "", "NumericListParam"], [149, 1, 1, "", "NumericListValidator"], [149, 1, 1, "", "NumericRangeParam"], [149, 1, 1, "", "NumericRangeValidator"], [149, 1, 1, "", "Param"], [149, 1, 1, "", "PathParam"], [149, 1, 1, "", "PointerParam"], [149, 1, 1, "", "ProtocolClassParam"], [149, 1, 1, "", "Range"], [149, 1, 1, "", "RegexParam"], [149, 1, 1, "", "RelationParam"], [149, 1, 1, "", "Section"], [149, 1, 1, "", "StringParam"], [149, 1, 1, "", "TextParam"], [149, 1, 1, "", "TupleParam"], [149, 1, 1, "", "Validator"]], "pyworkflow.protocol.params.DeprecatedParam": [[149, 3, 1, "", "getObjValue"], [149, 3, 1, "", "isPointer"], [149, 3, 1, "", "set"]], "pyworkflow.protocol.params.ElementGroup": [[149, 3, 1, "", "addHidden"], [149, 3, 1, "", "addLine"], [149, 3, 1, "", "addParam"], [149, 3, 1, "", "iterParams"]], "pyworkflow.protocol.params.EnumParam": [[149, 2, 1, "", "DISPLAY_COMBO"], [149, 2, 1, "", "DISPLAY_HLIST"], [149, 2, 1, "", "DISPLAY_LIST"]], "pyworkflow.protocol.params.Form": [[149, 3, 1, "", "addBooleanParam"], [149, 3, 1, "", "addGeneralSection"], [149, 3, 1, "", "addGroup"], [149, 3, 1, "", "addHidden"], [149, 3, 1, "", "addLine"], [149, 3, 1, "", "addParallelSection"], [149, 3, 1, "", "addParam"], [149, 3, 1, "", "addSection"], [149, 3, 1, "", "evalParamCondition"], [149, 3, 1, "", "getClass"], [149, 3, 1, "", "getParam"], [149, 3, 1, "", "getSection"], [149, 3, 1, "", "hasParam"], [149, 3, 1, "", "iterAllParams"], [149, 3, 1, "", "iterParams"], [149, 3, 1, "", "iterPointerParams"], [149, 3, 1, "", "iterSections"], [149, 3, 1, "", "registerParam"], [149, 3, 1, "", "validateParams"]], "pyworkflow.protocol.params.FormElement": [[149, 2, 1, "", "ATTRIBUTES"], [149, 3, 1, "", "config"], [149, 3, 1, "", "getHelp"], [149, 3, 1, "", "getLabel"], [149, 3, 1, "", "hasCondition"], [149, 3, 1, "", "isExpert"], [149, 3, 1, "", "isImportant"], [149, 3, 1, "", "setExpert"], [149, 3, 1, "", "setImportant"]], "pyworkflow.protocol.params.Param": [[149, 3, 1, "", "addValidator"], [149, 3, 1, "", "getDefault"], [149, 3, 1, "", "setDefault"], [149, 3, 1, "", "validate"]], "pyworkflow.protocol.params.PointerParam": [[149, 3, 1, "", "setPointerClass"]], "pyworkflow.protocol.params.RelationParam": [[149, 3, 1, "", "getAttributeName"], [149, 3, 1, "", "getDirection"], [149, 3, 1, "", "getName"]], "pyworkflow.protocol.params.Section": [[149, 3, 1, "", "addGroup"], [149, 3, 1, "", "getQuestion"], [149, 3, 1, "", "getQuestionName"], [149, 3, 1, "", "hasQuestion"]], "pyworkflow.protocol.protocol": [[150, 1, 1, "", "FunctionStep"], [150, 1, 1, "", "LegacyProtocol"], [150, 1, 1, "", "ProtImportBase"], [150, 1, 1, "", "Protocol"], [150, 1, 1, "", "RunJobStep"], [150, 1, 1, "", "Step"], [150, 1, 1, "", "StepSet"], [150, 5, 1, "", "getProtocolFromDb"], [150, 5, 1, "", "getUpdatedProtocol"], [150, 5, 1, "", "isProtocolUpToDate"], [150, 5, 1, "", "runProtocolMain"], [150, 5, 1, "", "runProtocolMainMPI"]], "pyworkflow.protocol.protocol.LegacyProtocol": [[150, 3, 1, "", "getClassDomain"]], "pyworkflow.protocol.protocol.Protocol": [[150, 3, 1, "", "addSummaryWarning"], [150, 3, 1, "", "allowsDelete"], [150, 3, 1, "", "allowsGpu"], [150, 3, 1, "", "checkSummaryWarnings"], [150, 3, 1, "", "citations"], [150, 3, 1, "", "cleanTmp"], [150, 3, 1, "", "cleanWorkingDir"], [150, 3, 1, "", "closeMappers"], [150, 3, 1, "", "continueFromInteractive"], [150, 3, 1, "", "copy"], [150, 3, 1, "", "copyDefinitionAttributes"], [150, 7, 1, "", "cpuTime"], [150, 3, 1, "", "debug"], [150, 3, 1, "", "deleteOutput"], [150, 3, 1, "", "error"], [150, 3, 1, "", "evalExpertLevel"], [150, 3, 1, "", "evalParamCondition"], [150, 3, 1, "", "evalParamExpertLevel"], [150, 3, 1, "", "findAttributeName"], [150, 3, 1, "", "getCitations"], [150, 3, 1, "", "getClassDomain"], [150, 3, 1, "", "getClassLabel"], [150, 3, 1, "", "getClassPackage"], [150, 3, 1, "", "getClassPackageName"], [150, 3, 1, "", "getClassPlugin"], [150, 3, 1, "", "getDbPath"], [150, 3, 1, "", "getDefaultRunName"], [150, 3, 1, "", "getDefinition"], [150, 3, 1, "", "getDefinitionDict"], [150, 3, 1, "", "getEnumText"], [150, 3, 1, "", "getFileTag"], [150, 3, 1, "", "getFiles"], [150, 3, 1, "", "getGpuList"], [150, 3, 1, "", "getHelpText"], [150, 3, 1, "", "getHostConfig"], [150, 3, 1, "", "getHostFullName"], [150, 3, 1, "", "getHostName"], [150, 3, 1, "", "getInputStatus"], [150, 3, 1, "", "getJobId"], [150, 3, 1, "", "getLogPaths"], [150, 3, 1, "", "getLogsAsStrings"], [150, 3, 1, "", "getLogsLastLines"], [150, 3, 1, "", "getMapper"], [150, 3, 1, "", "getObjectTag"], [150, 3, 1, "", "getOutputFiles"], [150, 3, 1, "", "getOutputsSize"], [150, 3, 1, "", "getPackageCitations"], [150, 3, 1, "", "getParam"], [150, 3, 1, "", "getParsedMethods"], [150, 3, 1, "", "getPath"], [150, 3, 1, "", "getPid"], [150, 3, 1, "", "getPluginLogoPath"], [150, 3, 1, "", "getPossibleOutputs"], [150, 3, 1, "", "getProject"], [150, 3, 1, "", "getProtocolsToUpdate"], [150, 3, 1, "", "getQueueParams"], [150, 3, 1, "", "getRelations"], [150, 3, 1, "", "getRunMode"], [150, 3, 1, "", "getRunName"], [150, 3, 1, "", "getScheduleLog"], [150, 3, 1, "", "getSize"], [150, 3, 1, "", "getStatusMessage"], [150, 3, 1, "", "getStderrLog"], [150, 3, 1, "", "getStdoutLog"], [150, 3, 1, "", "getSteps"], [150, 3, 1, "", "getStepsFile"], [150, 3, 1, "", "getStepsGraph"], [150, 3, 1, "", "getSubmitDict"], [150, 3, 1, "", "getUrl"], [150, 3, 1, "", "getWorkingDir"], [150, 3, 1, "", "hasDefinition"], [150, 3, 1, "", "hasExpert"], [150, 3, 1, "", "hasQueueParams"], [150, 3, 1, "", "hasSummaryWarnings"], [150, 3, 1, "", "info"], [150, 3, 1, "", "isBase"], [150, 3, 1, "", "isBeta"], [150, 3, 1, "", "isChild"], [150, 3, 1, "", "isContinued"], [150, 3, 1, "", "isDisabled"], [150, 3, 1, "", "isInStreaming"], [150, 3, 1, "", "isInstalled"], [150, 3, 1, "", "isNew"], [150, 3, 1, "", "iterDefinitionAttributes"], [150, 3, 1, "", "iterDefinitionSections"], [150, 3, 1, "", "iterInputAttributes"], [150, 3, 1, "", "iterInputPointers"], [150, 3, 1, "", "iterOutputAttributes"], [150, 3, 1, "", "legacyCheck"], [150, 3, 1, "", "loadMappers"], [150, 3, 1, "", "loadSteps"], [150, 3, 1, "", "makePathsAndClean"], [150, 3, 1, "", "makeWorkingDir"], [150, 3, 1, "", "methods"], [150, 7, 1, "", "numberOfSteps"], [150, 3, 1, "", "processImportDict"], [150, 3, 1, "", "requiresGpu"], [150, 3, 1, "", "run"], [150, 3, 1, "", "runJob"], [150, 3, 1, "", "runProtocol"], [150, 3, 1, "", "setAborted"], [150, 3, 1, "", "setFailed"], [150, 3, 1, "", "setHostConfig"], [150, 3, 1, "", "setHostFullName"], [150, 3, 1, "", "setHostName"], [150, 3, 1, "", "setJobId"], [150, 3, 1, "", "setMapper"], [150, 3, 1, "", "setPid"], [150, 3, 1, "", "setProject"], [150, 3, 1, "", "setQueueParams"], [150, 3, 1, "", "setRunning"], [150, 3, 1, "", "setStepsExecutor"], [150, 3, 1, "", "setWorkingDir"], [150, 7, 1, "", "stepsDone"], [150, 3, 1, "", "summary"], [150, 3, 1, "", "updateSteps"], [150, 3, 1, "", "useQueue"], [150, 3, 1, "", "useQueueForSteps"], [150, 3, 1, "", "usesGpu"], [150, 3, 1, "", "validate"], [150, 3, 1, "", "validateInstallation"], [150, 3, 1, "", "validatePackageVersion"], [150, 3, 1, "", "warning"], [150, 3, 1, "", "warnings"], [150, 3, 1, "", "worksInStreaming"]], "pyworkflow.protocol.protocol.Step": [[150, 3, 1, "", "addPrerequisites"], [150, 3, 1, "", "getElapsedTime"], [150, 3, 1, "", "getError"], [150, 3, 1, "", "getErrorMessage"], [150, 3, 1, "", "getIndex"], [150, 3, 1, "", "getPrerequisites"], [150, 3, 1, "", "getStatus"], [150, 3, 1, "", "isAborted"], [150, 3, 1, "", "isActive"], [150, 3, 1, "", "isFailed"], [150, 3, 1, "", "isFinished"], [150, 3, 1, "", "isInteractive"], [150, 3, 1, "", "isLaunched"], [150, 3, 1, "", "isRunning"], [150, 3, 1, "", "isSaved"], [150, 3, 1, "", "isScheduled"], [150, 3, 1, "", "isWaiting"], [150, 3, 1, "", "run"], [150, 3, 1, "", "setAborted"], [150, 3, 1, "", "setFailed"], [150, 3, 1, "", "setFinished"], [150, 3, 1, "", "setIndex"], [150, 3, 1, "", "setInteractive"], [150, 3, 1, "", "setPrerequisites"], [150, 3, 1, "", "setRunning"], [150, 3, 1, "", "setSaved"], [150, 3, 1, "", "setStatus"]], "pyworkflow.template": [[151, 1, 1, "", "Template"], [151, 1, 1, "", "TemplateList"], [151, 1, 1, "", "TemplateParam"], [151, 1, 1, "", "Validations"]], "pyworkflow.template.Template": [[151, 3, 1, "", "createTemplateFile"], [151, 3, 1, "", "genProjectName"], [151, 3, 1, "", "getDescription"], [151, 3, 1, "", "getObjId"], [151, 3, 1, "", "getParams"], [151, 3, 1, "", "parseContent"], [151, 3, 1, "", "replaceEnvVariables"], [151, 3, 1, "", "setParamValue"]], "pyworkflow.template.TemplateList": [[151, 3, 1, "", "addPluginTemplates"], [151, 3, 1, "", "addScipionTemplates"], [151, 3, 1, "", "addTemplate"], [151, 3, 1, "", "genFromStrList"], [151, 3, 1, "", "sortListByPluginName"]], "pyworkflow.template.TemplateParam": [[151, 3, 1, "", "getAlias"], [151, 3, 1, "", "getIndex"], [151, 3, 1, "", "getTitle"], [151, 3, 1, "", "getType"], [151, 3, 1, "", "getValue"], [151, 3, 1, "", "setValue"], [151, 3, 1, "", "validate"]], "pyworkflow.template.Validations": [[151, 2, 1, "", "FIELD_TYPE_BOOLEAN"], [151, 2, 1, "", "FIELD_TYPE_DECIMAL"], [151, 2, 1, "", "FIELD_TYPE_INTEGER"], [151, 2, 1, "", "FIELD_TYPE_PATH"], [151, 2, 1, "", "FIELD_TYPE_STR"], [151, 3, 1, "", "check"], [151, 3, 1, "", "validBoolean"], [151, 3, 1, "", "validDecimal"], [151, 3, 1, "", "validInteger"], [151, 3, 1, "", "validPath"], [151, 3, 1, "", "validString"]], "pyworkflow.tests": [[153, 0, 0, "-", "test_utils"], [154, 0, 0, "-", "tests"]], "pyworkflow.tests.test_utils": [[153, 5, 1, "", "wait"]], "pyworkflow.tests.tests": [[154, 1, 1, "", "BaseTest"], [154, 1, 1, "", "DataSet"], [154, 1, 1, "", "GTestResult"], [154, 5, 1, "", "hasLabel"], [154, 5, 1, "", "setupTestOutput"], [154, 5, 1, "", "setupTestProject"]], "pyworkflow.tests.tests.BaseTest": [[154, 3, 1, "", "assertIsNotEmpty"], [154, 3, 1, "", "assertSetSize"], [154, 3, 1, "", "compareSets"], [154, 3, 1, "", "getOutputPath"], [154, 3, 1, "", "getRelPath"], [154, 3, 1, "", "launchProtocol"], [154, 3, 1, "", "newProtocol"], [154, 3, 1, "", "printLastLogLines"], [154, 3, 1, "", "saveProtocol"], [154, 3, 1, "", "setupTestOutput"]], "pyworkflow.tests.tests.DataSet": [[154, 3, 1, "", "getDataSet"], [154, 3, 1, "", "getFile"], [154, 3, 1, "", "getPath"]], "pyworkflow.tests.tests.GTestResult": [[154, 3, 1, "", "addError"], [154, 3, 1, "", "addFailure"], [154, 3, 1, "", "addSuccess"], [154, 3, 1, "", "doReport"], [154, 3, 1, "", "getTestName"], [154, 2, 1, "", "numberTests"], [154, 3, 1, "", "openXmlReport"], [154, 3, 1, "", "reportError"], [154, 3, 1, "", "startTest"], [154, 2, 1, "", "testFailed"], [154, 3, 1, "", "tic"], [154, 3, 1, "", "toc"], [154, 2, 1, "", "xml"]], "pyworkflow.utils": [[156, 0, 0, "-", "dataset"], [157, 0, 0, "-", "echo"], [158, 0, 0, "-", "graph"], [159, 0, 0, "-", "log"], [160, 0, 0, "-", "mpi"], [161, 0, 0, "-", "path"], [162, 0, 0, "-", "process"], [163, 0, 0, "-", "profiler"], [164, 0, 0, "-", "progressbar"], [165, 0, 0, "-", "properties"], [166, 0, 0, "-", "reflection"], [167, 0, 0, "-", "utils"], [168, 0, 0, "-", "which"]], "pyworkflow.utils.dataset": [[156, 1, 1, "", "Column"], [156, 1, 1, "", "DataSet"], [156, 1, 1, "", "SingleFileDataSet"], [156, 1, 1, "", "SqliteDataSet"], [156, 1, 1, "", "Table"]], "pyworkflow.utils.dataset.Column": [[156, 3, 1, "", "convert"], [156, 3, 1, "", "getDefault"], [156, 3, 1, "", "getLabel"], [156, 3, 1, "", "getName"], [156, 3, 1, "", "getRenderType"], [156, 3, 1, "", "getType"], [156, 3, 1, "", "hasDefault"], [156, 3, 1, "", "setRenderType"]], "pyworkflow.utils.dataset.DataSet": [[156, 3, 1, "", "currentTable"], [156, 3, 1, "", "getNumberSlices"], [156, 3, 1, "", "getNumberSlicesForTemplate"], [156, 3, 1, "", "getTable"], [156, 3, 1, "", "getTypeOfColumn"], [156, 3, 1, "", "getVolumeName"], [156, 3, 1, "", "listTables"], [156, 3, 1, "", "setNumberSlices"], [156, 3, 1, "", "setVolumeName"]], "pyworkflow.utils.dataset.Table": [[156, 3, 1, "", "addRow"], [156, 3, 1, "", "getColumn"], [156, 3, 1, "", "getColumnValues"], [156, 3, 1, "", "getColumns"], [156, 3, 1, "", "getDataToRender"], [156, 3, 1, "", "getDataToRenderAndExtra"], [156, 3, 1, "", "getIdColumn"], [156, 3, 1, "", "getIndexFromValue"], [156, 3, 1, "", "getNumberOfColumns"], [156, 3, 1, "", "getRow"], [156, 3, 1, "", "getRows"], [156, 3, 1, "", "getSize"], [156, 3, 1, "", "getTransformationMatrix"], [156, 3, 1, "", "getValueFromIndex"], [156, 3, 1, "", "hasColumn"], [156, 3, 1, "", "hasEnabledColumn"], [156, 3, 1, "", "iterColumns"], [156, 3, 1, "", "iterRows"], [156, 3, 1, "", "setLabelToRender"], [156, 3, 1, "", "updateRow"]], "pyworkflow.utils.echo": [[157, 5, 1, "", "echo"], [157, 5, 1, "", "echo_class"], [157, 5, 1, "", "echo_instancemethod"], [157, 5, 1, "", "echo_module"], [157, 5, 1, "", "format_args"], [157, 5, 1, "", "is_class_private_name"], [157, 5, 1, "", "is_classmethod"], [157, 5, 1, "", "method_name"], [157, 5, 1, "", "name"]], "pyworkflow.utils.graph": [[158, 1, 1, "", "Graph"], [158, 1, 1, "", "Node"]], "pyworkflow.utils.graph.Graph": [[158, 3, 1, "", "aliasNode"], [158, 3, 1, "", "createNode"], [158, 3, 1, "", "getNode"], [158, 3, 1, "", "getNodes"], [158, 3, 1, "", "getRoot"], [158, 3, 1, "", "getRootNodes"], [158, 3, 1, "", "printDot"], [158, 3, 1, "", "printNodes"]], "pyworkflow.utils.graph.Node": [[158, 3, 1, "", "addChild"], [158, 3, 1, "", "countChilds"], [158, 3, 1, "", "getChilds"], [158, 3, 1, "", "getLabel"], [158, 3, 1, "", "getName"], [158, 3, 1, "", "getParent"], [158, 3, 1, "", "getParents"], [158, 3, 1, "", "isRoot"], [158, 3, 1, "", "iterChilds"], [158, 3, 1, "", "iterChildsBreadth"], [158, 3, 1, "", "setLabel"]], "pyworkflow.utils.log": [[159, 1, 1, "", "LevelFilter"], [159, 1, 1, "", "LoggingConfigurator"], [159, 1, 1, "", "STATUS"], [159, 5, 1, "", "getExtraLogInfo"], [159, 5, 1, "", "getFinalProjId"], [159, 5, 1, "", "getFinalProtId"], [159, 5, 1, "", "restoreStdoutAndErr"], [159, 5, 1, "", "setDefaultLoggingContext"]], "pyworkflow.utils.log.LevelFilter": [[159, 3, 1, "", "filter"]], "pyworkflow.utils.log.LoggingConfigurator": [[159, 2, 1, "", "customLoggingActive"], [159, 3, 1, "", "loadCustomLoggingConfig"], [159, 3, 1, "", "setUpGUILogging"], [159, 3, 1, "", "setUpProtocolRunLogging"], [159, 3, 1, "", "setUpProtocolSchedulingLog"], [159, 3, 1, "", "setupDefaultLogging"], [159, 3, 1, "", "setupLogging"]], "pyworkflow.utils.log.STATUS": [[159, 2, 1, "", "EVENT"], [159, 2, 1, "", "INTERVAL"], [159, 2, 1, "", "START"], [159, 2, 1, "", "STOP"]], "pyworkflow.utils.mpi": [[160, 5, 1, "", "runJobMPI"], [160, 5, 1, "", "runJobMPISlave"], [160, 5, 1, "", "send"]], "pyworkflow.utils.path": [[161, 5, 1, "", "cleanPath"], [161, 5, 1, "", "cleanPattern"], [161, 5, 1, "", "commonPath"], [161, 5, 1, "", "copyFile"], [161, 5, 1, "", "copyPattern"], [161, 5, 1, "", "copyTree"], [161, 5, 1, "", "createAbsLink"], [161, 5, 1, "", "createLink"], [161, 5, 1, "", "createUniqueFileName"], [161, 5, 1, "", "expandPattern"], [161, 5, 1, "", "findFile"], [161, 5, 1, "", "findFileRecursive"], [161, 5, 1, "", "findRootFrom"], [161, 5, 1, "", "getExt"], [161, 5, 1, "", "getFileLastModificationDate"], [161, 5, 1, "", "getFileSize"], [161, 5, 1, "", "getFiles"], [161, 5, 1, "", "getHomePath"], [161, 5, 1, "", "getLastFile"], [161, 5, 1, "", "getParentFolder"], [161, 5, 1, "", "iterBigFile"], [161, 5, 1, "", "joinExt"], [161, 5, 1, "", "makeFilePath"], [161, 5, 1, "", "makePath"], [161, 5, 1, "", "makeTmpPath"], [161, 5, 1, "", "missingPaths"], [161, 5, 1, "", "moveFile"], [161, 5, 1, "", "moveTree"], [161, 5, 1, "", "removeBaseExt"], [161, 5, 1, "", "removeExt"], [161, 5, 1, "", "renderLine"], [161, 5, 1, "", "renderTextFile"], [161, 5, 1, "", "replaceBaseExt"], [161, 5, 1, "", "replaceExt"]], "pyworkflow.utils.process": [[162, 5, 1, "", "buildRunCommand"], [162, 5, 1, "", "isProcessAlive"], [162, 5, 1, "", "killWithChilds"], [162, 5, 1, "", "runCommand"], [162, 5, 1, "", "runJob"]], "pyworkflow.utils.profiler": [[163, 1, 1, "", "Timer"], [163, 5, 1, "", "getInstancesCount"], [163, 5, 1, "", "instanceCreated"], [163, 5, 1, "", "instanceDestroyed"], [163, 5, 1, "", "printInstances"], [163, 5, 1, "", "waitForDebugger"]], "pyworkflow.utils.profiler.Timer": [[163, 2, 1, "", "blackList"], [163, 2, 1, "", "indentation"], [163, 2, 1, "", "minms"], [163, 2, 1, "", "whiteList"]], "pyworkflow.utils.progressbar": [[164, 1, 1, "", "ProgressBar"]], "pyworkflow.utils.progressbar.ProgressBar": [[164, 2, 1, "", "DEFAULT"], [164, 2, 1, "", "DOT"], [164, 2, 1, "", "FULL"], [164, 2, 1, "", "NOBAR"], [164, 2, 1, "", "OBJID"], [164, 3, 1, "", "finish"], [164, 3, 1, "", "start"], [164, 3, 1, "", "update"]], "pyworkflow.utils.properties": [[165, 1, 1, "", "Color"], [165, 1, 1, "", "Icon"], [165, 1, 1, "", "KEYSYM"], [165, 1, 1, "", "Message"], [165, 1, 1, "", "PluginInformation"], [165, 1, 1, "", "PluginStates"], [165, 1, 1, "", "colorText"]], "pyworkflow.utils.properties.Color": [[165, 2, 1, "", "DARK_GREY_COLOR"], [165, 2, 1, "", "LIGHT_BLUE_COLOR"], [165, 2, 1, "", "LIGHT_GREY_COLOR"], [165, 2, 1, "", "LIGHT_GREY_COLOR_2"], [165, 2, 1, "", "LIGHT_RED_COLOR"], [165, 2, 1, "", "RED_COLOR"], [165, 2, 1, "", "STATUS_ABORTED"], [165, 2, 1, "", "STATUS_FAILED"], [165, 2, 1, "", "STATUS_FINISHED"], [165, 2, 1, "", "STATUS_INTERACTIVE"], [165, 2, 1, "", "STATUS_LAUNCHED"], [165, 2, 1, "", "STATUS_RUNNING"], [165, 2, 1, "", "STATUS_SAVED"]], "pyworkflow.utils.properties.Icon": [[165, 2, 1, "", "ACTION_BROWSE"], [165, 2, 1, "", "ACTION_CLOSE"], [165, 2, 1, "", "ACTION_CONTINUE"], [165, 2, 1, "", "ACTION_COPY"], [165, 2, 1, "", "ACTION_DB"], [165, 2, 1, "", "ACTION_DELETE"], [165, 2, 1, "", "ACTION_EDIT"], [165, 2, 1, "", "ACTION_EXECUTE"], [165, 2, 1, "", "ACTION_EXPORT"], [165, 2, 1, "", "ACTION_EXPORT_UPLOAD"], [165, 2, 1, "", "ACTION_FIND_NEXT"], [165, 2, 1, "", "ACTION_FIND_PREVIOUS"], [165, 2, 1, "", "ACTION_HELP"], [165, 2, 1, "", "ACTION_IN"], [165, 2, 1, "", "ACTION_LIST"], [165, 2, 1, "", "ACTION_NEW"], [165, 2, 1, "", "ACTION_OUT"], [165, 2, 1, "", "ACTION_REFERENCES"], [165, 2, 1, "", "ACTION_REFRESH"], [165, 2, 1, "", "ACTION_RENAME"], [165, 2, 1, "", "ACTION_RESULTS"], [165, 2, 1, "", "ACTION_SAVE"], [165, 2, 1, "", "ACTION_SEARCH"], [165, 2, 1, "", "ACTION_SELECT_FROM"], [165, 2, 1, "", "ACTION_SELECT_TO"], [165, 2, 1, "", "ACTION_STEPS"], [165, 2, 1, "", "ACTION_STOP"], [165, 2, 1, "", "ACTION_STOP_WORKFLOW"], [165, 2, 1, "", "ACTION_TREE"], [165, 2, 1, "", "ACTION_UNDO"], [165, 2, 1, "", "ACTION_VISUALIZE"], [165, 2, 1, "", "ACTION_WIZ"], [165, 2, 1, "", "ARROW_LEFT"], [165, 2, 1, "", "ARROW_UP"], [165, 2, 1, "", "BRUSH"], [165, 2, 1, "", "BUTTON_CANCEL"], [165, 2, 1, "", "BUTTON_CLOSE"], [165, 2, 1, "", "BUTTON_PC"], [165, 2, 1, "", "BUTTON_SAVE"], [165, 2, 1, "", "BUTTON_SELECT"], [165, 2, 1, "", "CHECKED"], [165, 2, 1, "", "DELETE_OPERATION"], [165, 2, 1, "", "FAILURE"], [165, 2, 1, "", "HOME"], [165, 2, 1, "", "INSTALL"], [165, 2, 1, "", "INSTALLED"], [165, 2, 1, "", "LIGHTBULB"], [165, 2, 1, "", "LINK"], [165, 2, 1, "", "PLUGIN_AUTHORS"], [165, 2, 1, "", "PLUGIN_DESCRIPTION"], [165, 2, 1, "", "PLUGIN_PACKAGE"], [165, 2, 1, "", "PLUGIN_RELEASE_DATE"], [165, 2, 1, "", "PLUGIN_VERSION"], [165, 2, 1, "", "PLUS_CIRCLE"], [165, 2, 1, "", "PROCESSING"], [165, 2, 1, "", "ROCKET"], [165, 2, 1, "", "ROOT"], [165, 2, 1, "", "RUNS_LIST"], [165, 2, 1, "", "RUNS_TREE"], [165, 2, 1, "", "SCIPION_ICON"], [165, 2, 1, "", "SCIPION_ICON_PROJ"], [165, 2, 1, "", "SCIPION_ICON_PROJS"], [165, 2, 1, "", "SCIPION_ICON_PROT"], [165, 2, 1, "", "TAGS"], [165, 2, 1, "", "TO_INSTALL"], [165, 2, 1, "", "TO_UPDATE"], [165, 2, 1, "", "UNCHECKED"], [165, 2, 1, "", "UNINSTALL"], [165, 2, 1, "", "WAITING"]], "pyworkflow.utils.properties.KEYSYM": [[165, 2, 1, "", "DELETE"], [165, 2, 1, "", "RETURN"]], "pyworkflow.utils.properties.Message": [[165, 2, 1, "", "CANCEL_SELECTED_OPERATION"], [165, 2, 1, "", "ERROR_DIMENSIONS"], [165, 2, 1, "", "ERROR_IMPORT_VOL"], [165, 2, 1, "", "ERROR_NO_EST_CTF"], [165, 2, 1, "", "ERROR_PATTERN_EMPTY"], [165, 2, 1, "", "ERROR_PATTERN_FILES"], [165, 2, 1, "", "ERROR_WEBGL"], [165, 2, 1, "", "EXECUTE_PLUGINS_MANAGER_OPERATION"], [165, 2, 1, "", "HELP_MPI_THREADS"], [165, 2, 1, "", "HELP_RUNMODE"], [165, 2, 1, "", "HELP_USEQUEUE"], [165, 2, 1, "", "HELP_USEQUEUEPERJOB"], [165, 2, 1, "", "HELP_WAIT_FOR"], [165, 2, 1, "", "LABEL_ALIG_PART"], [165, 2, 1, "", "LABEL_AMPLITUDE"], [165, 2, 1, "", "LABEL_ANALYZE"], [165, 2, 1, "", "LABEL_APPLY_TRANSFORM"], [165, 2, 1, "", "LABEL_BIB_BTN"], [165, 2, 1, "", "LABEL_BLOCK_SELECTION"], [165, 2, 1, "", "LABEL_BROWSE"], [165, 2, 1, "", "LABEL_BROWSE_ACTION"], [165, 2, 1, "", "LABEL_BUTTON_CANCEL"], [165, 2, 1, "", "LABEL_BUTTON_CLOSE"], [165, 2, 1, "", "LABEL_BUTTON_EXEC"], [165, 2, 1, "", "LABEL_BUTTON_HELP"], [165, 2, 1, "", "LABEL_BUTTON_OK"], [165, 2, 1, "", "LABEL_BUTTON_RETURN"], [165, 2, 1, "", "LABEL_BUTTON_SAVE"], [165, 2, 1, "", "LABEL_BUTTON_VIS"], [165, 2, 1, "", "LABEL_BUTTON_WIZ"], [165, 2, 1, "", "LABEL_CHECKSTACK"], [165, 2, 1, "", "LABEL_CITE"], [165, 2, 1, "", "LABEL_COLS"], [165, 2, 1, "", "LABEL_COMMENT"], [165, 2, 1, "", "LABEL_CONTINUE"], [165, 2, 1, "", "LABEL_CONTINUE_ACTION"], [165, 2, 1, "", "LABEL_CONTINUE_WORKFLOW"], [165, 2, 1, "", "LABEL_COPY"], [165, 2, 1, "", "LABEL_COPYFILES"], [165, 2, 1, "", "LABEL_COPY_ACTION"], [165, 2, 1, "", "LABEL_CREATED"], [165, 2, 1, "", "LABEL_CREATE_PROJECT"], [165, 2, 1, "", "LABEL_CTF_ESTI"], [165, 2, 1, "", "LABEL_DATA"], [165, 2, 1, "", "LABEL_DB"], [165, 2, 1, "", "LABEL_DEFAULT"], [165, 2, 1, "", "LABEL_DELETE"], [165, 2, 1, "", "LABEL_DELETE_ACTION"], [165, 2, 1, "", "LABEL_DELETE_FORM"], [165, 2, 1, "", "LABEL_DELETE_PROJECT"], [165, 2, 1, "", "LABEL_DISABLE"], [165, 2, 1, "", "LABEL_DISPLAY_TABLE_CONFIG"], [165, 2, 1, "", "LABEL_EDIT"], [165, 2, 1, "", "LABEL_EDIT_ACTION"], [165, 2, 1, "", "LABEL_ENABLE"], [165, 2, 1, "", "LABEL_EXECUTION"], [165, 2, 1, "", "LABEL_EXPERT"], [165, 2, 1, "", "LABEL_EXPERT_ADVANCE"], [165, 2, 1, "", "LABEL_EXPERT_EXPERT"], [165, 2, 1, "", "LABEL_EXPERT_NORMAL"], [165, 2, 1, "", "LABEL_EXPORT"], [165, 2, 1, "", "LABEL_EXPORT_UPLOAD"], [165, 2, 1, "", "LABEL_FOUND_ERROR"], [165, 2, 1, "", "LABEL_HELP"], [165, 2, 1, "", "LABEL_HOST"], [165, 2, 1, "", "LABEL_IMPORT_PROJECT"], [165, 2, 1, "", "LABEL_INPUT"], [165, 2, 1, "", "LABEL_INPUT_MIC"], [165, 2, 1, "", "LABEL_INPUT_MOVS"], [165, 2, 1, "", "LABEL_INPUT_PART"], [165, 2, 1, "", "LABEL_INPUT_VOLS"], [165, 2, 1, "", "LABEL_INSPECTOR"], [165, 2, 1, "", "LABEL_LABEL"], [165, 2, 1, "", "LABEL_LABEL_SELECTION"], [165, 2, 1, "", "LABEL_LAUNCHED"], [165, 2, 1, "", "LABEL_LIST"], [165, 2, 1, "", "LABEL_LOGS"], [165, 2, 1, "", "LABEL_LOGS_ERROR"], [165, 2, 1, "", "LABEL_LOGS_OUTPUT"], [165, 2, 1, "", "LABEL_LOGS_SCIPION"], [165, 2, 1, "", "LABEL_MAGNI_RATE"], [165, 2, 1, "", "LABEL_METHODS"], [165, 2, 1, "", "LABEL_MIRRORY"], [165, 2, 1, "", "LABEL_MODIFIED"], [165, 2, 1, "", "LABEL_MPI"], [165, 2, 1, "", "LABEL_NEW"], [165, 2, 1, "", "LABEL_NEW_ACTION"], [165, 2, 1, "", "LABEL_OBJCREATED"], [165, 2, 1, "", "LABEL_OBJINFO"], [165, 2, 1, "", "LABEL_OBJLABEL"], [165, 2, 1, "", "LABEL_OBJSUMMARY"], [165, 2, 1, "", "LABEL_ONLY_SHIFTS"], [165, 2, 1, "", "LABEL_OPT_COMMENT"], [165, 2, 1, "", "LABEL_OUTPUT"], [165, 2, 1, "", "LABEL_PARALLEL"], [165, 2, 1, "", "LABEL_PARAM_NO"], [165, 2, 1, "", "LABEL_PARAM_YES"], [165, 2, 1, "", "LABEL_PATTERN"], [165, 2, 1, "", "LABEL_PATTERNT"], [165, 2, 1, "", "LABEL_PATTERNU"], [165, 2, 1, "", "LABEL_PICK_GAUSS"], [165, 2, 1, "", "LABEL_PROJECT"], [165, 2, 1, "", "LABEL_PROJECTS"], [165, 2, 1, "", "LABEL_PROTTREE_NONE"], [165, 2, 1, "", "LABEL_QUEUE"], [165, 2, 1, "", "LABEL_QUEUE_FOR_JOBS"], [165, 2, 1, "", "LABEL_QUEUE_NO"], [165, 2, 1, "", "LABEL_QUEUE_YES"], [165, 2, 1, "", "LABEL_REFRESH"], [165, 2, 1, "", "LABEL_RENAME"], [165, 2, 1, "", "LABEL_RENAME_PROJECT"], [165, 2, 1, "", "LABEL_RENDER"], [165, 2, 1, "", "LABEL_RESET_WORKFLOW"], [165, 2, 1, "", "LABEL_RESLICE"], [165, 2, 1, "", "LABEL_RESTART_FORM"], [165, 2, 1, "", "LABEL_RESTART_FORM_MANY"], [165, 2, 1, "", "LABEL_RESTART_WORKFLOW"], [165, 2, 1, "", "LABEL_ROWS"], [165, 2, 1, "", "LABEL_RUNMODE"], [165, 2, 1, "", "LABEL_RUNNAME"], [165, 2, 1, "", "LABEL_RUN_MODE_RESTART"], [165, 2, 1, "", "LABEL_RUN_MODE_RESUME"], [165, 2, 1, "", "LABEL_SAMP_MODE"], [165, 2, 1, "", "LABEL_SAMP_MODE_1"], [165, 2, 1, "", "LABEL_SAMP_MODE_2"], [165, 2, 1, "", "LABEL_SAMP_RATE"], [165, 2, 1, "", "LABEL_SAVED_FORM"], [165, 2, 1, "", "LABEL_SAVE_OUTPUT"], [165, 2, 1, "", "LABEL_SCANNED"], [165, 2, 1, "", "LABEL_SELECT_ALL"], [165, 2, 1, "", "LABEL_SELECT_FROM"], [165, 2, 1, "", "LABEL_SELECT_TO"], [165, 2, 1, "", "LABEL_SMALLTREE"], [165, 2, 1, "", "LABEL_SPH_ABERRATION"], [165, 2, 1, "", "LABEL_STEPS"], [165, 2, 1, "", "LABEL_STOP"], [165, 2, 1, "", "LABEL_STOP_ACTION"], [165, 2, 1, "", "LABEL_STOP_FORM"], [165, 2, 1, "", "LABEL_STOP_WORKFLOW"], [165, 2, 1, "", "LABEL_SUMMARY"], [165, 2, 1, "", "LABEL_THREADS"], [165, 2, 1, "", "LABEL_THRESHOLD"], [165, 2, 1, "", "LABEL_TREE"], [165, 2, 1, "", "LABEL_VISIBLE"], [165, 2, 1, "", "LABEL_VOLTAGE"], [165, 2, 1, "", "LABEL_VOLUME_SELECTION"], [165, 2, 1, "", "LABEL_WAIT_FOR"], [165, 2, 1, "", "LABEL_WORKFLOW"], [165, 2, 1, "", "LABEL_WRAP"], [165, 2, 1, "", "MESSAGE_DELETE_PROJECT"], [165, 2, 1, "", "NO_INFO_LOGS"], [165, 2, 1, "", "NO_INFO_METHODS"], [165, 2, 1, "", "NO_INFO_SUMMARY"], [165, 2, 1, "", "NO_SAVE_SETTINGS"], [165, 2, 1, "", "NO_VIEWER_FOUND"], [165, 2, 1, "", "RESLICE_X_NEGATIVE"], [165, 2, 1, "", "RESLICE_X_POSITIVE"], [165, 2, 1, "", "RESLICE_Y_NEGATIVE"], [165, 2, 1, "", "RESLICE_Y_POSITIVE"], [165, 2, 1, "", "RESLICE_Z_NEGATIVE"], [165, 2, 1, "", "SHOWJ_TITLE"], [165, 2, 1, "", "TEXT_ALIG_PART"], [165, 2, 1, "", "TEXT_AMPLITUDE"], [165, 2, 1, "", "TEXT_HELP"], [165, 2, 1, "", "TEXT_MAGNI_RATE"], [165, 2, 1, "", "TEXT_NO_CTF_READY"], [165, 2, 1, "", "TEXT_NO_INPUT_MIC"], [165, 2, 1, "", "TEXT_NO_OUTPUT_CO"], [165, 2, 1, "", "TEXT_NO_OUTPUT_FILES"], [165, 2, 1, "", "TEXT_PATTERN"], [165, 2, 1, "", "TEXT_SAMP_MODE"], [165, 2, 1, "", "TEXT_SAMP_RATE"], [165, 2, 1, "", "TEXT_SPH_ABERRATION"], [165, 2, 1, "", "TEXT_VOLTAGE"], [165, 2, 1, "", "TITLE_ACTIVE_PROTOCOLS"], [165, 2, 1, "", "TITLE_BROWSE_DATA"], [165, 2, 1, "", "TITLE_COMMENT"], [165, 2, 1, "", "TITLE_CREATE_PROJECT"], [165, 2, 1, "", "TITLE_CREATE_PROJECT_NAME"], [165, 2, 1, "", "TITLE_DELETE_FORM"], [165, 2, 1, "", "TITLE_DELETE_PROJECT"], [165, 2, 1, "", "TITLE_EDIT_OBJECT"], [165, 2, 1, "", "TITLE_EXEC"], [165, 2, 1, "", "TITLE_INSPECTOR"], [165, 2, 1, "", "TITLE_LABEL"], [165, 2, 1, "", "TITLE_LAUNCHED"], [165, 2, 1, "", "TITLE_LAUNCHED_WORKFLOW_FAILED"], [165, 2, 1, "", "TITLE_LAUNCHED_WORKFLOW_FAILED_FORM"], [165, 2, 1, "", "TITLE_NAME_RUN"], [165, 2, 1, "", "TITLE_PICK_GAUSS"], [165, 2, 1, "", "TITLE_RENAME_PROJECT"], [165, 2, 1, "", "TITLE_RESETED_WORKFLOW_FAILED"], [165, 2, 1, "", "TITLE_RESET_WORKFLOW"], [165, 2, 1, "", "TITLE_RESET_WORKFLOW_FORM"], [165, 2, 1, "", "TITLE_RESTART_FORM"], [165, 2, 1, "", "TITLE_RESTART_WORKFLOW"], [165, 2, 1, "", "TITLE_RESTART_WORKFLOW_FORM"], [165, 2, 1, "", "TITLE_RUN"], [165, 2, 1, "", "TITLE_SAVED_FORM"], [165, 2, 1, "", "TITLE_SAVE_OUTPUT"], [165, 2, 1, "", "TITLE_STOPPED_WORKFLOW_FAILED"], [165, 2, 1, "", "TITLE_STOP_FORM"], [165, 2, 1, "", "TITLE_STOP_WORKFLOW"], [165, 2, 1, "", "TITLE_STOP_WORKFLOW_FORM"], [165, 2, 1, "", "TOOLTIP_EXTERNAL"], [165, 2, 1, "", "TOOLTIP_REFRESH"], [165, 2, 1, "", "TOOLTIP_SEARCH"], [165, 2, 1, "", "TOOLTIP_SEARCH_NEXT"], [165, 2, 1, "", "TOOLTIP_SEARCH_PREVIOUS"], [165, 2, 1, "", "VAR_COMMENT"], [165, 2, 1, "", "VAR_EXEC_HOST"], [165, 2, 1, "", "VAR_EXPERT"], [165, 2, 1, "", "VAR_MPI"], [165, 2, 1, "", "VAR_QUEUE"], [165, 2, 1, "", "VAR_RUN_MODE"], [165, 2, 1, "", "VAR_RUN_NAME"], [165, 2, 1, "", "VAR_THREADS"], [165, 2, 1, "", "VIEW_DATA"], [165, 2, 1, "", "VIEW_PROJECTS"], [165, 2, 1, "", "VIEW_PROTOCOLS"], [165, 2, 1, "", "VIEW_UPLOAD"]], "pyworkflow.utils.properties.PluginInformation": [[165, 2, 1, "", "PLUGIN_AUTHORS"], [165, 2, 1, "", "PLUGIN_DESCRIPTION"], [165, 2, 1, "", "PLUGIN_NAME"], [165, 2, 1, "", "PLUGIN_RELEASE_DATE"], [165, 2, 1, "", "PLUGIN_URL"], [165, 2, 1, "", "PLUGIN_VERSION"]], "pyworkflow.utils.properties.PluginStates": [[165, 2, 1, "", "AVAILABLE_RELEASE"], [165, 2, 1, "", "BINARY"], [165, 2, 1, "", "CHECKED"], [165, 2, 1, "", "ERRORS"], [165, 2, 1, "", "FAILURE"], [165, 2, 1, "", "INSTALL"], [165, 2, 1, "", "INSTALLED"], [165, 2, 1, "", "PLUGIN"], [165, 2, 1, "", "PRECESSING"], [165, 2, 1, "", "SUCCESS"], [165, 2, 1, "", "TO_INSTALL"], [165, 2, 1, "", "TO_UPDATE"], [165, 2, 1, "", "UNCHECKED"], [165, 2, 1, "", "UNINSTALL"], [165, 2, 1, "", "WAITING"]], "pyworkflow.utils.properties.colorText": [[165, 2, 1, "", "BLUE"], [165, 2, 1, "", "BOLD"], [165, 2, 1, "", "CYAN"], [165, 2, 1, "", "DARKCYAN"], [165, 2, 1, "", "END"], [165, 2, 1, "", "GREEN"], [165, 2, 1, "", "PURPLE"], [165, 2, 1, "", "RED"], [165, 2, 1, "", "UNDERLINE"], [165, 2, 1, "", "YELLOW"]], "pyworkflow.utils.reflection": [[166, 5, 1, "", "checkPlugin"], [166, 5, 1, "", "getModules"], [166, 5, 1, "", "getSubclasses"], [166, 5, 1, "", "getSubclassesFromModules"], [166, 5, 1, "", "getSubclassesFromPath"], [166, 5, 1, "", "isModuleAFolder"], [166, 5, 1, "", "isModuleLoaded"], [166, 5, 1, "", "isSameFunction"]], "pyworkflow.utils.utils": [[167, 1, 1, "", "Environ"], [167, 1, 1, "", "LazyDict"], [167, 1, 1, "", "StrColors"], [167, 1, 1, "", "Timer"], [167, 1, 1, "", "UtcConverter"], [167, 5, 1, "", "ansi"], [167, 5, 1, "", "black"], [167, 5, 1, "", "blackB"], [167, 5, 1, "", "blue"], [167, 5, 1, "", "blueB"], [167, 5, 1, "", "blueStr"], [167, 5, 1, "", "cyan"], [167, 5, 1, "", "cyanB"], [167, 5, 1, "", "cyanStr"], [167, 5, 1, "", "dateStr"], [167, 5, 1, "", "envVarOn"], [167, 5, 1, "", "environAdd"], [167, 5, 1, "", "executeLongRemote"], [167, 5, 1, "", "executeRemote"], [167, 5, 1, "", "executeRemoteX"], [167, 5, 1, "", "existsVariablePaths"], [167, 5, 1, "", "formatExceptionInfo"], [167, 5, 1, "", "getBoolListFromValues"], [167, 5, 1, "", "getColorStr"], [167, 5, 1, "", "getEnvVariable"], [167, 5, 1, "", "getFloatListFromValues"], [167, 5, 1, "", "getFreePort"], [167, 5, 1, "", "getHostFullName"], [167, 5, 1, "", "getHostName"], [167, 5, 1, "", "getLineInFile"], [167, 5, 1, "", "getListFromRangeString"], [167, 5, 1, "", "getListFromValues"], [167, 5, 1, "", "getLocalHostName"], [167, 5, 1, "", "getLocalUserName"], [167, 5, 1, "", "getMemoryAvailable"], [167, 5, 1, "", "getRangeStringFromList"], [167, 5, 1, "", "getStringListFromValues"], [167, 5, 1, "", "getUniqueItems"], [167, 5, 1, "", "grayStr"], [167, 5, 1, "", "green"], [167, 5, 1, "", "greenB"], [167, 5, 1, "", "greenStr"], [167, 5, 1, "", "hasAnyFileChanged"], [167, 5, 1, "", "hasFileChangedSince"], [167, 5, 1, "", "hex_to_rgb"], [167, 5, 1, "", "isInFile"], [167, 5, 1, "", "isPower2"], [167, 5, 1, "", "lighter"], [167, 5, 1, "", "magenta"], [167, 5, 1, "", "magentaB"], [167, 5, 1, "", "magentaStr"], [167, 5, 1, "", "parseBibTex"], [167, 5, 1, "", "parseHyperText"], [167, 5, 1, "", "prettyDate"], [167, 5, 1, "", "prettyDelta"], [167, 5, 1, "", "prettyDict"], [167, 5, 1, "", "prettyLog"], [167, 5, 1, "", "prettySize"], [167, 5, 1, "", "prettyTime"], [167, 5, 1, "", "prettyTimestamp"], [167, 5, 1, "", "prettyXml"], [167, 5, 1, "", "printTraceBack"], [167, 5, 1, "", "readProperties"], [167, 5, 1, "", "red"], [167, 5, 1, "", "redB"], [167, 5, 1, "", "redStr"], [167, 5, 1, "", "rgb_to_hex"], [167, 5, 1, "", "sortListByList"], [167, 5, 1, "", "strToBoolean"], [167, 5, 1, "", "timeit"], [167, 5, 1, "", "trace"], [167, 5, 1, "", "weakImport"], [167, 5, 1, "", "white"], [167, 5, 1, "", "whiteB"], [167, 5, 1, "", "yellow"], [167, 5, 1, "", "yellowB"], [167, 5, 1, "", "yellowStr"]], "pyworkflow.utils.utils.Environ": [[167, 2, 1, "", "BEGIN"], [167, 2, 1, "", "END"], [167, 2, 1, "", "REPLACE"], [167, 3, 1, "", "addLibrary"], [167, 3, 1, "", "getFirst"], [167, 3, 1, "", "getPrepend"], [167, 3, 1, "", "set"], [167, 3, 1, "", "setPrepend"], [167, 3, 1, "", "update"]], "pyworkflow.utils.utils.LazyDict": [[167, 3, 1, "", "evaluate_callback"]], "pyworkflow.utils.utils.StrColors": [[167, 2, 1, "", "blue"], [167, 2, 1, "", "cyan"], [167, 2, 1, "", "gray"], [167, 2, 1, "", "green"], [167, 2, 1, "", "magenta"], [167, 2, 1, "", "red"], [167, 2, 1, "", "yellow"]], "pyworkflow.utils.utils.Timer": [[167, 3, 1, "", "getElapsedTime"], [167, 3, 1, "", "getToc"], [167, 3, 1, "", "tic"], [167, 3, 1, "", "toc"]], "pyworkflow.utils.utils.UtcConverter": [[167, 2, 1, "", "utc_delta"]], "pyworkflow.utils.which": [[168, 4, 1, "", "WhichError"], [168, 5, 1, "", "commandExists"], [168, 5, 1, "", "which"], [168, 5, 1, "", "whichall"], [168, 5, 1, "", "whichgen"]], "pyworkflow.viewer": [[169, 1, 1, "", "CommandView"], [169, 1, 1, "", "MessageView"], [169, 1, 1, "", "ProtocolViewer"], [169, 1, 1, "", "TextView"], [169, 1, 1, "", "View"], [169, 1, 1, "", "Viewer"]], "pyworkflow.viewer.CommandView": [[169, 3, 1, "", "show"]], "pyworkflow.viewer.MessageView": [[169, 3, 1, "", "getMessage"], [169, 3, 1, "", "show"]], "pyworkflow.viewer.ProtocolViewer": [[169, 3, 1, "", "getTkRoot"], [169, 3, 1, "", "getWindow"], [169, 3, 1, "", "setProtocol"], [169, 3, 1, "", "visualize"]], "pyworkflow.viewer.TextView": [[169, 3, 1, "", "getFileList"], [169, 3, 1, "", "show"]], "pyworkflow.viewer.View": [[169, 3, 1, "", "show"], [169, 3, 1, "", "toUrl"]], "pyworkflow.viewer.Viewer": [[169, 3, 1, "", "errorList"], [169, 3, 1, "", "errorMessage"], [169, 3, 1, "", "getParent"], [169, 3, 1, "", "getProject"], [169, 3, 1, "", "getProtocolId"], [169, 3, 1, "", "getTkRoot"], [169, 3, 1, "", "getView"], [169, 3, 1, "", "infoMessage"], [169, 3, 1, "", "setProject"], [169, 3, 1, "", "textView"], [169, 3, 1, "", "tkWindow"], [169, 3, 1, "", "visualize"], [169, 3, 1, "", "warnMessage"]], "pyworkflow.webservices": [[171, 0, 0, "-", "config"], [172, 0, 0, "-", "notifier"], [173, 0, 0, "-", "repository"]], "pyworkflow.webservices.notifier": [[172, 1, 1, "", "ProjectWorkflowNotifier"]], "pyworkflow.webservices.notifier.ProjectWorkflowNotifier": [[172, 3, 1, "", "getEntryFromWebservice"], [172, 3, 1, "", "notifyWorkflow"]], "pyworkflow.webservices.repository": [[173, 1, 1, "", "WorkflowRepository"]], "pyworkflow.webservices.repository.WorkflowRepository": [[173, 3, 1, "", "search"], [173, 3, 1, "", "upload"]], "pyworkflow.wizard": [[174, 1, 1, "", "Wizard"]], "pyworkflow.wizard.Wizard": [[174, 3, 1, "", "getView"], [174, 3, 1, "", "show"]], "scipion": [[178, 0, 0, "-", "constants"], [179, 0, 0, "-", "guiplugin"], [180, 0, 0, "-", "install"], [190, 0, 0, "-", "scripts"], [195, 0, 0, "-", "utils"]], "scipion.guiplugin": [[179, 5, 1, "", "importFromTemplate"], [179, 5, 1, "", "launchPluginManager"], [179, 5, 1, "", "launchTemplates"]], "scipion.install": [[181, 0, 0, "-", "change_rpath"], [182, 0, 0, "-", "clean"], [183, 0, 0, "-", "find_deps"], [184, 0, 0, "-", "funcs"], [186, 0, 0, "-", "install_plugin"], [187, 0, 0, "-", "plugin_funcs"], [188, 0, 0, "-", "plugin_manager"], [189, 0, 0, "-", "update_manager"]], "scipion.install.change_rpath": [[181, 5, 1, "", "isElf"], [181, 5, 1, "", "main"], [181, 5, 1, "", "replace"]], "scipion.install.clean": [[182, 5, 1, "", "cmd"]], "scipion.install.find_deps": [[183, 5, 1, "", "isElf"], [183, 5, 1, "", "libDeps"], [183, 5, 1, "", "main"], [183, 5, 1, "", "searchPaths"]], "scipion.install.funcs": [[184, 1, 1, "", "Command"], [184, 1, 1, "", "Environment"], [184, 1, 1, "", "Link"], [184, 1, 1, "", "Target"], [184, 5, 1, "", "ansi"], [184, 5, 1, "", "black"], [184, 5, 1, "", "blue"], [184, 5, 1, "", "checkLib"], [184, 5, 1, "", "cyan"], [184, 5, 1, "", "green"], [184, 5, 1, "", "magenta"], [184, 5, 1, "", "mkdir"], [184, 5, 1, "", "progInPath"], [184, 5, 1, "", "red"], [184, 5, 1, "", "white"], [184, 5, 1, "", "yellow"]], "scipion.install.funcs.Command": [[184, 3, 1, "", "execute"]], "scipion.install.funcs.Environment": [[184, 3, 1, "", "addLibrary"], [184, 3, 1, "", "addPackage"], [184, 3, 1, "", "addPipModule"], [184, 3, 1, "", "addTarget"], [184, 3, 1, "", "addTargetAlias"], [184, 3, 1, "", "execute"], [184, 3, 1, "", "getBin"], [184, 3, 1, "", "getBinFolder"], [184, 3, 1, "", "getEm"], [184, 3, 1, "", "getEmFolder"], [184, 3, 1, "", "getIncludeFolder"], [184, 3, 1, "", "getLib"], [184, 3, 1, "", "getLibFolder"], [184, 3, 1, "", "getLibSuffix"], [184, 3, 1, "", "getLogFolder"], [184, 3, 1, "", "getPackage"], [184, 3, 1, "", "getPackages"], [184, 3, 1, "", "getProcessors"], [184, 3, 1, "", "getPython"], [184, 3, 1, "", "getPythonPackagesFolder"], [184, 3, 1, "", "getSoftware"], [184, 3, 1, "", "getTarget"], [184, 3, 1, "", "getTargetList"], [184, 3, 1, "", "getTargets"], [184, 3, 1, "", "getTmpFolder"], [184, 3, 1, "", "hasPackage"], [184, 3, 1, "", "hasTarget"], [184, 3, 1, "", "printHelp"], [184, 3, 1, "", "setDefault"], [184, 3, 1, "", "updateCudaEnviron"]], "scipion.install.funcs.Link": [[184, 3, 1, "", "createPackageLink"]], "scipion.install.funcs.Target": [[184, 3, 1, "", "addCommand"], [184, 3, 1, "", "addDep"], [184, 3, 1, "", "execute"], [184, 3, 1, "", "getCommands"], [184, 3, 1, "", "getDeps"], [184, 3, 1, "", "getName"], [184, 3, 1, "", "isDefault"], [184, 3, 1, "", "setDefault"]], "scipion.install.install_plugin": [[186, 5, 1, "", "installPluginMethods"]], "scipion.install.plugin_funcs": [[187, 1, 1, "", "PluginInfo"], [187, 1, 1, "", "PluginRepository"]], "scipion.install.plugin_funcs.PluginInfo": [[187, 3, 1, "", "getAuthor"], [187, 3, 1, "", "getBinVersions"], [187, 3, 1, "", "getCompatiblePipReleases"], [187, 3, 1, "", "getDirName"], [187, 3, 1, "", "getHomePage"], [187, 3, 1, "", "getInstallenv"], [187, 3, 1, "", "getLatestRelease"], [187, 3, 1, "", "getPipJsonData"], [187, 3, 1, "", "getPipName"], [187, 3, 1, "", "getPipVersion"], [187, 3, 1, "", "getPluginClass"], [187, 3, 1, "", "getPluginName"], [187, 3, 1, "", "getReleaseDate"], [187, 3, 1, "", "getSourceUrl"], [187, 3, 1, "", "getSummary"], [187, 3, 1, "", "hasPipPackage"], [187, 3, 1, "", "install"], [187, 3, 1, "", "installBin"], [187, 3, 1, "", "installPipModule"], [187, 3, 1, "", "isInstalled"], [187, 3, 1, "", "printBinInfoStr"], [187, 3, 1, "", "setFakedRemotePluginInfo"], [187, 3, 1, "", "setLocalPluginInfo"], [187, 3, 1, "", "setRemotePluginInfo"], [187, 3, 1, "", "uninstallBins"], [187, 3, 1, "", "uninstallPip"]], "scipion.install.plugin_funcs.PluginRepository": [[187, 3, 1, "", "getBinToPluginDict"], [187, 3, 1, "", "getPlugins"], [187, 3, 1, "", "printPluginInfoStr"]], "scipion.install.plugin_manager": [[188, 1, 1, "", "Operation"], [188, 1, 1, "", "OperationList"], [188, 1, 1, "", "PluginBrowser"], [188, 1, 1, "", "PluginHelp"], [188, 1, 1, "", "PluginManager"], [188, 1, 1, "", "PluginManagerWindow"], [188, 1, 1, "", "PluginTree"], [188, 5, 1, "", "getRotatingFileLogger"], [188, 5, 1, "", "main"]], "scipion.install.plugin_manager.Operation": [[188, 3, 1, "", "getObjName"], [188, 3, 1, "", "getObjParent"], [188, 3, 1, "", "getObjStatus"], [188, 3, 1, "", "getObjText"], [188, 3, 1, "", "getObjType"], [188, 3, 1, "", "runOperation"], [188, 3, 1, "", "setObjStatus"]], "scipion.install.plugin_manager.OperationList": [[188, 3, 1, "", "applyOperations"], [188, 3, 1, "", "clearOperations"], [188, 3, 1, "", "getOperationByName"], [188, 3, 1, "", "getOperations"], [188, 3, 1, "", "insertOperation"], [188, 3, 1, "", "operationIndex"], [188, 3, 1, "", "removeOperation"]], "scipion.install.plugin_manager.PluginBrowser": [[188, 3, 1, "", "deleteOperation"], [188, 3, 1, "", "isPlugin"], [188, 3, 1, "", "linkToWebSite"], [188, 3, 1, "", "loadPlugins"], [188, 3, 1, "", "operationInformation"], [188, 3, 1, "", "reloadInstalledPlugin"], [188, 3, 1, "", "showOperationList"], [188, 3, 1, "", "showPluginInformation"]], "scipion.install.plugin_manager.PluginHelp": [[188, 3, 1, "", "createHelp"]], "scipion.install.plugin_manager.PluginManagerWindow": [[188, 3, 1, "", "close"], [188, 3, 1, "", "onExit"], [188, 3, 1, "", "onHelp"], [188, 3, 1, "", "onUser"], [188, 3, 1, "", "onVariables"]], "scipion.install.plugin_manager.PluginTree": [[188, 3, 1, "", "check_item"], [188, 3, 1, "", "disable"], [188, 3, 1, "", "enable"], [188, 3, 1, "", "failure_item"], [188, 3, 1, "", "insert"], [188, 3, 1, "", "installed_item"], [188, 3, 1, "", "is_disabled"], [188, 3, 1, "", "is_enabled"], [188, 3, 1, "", "processing_item"], [188, 3, 1, "", "uncheck_item"], [188, 3, 1, "", "update_item"]], "scipion.install.update_manager": [[189, 1, 1, "", "UpdateManager"], [189, 5, 1, "", "updateManagerParser"]], "scipion.install.update_manager.UpdateManager": [[189, 3, 1, "", "getPackageState"], [189, 3, 1, "", "getPackagesStatus"], [189, 2, 1, "", "packageNames"], [189, 2, 1, "", "pwem"], [189, 2, 1, "", "pyworkflow"], [189, 2, 1, "", "scipion"], [189, 3, 1, "", "updateScipion"]], "scipion.scripts": [[191, 0, 0, "-", "config"], [192, 0, 0, "-", "fontbrowser"], [193, 0, 0, "-", "kickoff"], [194, 0, 0, "-", "tutorial"]], "scipion.scripts.config": [[191, 5, 1, "", "addPluginsVariables"], [191, 5, 1, "", "addPyworkflowVariables"], [191, 5, 1, "", "addVariablesToSection"], [191, 5, 1, "", "ansi"], [191, 5, 1, "", "backup"], [191, 5, 1, "", "black"], [191, 5, 1, "", "blue"], [191, 5, 1, "", "checkConf"], [191, 5, 1, "", "checkNotify"], [191, 5, 1, "", "checkPaths"], [191, 5, 1, "", "compareConfig"], [191, 5, 1, "", "compareConfigVariable"], [191, 5, 1, "", "createConf"], [191, 5, 1, "", "cyan"], [191, 5, 1, "", "getConfigPathFromConfigFile"], [191, 5, 1, "", "getConfigVariable"], [191, 5, 1, "", "getTemplateName"], [191, 5, 1, "", "green"], [191, 5, 1, "", "magenta"], [191, 5, 1, "", "main"], [191, 5, 1, "", "red"], [191, 5, 1, "", "white"], [191, 5, 1, "", "yellow"]], "scipion.scripts.fontbrowser": [[192, 1, 1, "", "Font_wm"]], "scipion.scripts.kickoff": [[193, 1, 1, "", "KickoffView"], [193, 1, 1, "", "KickoffWindow"], [193, 5, 1, "", "assignAllParams"], [193, 5, 1, "", "chooseTemplate"], [193, 5, 1, "", "createProjectFromWorkflow"], [193, 5, 1, "", "createTemplateFile"], [193, 5, 1, "", "flag2Value"], [193, 5, 1, "", "getFlagArg"], [193, 5, 1, "", "getTemplates"], [193, 5, 1, "", "importTemplate"], [193, 5, 1, "", "launchGUI"], [193, 5, 1, "", "launchTemplate"], [193, 5, 1, "", "main"], [193, 5, 1, "", "resolveTemplate"], [193, 5, 1, "", "scheduleProject"]], "scipion.scripts.kickoff.KickoffWindow": [[193, 3, 1, "", "getAction"], [193, 3, 1, "", "getTemplate"], [193, 3, 1, "", "switchView"]], "scipion.scripts.tutorial": [[194, 1, 1, "", "Tutorial"], [194, 1, 1, "", "TutorialBetagal"], [194, 1, 1, "", "TutorialIntro"], [194, 5, 1, "", "getWorkflow"]], "scipion.scripts.tutorial.Tutorial": [[194, 3, 1, "", "loadWorkflow"]], "scipion.scripts.tutorial.TutorialBetagal": [[194, 3, 1, "", "loadWorkflow"]], "scipion.scripts.tutorial.TutorialIntro": [[194, 3, 1, "", "loadWorkflow"]], "scipion.utils": [[195, 5, 1, "", "getExternalJsonTemplates"], [195, 5, 1, "", "getInstallPath"], [195, 5, 1, "", "getModuleFolder"], [195, 5, 1, "", "getScipionAppPath"], [195, 5, 1, "", "getScipionHome"], [195, 5, 1, "", "getScriptsPath"], [195, 5, 1, "", "getTemplatesPath"]], "xmipp3": [[199, 1, 1, "", "Plugin"], [200, 0, 0, "-", "base"], [201, 0, 0, "-", "bibtex"], [202, 0, 0, "-", "constants"], [203, 0, 0, "-", "convert"], [199, 5, 1, "", "installDeepLearningToolkit"], [207, 0, 0, "-", "programs"], [208, 0, 0, "-", "protocols"], [335, 0, 0, "-", "utils"]], "xmipp3.Plugin": [[199, 3, 1, "", "defineBinaries"], [199, 3, 1, "", "getEnviron"], [199, 3, 1, "", "getMatlabEnviron"], [199, 3, 1, "", "runXmippProgram"]], "xmipp3.base": [[200, 1, 1, "", "HelicalFinder"], [200, 1, 1, "", "ProjMatcher"], [200, 1, 1, "", "XmippProtocol"], [200, 1, 1, "", "XmippSet"], [200, 5, 1, "", "findRow"], [200, 5, 1, "", "findRowById"], [200, 5, 1, "", "getLabelPythonType"], [200, 5, 1, "", "getMdFirstRow"], [200, 5, 1, "", "getXmippPath"], [200, 5, 1, "", "isXmippCudaPresent"], [200, 5, 1, "", "iterMdRows"]], "xmipp3.base.HelicalFinder": [[200, 3, 1, "", "getSymmetry"], [200, 3, 1, "", "runCoarseSearch"], [200, 3, 1, "", "runFineSearch"], [200, 3, 1, "", "runSymmetrize"]], "xmipp3.base.ProjMatcher": [[200, 3, 1, "", "produceAlignedImagesStep"], [200, 3, 1, "", "projMatchStep"]], "xmipp3.base.XmippProtocol": [[200, 3, 1, "", "convertInputToXmipp"], [200, 3, 1, "", "getCondaEnv"], [200, 3, 1, "", "getConvertedInput"], [200, 3, 1, "", "getModel"], [200, 3, 1, "", "validateDLtoolkit"]], "xmipp3.base.XmippSet": [[200, 3, 1, "", "append"], [200, 3, 1, "", "convert"], [200, 3, 1, "", "getItemClass"], [200, 3, 1, "", "getSize"], [200, 3, 1, "", "isEmpty"], [200, 3, 1, "", "read"], [200, 3, 1, "", "setMd"], [200, 3, 1, "", "sort"], [200, 3, 1, "", "write"]], "xmipp3.convert": [[204, 0, 0, "-", "convert"], [205, 0, 0, "-", "dataimport"], [206, 0, 0, "-", "io_coordinates"]], "xmipp3.convert.convert": [[204, 5, 1, "", "acquisitionToRow"], [204, 5, 1, "", "alignmentToRow"], [204, 5, 1, "", "class2DToRow"], [204, 5, 1, "", "convertToMrc"], [204, 5, 1, "", "coordinateToRow"], [204, 5, 1, "", "createClassesFromImages"], [204, 5, 1, "", "createClassesFromImages2"], [204, 5, 1, "", "createItemMatrix"], [204, 5, 1, "", "createParamPhantomFile"], [204, 5, 1, "", "ctfModelToRow"], [204, 5, 1, "", "defocusGroupSetToRow"], [204, 5, 1, "", "fillClasses"], [204, 5, 1, "", "fixVolumeFileName"], [204, 5, 1, "", "geometryFromMatrix"], [204, 5, 1, "", "getImageLocation"], [204, 5, 1, "", "getMovieFileName"], [204, 5, 1, "", "getScipionObj"], [204, 5, 1, "", "getXmippAttribute"], [204, 5, 1, "", "imageToRow"], [204, 5, 1, "", "locationToXmipp"], [204, 5, 1, "", "matrixFromGeometry"], [204, 5, 1, "", "mdToCTFModel"], [204, 5, 1, "", "micrographToCTFParam"], [204, 5, 1, "", "micrographToRow"], [204, 5, 1, "", "objectToRow"], [204, 5, 1, "", "openMd"], [204, 5, 1, "", "particleToRow"], [204, 5, 1, "", "prefixAttribute"], [204, 5, 1, "", "readAnglesFromMicrographs"], [204, 5, 1, "", "readCTFModel"], [204, 5, 1, "", "readCoordinates"], [204, 5, 1, "", "readPosCoordinates"], [204, 5, 1, "", "readSetOfClasses"], [204, 5, 1, "", "readSetOfClasses2D"], [204, 5, 1, "", "readSetOfClasses3D"], [204, 5, 1, "", "readSetOfClassesVol"], [204, 5, 1, "", "readSetOfCoordinates"], [204, 5, 1, "", "readSetOfImages"], [204, 5, 1, "", "readSetOfMicrographs"], [204, 5, 1, "", "readSetOfMovieParticles"], [204, 5, 1, "", "readSetOfParticles"], [204, 5, 1, "", "readSetOfVolumes"], [204, 5, 1, "", "readShiftsMovieAlignment"], [204, 5, 1, "", "rowFromMd"], [204, 5, 1, "", "rowToAcquisition"], [204, 5, 1, "", "rowToAlignment"], [204, 5, 1, "", "rowToClass"], [204, 5, 1, "", "rowToCoordinate"], [204, 5, 1, "", "rowToCtfModel"], [204, 5, 1, "", "rowToImage"], [204, 5, 1, "", "rowToMicrograph"], [204, 5, 1, "", "rowToMovieParticle"], [204, 5, 1, "", "rowToObject"], [204, 5, 1, "", "rowToParticle"], [204, 5, 1, "", "rowToVolume"], [204, 5, 1, "", "setObjId"], [204, 5, 1, "", "setOfImagesToMd"], [204, 5, 1, "", "setOfMicrographsToMd"], [204, 5, 1, "", "setOfParticlesToMd"], [204, 5, 1, "", "setPsdFiles"], [204, 5, 1, "", "setRowId"], [204, 5, 1, "", "setXmippAttribute"], [204, 5, 1, "", "setXmippAttributes"], [204, 5, 1, "", "volumeToRow"], [204, 5, 1, "", "writeCTFModel"], [204, 5, 1, "", "writeCoordsConfig"], [204, 5, 1, "", "writeMicCoordinates"], [204, 5, 1, "", "writeMovieMd"], [204, 5, 1, "", "writeSetOfCTFs"], [204, 5, 1, "", "writeSetOfClasses2D"], [204, 5, 1, "", "writeSetOfClassesVol"], [204, 5, 1, "", "writeSetOfCoordinates"], [204, 5, 1, "", "writeSetOfCoordinatesWithState"], [204, 5, 1, "", "writeSetOfDefocusGroups"], [204, 5, 1, "", "writeSetOfImages"], [204, 5, 1, "", "writeSetOfMicrographs"], [204, 5, 1, "", "writeSetOfMicrographsPairs"], [204, 5, 1, "", "writeSetOfMovies"], [204, 5, 1, "", "writeSetOfParticles"], [204, 5, 1, "", "writeSetOfVolumes"], [204, 5, 1, "", "writeShiftsMovieAlignment"], [204, 5, 1, "", "xmippToLocation"]], "xmipp3.convert.dataimport": [[205, 1, 1, "", "XmippImport"]], "xmipp3.convert.dataimport.XmippImport": [[205, 3, 1, "", "getBoxSize"], [205, 3, 1, "", "importCTF"], [205, 3, 1, "", "importCoordinates"], [205, 3, 1, "", "importMicrographs"], [205, 3, 1, "", "importParticles"], [205, 3, 1, "", "loadAcquisitionInfo"], [205, 3, 1, "", "validate"], [205, 3, 1, "", "validateMicrographs"], [205, 3, 1, "", "validateParticles"]], "xmipp3.convert.io_coordinates": [[206, 5, 1, "", "readSetOfCoordsFromPosFnames"], [206, 5, 1, "", "writeCoordsListToPosFname"], [206, 5, 1, "", "writeCoordsListToRawText"]], "xmipp3.programs": [[207, 1, 1, "", "LabelData"], [207, 1, 1, "", "ProgramDb"], [207, 1, 1, "", "ProgramKeywordsRank"], [207, 5, 1, "", "createProgramsAutocomplete"], [207, 5, 1, "", "createProgramsDb"], [207, 5, 1, "", "escapeStr"], [207, 5, 1, "", "getProgramsDbName"], [207, 5, 1, "", "getXmippLabels"], [207, 5, 1, "", "getXmippLabelsName"], [207, 5, 1, "", "getXmippPrograms"], [207, 5, 1, "", "skipProgram"]], "xmipp3.programs.ProgramDb": [[207, 2, 1, "", "DB_TIMEOUT"], [207, 3, 1, "", "commit"], [207, 3, 1, "", "create"], [207, 3, 1, "", "createTables"], [207, 3, 1, "", "insertLabel"], [207, 3, 1, "", "insertProgram"], [207, 3, 1, "", "selectCategories"], [207, 3, 1, "", "selectLabels"], [207, 3, 1, "", "selectProgram"], [207, 3, 1, "", "selectPrograms"], [207, 3, 1, "", "updateProgramCategory"]], "xmipp3.programs.ProgramKeywordsRank": [[207, 3, 1, "", "getRank"]], "xmipp3.protocols": [[209, 0, 0, "-", "protocol_align_volume"], [210, 0, 0, "-", "protocol_align_volume_and_particles"], [211, 0, 0, "-", "protocol_analyze_local_ctf"], [212, 0, 0, "-", "protocol_angular_graph_consistency"], [213, 0, 0, "-", "protocol_apply_alignment"], [214, 0, 0, "-", "protocol_apply_deformation_zernike3d"], [215, 0, 0, "-", "protocol_apply_transformation_matrix"], [216, 0, 0, "-", "protocol_apply_zernike3d"], [217, 0, 0, "-", "protocol_assignment_tilt_pair"], [218, 0, 0, "-", "protocol_break_symmetry"], [219, 0, 0, "-", "protocol_center_particles"], [220, 0, 0, "-", "protocol_cl2d"], [221, 0, 0, "-", "protocol_cl2d_align"], [222, 0, 0, "-", "protocol_classes_2d_mapping"], [223, 0, 0, "-", "protocol_classification_gpuCorr"], [224, 0, 0, "-", "protocol_classification_gpuCorr_full"], [225, 0, 0, "-", "protocol_classification_gpuCorr_semi"], [226, 0, 0, "-", "protocol_classify_kmeans2d"], [227, 0, 0, "-", "protocol_compare_angles"], [228, 0, 0, "-", "protocol_compare_reprojections"], [229, 0, 0, "-", "protocol_consensus_classes3D"], [230, 0, 0, "-", "protocol_consensus_local_ctf"], [231, 0, 0, "-", "protocol_convert_pdb"], [232, 0, 0, "-", "protocol_core_analysis"], [233, 0, 0, "-", "protocol_create_gallery"], [234, 0, 0, "-", "protocol_ctf_consensus"], [235, 0, 0, "-", "protocol_ctf_correct_wiener2d"], [236, 0, 0, "-", "protocol_ctf_defocus_group"], [237, 0, 0, "-", "protocol_ctf_micrographs"], [238, 0, 0, "-", "protocol_deep_align"], [239, 0, 0, "-", "protocol_deep_denoising"], [240, 0, 0, "-", "protocol_deep_hand"], [241, 0, 0, "-", "protocol_deep_micrograph_screen"], [242, 0, 0, "-", "protocol_denoise_particles"], [243, 0, 0, "-", "protocol_eliminate_empty_images"], [244, 0, 0, "-", "protocol_enrich"], [245, 0, 0, "-", "protocol_extract_asymmetric_unit"], [246, 0, 0, "-", "protocol_extract_particles"], [247, 0, 0, "-", "protocol_extract_particles_movies"], [248, 0, 0, "-", "protocol_extract_particles_pairs"], [249, 0, 0, "-", "protocol_flexalign"], [250, 0, 0, "-", "protocol_generate_reprojections"], [251, 0, 0, "-", "protocol_helical_parameters"], [252, 0, 0, "-", "protocol_kerdensom"], [253, 0, 0, "-", "protocol_kmeans_clustering"], [254, 0, 0, "-", "protocol_local_ctf"], [255, 0, 0, "-", "protocol_metaprotocol_create_output"], [256, 0, 0, "-", "protocol_metaprotocol_create_subset"], [257, 0, 0, "-", "protocol_metaprotocol_discrete_heterogeneity_scheduler"], [258, 0, 0, "-", "protocol_metaprotocol_golden_highres"], [259, 0, 0, "-", "protocol_ml2d"], [260, 0, 0, "-", "protocol_movie_average"], [261, 0, 0, "-", "protocol_movie_gain"], [262, 0, 0, "-", "protocol_movie_max_shift"], [263, 0, 0, "-", "protocol_movie_opticalflow"], [264, 0, 0, "-", "protocol_movie_split_frames"], [265, 0, 0, "-", "protocol_multiple_fscs"], [266, 0, 0, "-", "protocol_multireference_alignability"], [267, 0, 0, "-", "protocol_normalize_strain"], [268, 0, 0, "-", "protocol_particle_boxsize"], [269, 0, 0, "-", "protocol_particle_pick"], [270, 0, 0, "-", "protocol_particle_pick_automatic"], [271, 0, 0, "-", "protocol_particle_pick_consensus"], [272, 0, 0, "-", "protocol_particle_pick_pairs"], [273, 0, 0, "-", "protocol_particle_pick_remove_duplicates"], [274, 0, 0, "-", "protocol_phantom_create"], [275, 0, 0, "-", "protocol_pick_noise"], [276, 0, 0, "-", "protocol_postProcessing_deepPostProcessing"], [277, 0, 0, "-", "protocol_preprocess"], [289, 0, 0, "-", "protocol_preprocess_micrographs"], [290, 0, 0, "-", "protocol_projmatch"], [295, 0, 0, "-", "protocol_random_conical_tilt"], [296, 0, 0, "-", "protocol_ransac"], [297, 0, 0, "-", "protocol_reconstruct_fourier"], [298, 0, 0, "-", "protocol_reconstruct_heterogeneous"], [299, 0, 0, "-", "protocol_reconstruct_highres"], [300, 0, 0, "-", "protocol_reconstruct_significant"], [301, 0, 0, "-", "protocol_reconstruct_swarm"], [302, 0, 0, "-", "protocol_resolution3d"], [303, 0, 0, "-", "protocol_resolution_bfactor"], [304, 0, 0, "-", "protocol_resolution_deepres"], [305, 0, 0, "-", "protocol_resolution_directional"], [306, 0, 0, "-", "protocol_resolution_fso"], [307, 0, 0, "-", "protocol_resolution_monogenic_signal"], [308, 0, 0, "-", "protocol_rotate_volume"], [309, 0, 0, "-", "protocol_rotational_spectra"], [310, 0, 0, "-", "protocol_rotational_symmetry"], [311, 0, 0, "-", "protocol_screen_deepConsensus"], [312, 0, 0, "-", "protocol_screen_deeplearning"], [313, 0, 0, "-", "protocol_screen_particles"], [314, 0, 0, "-", "protocol_shift_particles"], [315, 0, 0, "-", "protocol_shift_volume"], [316, 0, 0, "-", "protocol_simulate_ctf"], [317, 0, 0, "-", "protocol_solid_angles"], [318, 0, 0, "-", "protocol_split_volume"], [319, 0, 0, "-", "protocol_split_volume_hierarchical_cluster"], [320, 0, 0, "-", "protocol_structure_map"], [321, 0, 0, "-", "protocol_structure_map_zernike3d"], [322, 0, 0, "-", "protocol_subtract_projection"], [323, 0, 0, "-", "protocol_tilt_analysis"], [324, 0, 0, "-", "protocol_trigger_data"], [325, 0, 0, "-", "protocol_validate_fscq"], [326, 0, 0, "-", "protocol_validate_nontilt"], [327, 0, 0, "-", "protocol_validate_overfitting"], [328, 0, 0, "-", "protocol_volume_adjust_sub"], [329, 0, 0, "-", "protocol_volume_consensus"], [330, 0, 0, "-", "protocol_volume_deform_zernike3d"], [331, 0, 0, "-", "protocol_volume_local_sharpening"], [332, 0, 0, "-", "protocol_volume_strain"], [333, 0, 0, "-", "protocol_write_testC"], [334, 0, 0, "-", "protocol_write_testP"]], "xmipp3.protocols.protocol_align_volume": [[209, 1, 1, "", "XmippProtAlignVolume"], [209, 1, 1, "", "XmippProtAlignVolumeForWeb"]], "xmipp3.protocols.protocol_align_volume.XmippProtAlignVolume": [[209, 3, 1, "", "alignVolumeStep"], [209, 3, 1, "", "createOutputStep"], [209, 2, 1, "", "nVols"]], "xmipp3.protocols.protocol_align_volume_and_particles": [[210, 1, 1, "", "XmippProtAlignVolumeParticles"]], "xmipp3.protocols.protocol_align_volume_and_particles.XmippProtAlignVolumeParticles": [[210, 3, 1, "", "alignParticlesStep"], [210, 3, 1, "", "alignVolumeStep"], [210, 3, 1, "", "convertStep"], [210, 3, 1, "", "createOutputStep"], [210, 2, 1, "", "nVols"]], "xmipp3.protocols.protocol_analyze_local_ctf": [[211, 1, 1, "", "XmippProtAnalyzeLocalCTF"]], "xmipp3.protocols.protocol_analyze_local_ctf.XmippProtAnalyzeLocalCTF": [[211, 3, 1, "", "analyzeDefocus"], [211, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_angular_graph_consistency": [[212, 1, 1, "", "XmippProtAngularGraphConsistency"]], "xmipp3.protocols.protocol_angular_graph_consistency.XmippProtAngularGraphConsistency": [[212, 3, 1, "", "calculateAngStep"], [212, 3, 1, "", "checkInfoField"], [212, 3, 1, "", "cleanDirectory"], [212, 3, 1, "", "convertInputStep"], [212, 3, 1, "", "createOutput"], [212, 3, 1, "", "doIteration000"], [212, 3, 1, "", "globalAssignment"], [212, 3, 1, "", "otsu"], [212, 3, 1, "", "prepareImages"], [212, 3, 1, "", "prepareReferences"], [212, 3, 1, "", "readInfoField"], [212, 3, 1, "", "writeInfoField"]], "xmipp3.protocols.protocol_apply_alignment": [[213, 1, 1, "", "XmippProtApplyAlignment"]], "xmipp3.protocols.protocol_apply_alignment.XmippProtApplyAlignment": [[213, 3, 1, "", "applyAlignmentStep"], [213, 3, 1, "", "convertInputStep"], [213, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_apply_transformation_matrix": [[215, 1, 1, "", "XmippProtApplyTransformationMatrix"]], "xmipp3.protocols.protocol_apply_transformation_matrix.XmippProtApplyTransformationMatrix": [[215, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_apply_zernike3d": [[216, 1, 1, "", "XmippApplyZernike3D"]], "xmipp3.protocols.protocol_apply_zernike3d.XmippApplyZernike3D": [[216, 3, 1, "", "createOutputStep"], [216, 3, 1, "", "deformStep"], [216, 3, 1, "", "writeZernikeFile"]], "xmipp3.protocols.protocol_assignment_tilt_pair": [[217, 1, 1, "", "XmippProtAssignmentTiltPair"]], "xmipp3.protocols.protocol_assignment_tilt_pair.XmippProtAssignmentTiltPair": [[217, 3, 1, "", "assignmentStep"], [217, 3, 1, "", "convertInputStep"], [217, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_break_symmetry": [[218, 1, 1, "", "XmippProtAngBreakSymmetry"]], "xmipp3.protocols.protocol_break_symmetry.XmippProtAngBreakSymmetry": [[218, 3, 1, "", "breakSymmetryStep"], [218, 3, 1, "", "convertInputStep"], [218, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_center_particles": [[219, 1, 1, "", "XmippProtCenterParticles"]], "xmipp3.protocols.protocol_center_particles.XmippProtCenterParticles": [[219, 3, 1, "", "createOutputStep"], [219, 3, 1, "", "realignStep"]], "xmipp3.protocols.protocol_cl2d": [[220, 1, 1, "", "XmippProtCL2D"]], "xmipp3.protocols.protocol_cl2d.XmippProtCL2D": [[220, 3, 1, "", "analyzeOutOfCores"], [220, 3, 1, "", "convertInputStep"], [220, 3, 1, "", "createOutputStep"], [220, 3, 1, "", "evaluateClassesStep"], [220, 3, 1, "", "sortClassesStep"]], "xmipp3.protocols.protocol_cl2d_align": [[221, 1, 1, "", "XmippProtCL2DAlign"]], "xmipp3.protocols.protocol_cl2d_align.XmippProtCL2DAlign": [[221, 3, 1, "", "convertInputStep"], [221, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_classes_2d_mapping": [[222, 1, 1, "", "ScatterImageMarker"], [222, 1, 1, "", "XmippProtCL2DMap"]], "xmipp3.protocols.protocol_classes_2d_mapping.ScatterImageMarker": [[222, 3, 1, "", "imScatter"], [222, 3, 1, "", "initializePlot"], [222, 3, 1, "", "is_window_closed"], [222, 3, 1, "", "readImages"], [222, 3, 1, "", "setPickCallback"], [222, 3, 1, "", "setRectangleSelector"], [222, 3, 1, "", "setSelectionButtons"], [222, 3, 1, "", "setSliderCallback"], [222, 3, 1, "", "updatePatch"]], "xmipp3.protocols.protocol_classes_2d_mapping.XmippProtCL2DMap": [[222, 2, 1, "", "CLASSES_MD"], [222, 3, 1, "", "computeMappingStep"], [222, 3, 1, "", "convertStep"], [222, 2, 1, "", "distances"], [222, 3, 1, "", "interactiveSelStep"], [222, 3, 1, "", "isSelected"], [222, 2, 1, "", "red_methods"]], "xmipp3.protocols.protocol_classification_gpuCorr": [[223, 1, 1, "", "XmippProtGpuCrrCL2D"]], "xmipp3.protocols.protocol_classification_gpuCorr.XmippProtGpuCrrCL2D": [[223, 3, 1, "", "attractionGeneralStep"], [223, 3, 1, "", "attractionSplitStep"], [223, 3, 1, "", "checkAttraction"], [223, 3, 1, "", "checkContinueClassification"], [223, 3, 1, "", "checkOutput"], [223, 3, 1, "", "classifyStep"], [223, 3, 1, "", "classifyWholeSetStep"], [223, 3, 1, "", "cleaningPath"], [223, 3, 1, "", "convertSetStep"], [223, 3, 1, "", "createOutputStep"], [223, 3, 1, "", "fastCheckingAtt"], [223, 3, 1, "", "generateMetadata"], [223, 3, 1, "", "iterationStep"], [223, 3, 1, "", "splitStep"]], "xmipp3.protocols.protocol_classification_gpuCorr_full": [[224, 1, 1, "", "HashTableDict"], [224, 1, 1, "", "XmippProtStrGpuCrrCL2D"]], "xmipp3.protocols.protocol_classification_gpuCorr_full.HashTableDict": [[224, 3, 1, "", "isItemPresent"], [224, 3, 1, "", "pushItem"]], "xmipp3.protocols.protocol_classification_gpuCorr_full.XmippProtStrGpuCrrCL2D": [[224, 3, 1, "", "averageClasses"], [224, 3, 1, "", "checkSplit"], [224, 3, 1, "", "classifyStep"], [224, 3, 1, "", "createOutputStep"], [224, 3, 1, "", "generateInput"], [224, 3, 1, "", "generateMdForClassification"], [224, 3, 1, "", "generateOutputClasses"], [224, 3, 1, "", "iterationStep"], [224, 3, 1, "", "splitStep"]], "xmipp3.protocols.protocol_classification_gpuCorr_semi": [[225, 1, 1, "", "HashTableDict"], [225, 1, 1, "", "XmippProtStrGpuCrrSimple"]], "xmipp3.protocols.protocol_classification_gpuCorr_semi.HashTableDict": [[225, 3, 1, "", "isItemPresent"], [225, 3, 1, "", "pushItem"]], "xmipp3.protocols.protocol_classification_gpuCorr_semi.XmippProtStrGpuCrrSimple": [[225, 3, 1, "", "classifyStep"], [225, 3, 1, "", "convertAveragesStep"], [225, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_classify_kmeans2d": [[226, 1, 1, "", "XmippProtKmeansClassif2D"]], "xmipp3.protocols.protocol_classify_kmeans2d.XmippProtKmeansClassif2D": [[226, 3, 1, "", "createOutputStep"], [226, 3, 1, "", "kmeansClassifyStep"]], "xmipp3.protocols.protocol_compare_angles": [[227, 1, 1, "", "XmippProtCompareAngles"]], "xmipp3.protocols.protocol_compare_angles.XmippProtCompareAngles": [[227, 3, 1, "", "analyzeDistanceStep"], [227, 3, 1, "", "convertInputStep"], [227, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_compare_reprojections": [[228, 1, 1, "", "XmippProtCompareReprojections"]], "xmipp3.protocols.protocol_compare_reprojections.XmippProtCompareReprojections": [[228, 3, 1, "", "convertStep"], [228, 3, 1, "", "createOutputStep"], [228, 3, 1, "", "evaluateResiduals"], [228, 3, 1, "", "produceResiduals"]], "xmipp3.protocols.protocol_consensus_classes3D": [[229, 1, 1, "", "XmippProtConsensusClasses3D"]], "xmipp3.protocols.protocol_consensus_classes3D.XmippProtConsensusClasses3D": [[229, 1, 1, "", "ClassesLoader"], [229, 1, 1, "", "ParticleCluster"], [229, 3, 1, "", "checkSignificanceStep"], [229, 3, 1, "", "createOutputStep"], [229, 3, 1, "", "ensembleStep"], [229, 3, 1, "", "findElbowsStep"], [229, 3, 1, "", "intersectStep"]], "xmipp3.protocols.protocol_consensus_classes3D.XmippProtConsensusClasses3D.ClassesLoader": [[229, 3, 1, "", "fillClasses"]], "xmipp3.protocols.protocol_consensus_classes3D.XmippProtConsensusClasses3D.ParticleCluster": [[229, 3, 1, "", "getParticleIds"], [229, 3, 1, "", "getRelativeSize"], [229, 3, 1, "", "getRepresentative"], [229, 3, 1, "", "getSourceSize"], [229, 3, 1, "", "intersection"], [229, 3, 1, "", "union"]], "xmipp3.protocols.protocol_consensus_local_ctf": [[230, 1, 1, "", "XmippProtConsensusLocalCTF"]], "xmipp3.protocols.protocol_consensus_local_ctf.XmippProtConsensusLocalCTF": [[230, 3, 1, "", "compareDefocus"], [230, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_convert_pdb": [[231, 1, 1, "", "XmippProtConvertPdb"]], "xmipp3.protocols.protocol_convert_pdb.XmippProtConvertPdb": [[231, 2, 1, "", "IMPORT_FROM_FILES"], [231, 2, 1, "", "IMPORT_FROM_ID"], [231, 2, 1, "", "IMPORT_OBJ"], [231, 3, 1, "", "convertPdbStep"], [231, 3, 1, "", "createOutput"], [231, 3, 1, "", "pdbDownloadStep"]], "xmipp3.protocols.protocol_core_analysis": [[232, 1, 1, "", "XmippProtCoreAnalysis"]], "xmipp3.protocols.protocol_core_analysis.XmippProtCoreAnalysis": [[232, 3, 1, "", "analyzeCore"], [232, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_create_gallery": [[233, 1, 1, "", "XmippProtCreateGallery"]], "xmipp3.protocols.protocol_create_gallery.XmippProtCreateGallery": [[233, 3, 1, "", "copyInput"], [233, 3, 1, "", "createGallery"], [233, 3, 1, "", "createOutput"]], "xmipp3.protocols.protocol_ctf_consensus": [[234, 1, 1, "", "XmippProtCTFConsensus"], [234, 5, 1, "", "anglesDifference"], [234, 5, 1, "", "averageAngles"], [234, 5, 1, "", "copyAttribute"], [234, 5, 1, "", "setAttribute"]], "xmipp3.protocols.protocol_ctf_consensus.XmippProtCTFConsensus": [[234, 3, 1, "", "createOutputStep"], [234, 3, 1, "", "fillOutput"], [234, 3, 1, "", "initializeParams"], [234, 3, 1, "", "initializeRejDict"], [234, 3, 1, "", "selectCtfStep"], [234, 3, 1, "", "setSecondaryAttributes"], [234, 3, 1, "", "usingXmipp"]], "xmipp3.protocols.protocol_ctf_correct_wiener2d": [[235, 1, 1, "", "XmippProtCTFCorrectWiener2D"]], "xmipp3.protocols.protocol_ctf_correct_wiener2d.XmippProtCTFCorrectWiener2D": [[235, 3, 1, "", "convertInputStep"], [235, 3, 1, "", "createOutputStep"], [235, 3, 1, "", "wienerStep"]], "xmipp3.protocols.protocol_ctf_defocus_group": [[236, 1, 1, "", "XmippProtCTFDefocusGroup"]], "xmipp3.protocols.protocol_ctf_defocus_group.XmippProtCTFDefocusGroup": [[236, 3, 1, "", "convertInputStep"], [236, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_ctf_micrographs": [[237, 1, 1, "", "XmippProtCTFMicrographs"]], "xmipp3.protocols.protocol_ctf_micrographs.XmippProtCTFMicrographs": [[237, 3, 1, "", "calculateAutodownsampling"], [237, 3, 1, "", "checkRejectedCriteria"], [237, 3, 1, "", "evaluateSingleMicrograph"], [237, 3, 1, "", "getInputMicrographs"], [237, 3, 1, "", "getPreviousParameters"], [237, 3, 1, "", "getPreviousValues"], [237, 3, 1, "", "getSinglePreviousParameters"]], "xmipp3.protocols.protocol_deep_align": [[238, 1, 1, "", "XmippProtDeepAlign"]], "xmipp3.protocols.protocol_deep_align.XmippProtDeepAlign": [[238, 3, 1, "", "angularDistance"], [238, 3, 1, "", "computeTrainingSet"], [238, 3, 1, "", "convertStep"], [238, 3, 1, "", "correlationCudaStep"], [238, 3, 1, "", "correlationSignificantStep"], [238, 3, 1, "", "createOutputMetadataStep"], [238, 3, 1, "", "createOutputStep"], [238, 3, 1, "", "generateConeCenters"], [238, 3, 1, "", "generateExpImagesStep"], [238, 3, 1, "", "predictStep"], [238, 3, 1, "", "prepareImagesForTraining"], [238, 3, 1, "", "projectStep"], [238, 3, 1, "", "trainNClassifiers2ClassesStep"]], "xmipp3.protocols.protocol_deep_denoising": [[239, 1, 1, "", "XmippProtDeepDenoising"]], "xmipp3.protocols.protocol_deep_denoising.XmippProtDeepDenoising": [[239, 3, 1, "", "checkIfInputIsCompareReprojection"], [239, 3, 1, "", "copyStackAndResize"], [239, 3, 1, "", "createOutputStep"], [239, 3, 1, "", "getStackOrResize"], [239, 3, 1, "", "predictModel"], [239, 3, 1, "", "preprocessData"], [239, 3, 1, "", "trainModel"]], "xmipp3.protocols.protocol_deep_hand": [[240, 1, 1, "", "XmippProtDeepHand"]], "xmipp3.protocols.protocol_deep_hand.XmippProtDeepHand": [[240, 3, 1, "", "createOutputStep"], [240, 3, 1, "", "flipStep"], [240, 3, 1, "", "predictStep"], [240, 3, 1, "", "preprocessStep"]], "xmipp3.protocols.protocol_deep_micrograph_screen": [[241, 1, 1, "", "XmippProtDeepMicrographScreen"]], "xmipp3.protocols.protocol_deep_micrograph_screen.XmippProtDeepMicrographScreen": [[241, 3, 1, "", "extractMicrographListStepOwn"], [241, 3, 1, "", "getAutoSuffix"], [241, 3, 1, "", "getBoxScale"], [241, 3, 1, "", "getBoxSize"], [241, 3, 1, "", "getCoordSampling"], [241, 3, 1, "", "getCoords"], [241, 3, 1, "", "getDoneMics"], [241, 3, 1, "", "getInputMicrographs"], [241, 3, 1, "", "getMicSampling"], [241, 3, 1, "", "getOutput"], [241, 3, 1, "", "getOutputName"], [241, 3, 1, "", "notOne"], [241, 3, 1, "", "registerCoords"]], "xmipp3.protocols.protocol_denoise_particles": [[242, 1, 1, "", "XmippProtDenoiseParticles"]], "xmipp3.protocols.protocol_denoise_particles.XmippProtDenoiseParticles": [[242, 3, 1, "", "createOutputStep"], [242, 3, 1, "", "denoiseImages"]], "xmipp3.protocols.protocol_eliminate_empty_images": [[243, 1, 1, "", "XmippProtEliminateEmptyBase"], [243, 1, 1, "", "XmippProtEliminateEmptyClasses"], [243, 1, 1, "", "XmippProtEliminateEmptyParticles"]], "xmipp3.protocols.protocol_eliminate_empty_images.XmippProtEliminateEmptyBase": [[243, 3, 1, "", "addAdvancedParams"], [243, 3, 1, "", "createOutputStep"], [243, 3, 1, "", "createOutputs"], [243, 3, 1, "", "eliminationStep"], [243, 3, 1, "", "getInput"], [243, 3, 1, "", "prepareImages"], [243, 3, 1, "", "specialBehavoir"]], "xmipp3.protocols.protocol_eliminate_empty_images.XmippProtEliminateEmptyClasses": [[243, 3, 1, "", "createOutputClasses"], [243, 3, 1, "", "createOutputs"], [243, 3, 1, "", "getInput"], [243, 3, 1, "", "prepareImages"], [243, 3, 1, "", "rejectByPopulation"], [243, 3, 1, "", "specialBehavoir"]], "xmipp3.protocols.protocol_eliminate_empty_images.XmippProtEliminateEmptyParticles": [[243, 3, 1, "", "createOutputs"], [243, 3, 1, "", "getInput"], [243, 3, 1, "", "prepareImages"], [243, 3, 1, "", "specialBehavoir"]], "xmipp3.protocols.protocol_enrich": [[244, 1, 1, "", "XmippProtEnrich"]], "xmipp3.protocols.protocol_enrich.XmippProtEnrich": [[244, 3, 1, "", "changeExtension"], [244, 3, 1, "", "createOutputStep"], [244, 3, 1, "", "opticalFlowAlignmentStep"], [244, 3, 1, "", "volumeAlignmentStep"]], "xmipp3.protocols.protocol_extract_asymmetric_unit": [[245, 1, 1, "", "XmippProtExtractUnit"]], "xmipp3.protocols.protocol_extract_asymmetric_unit.XmippProtExtractUnit": [[245, 3, 1, "", "createOutputStep"], [245, 3, 1, "", "extractUnit"], [245, 3, 1, "", "replace_at_index"]], "xmipp3.protocols.protocol_extract_particles": [[246, 1, 1, "", "XmippProtExtractParticles"]], "xmipp3.protocols.protocol_extract_particles.XmippProtExtractParticles": [[246, 3, 1, "", "createParticles"], [246, 3, 1, "", "getBoxScale"], [246, 3, 1, "", "getBoxSize"], [246, 3, 1, "", "getCoordSampling"], [246, 3, 1, "", "getCoords"], [246, 3, 1, "", "getEven"], [246, 3, 1, "", "getInputMicrographs"], [246, 3, 1, "", "getMicSampling"], [246, 3, 1, "", "getOutput"], [246, 3, 1, "", "notOne"], [246, 3, 1, "", "readPartsFromMics"]], "xmipp3.protocols.protocol_extract_particles_movies": [[247, 1, 1, "", "XmippProtExtractMovieParticles"]], "xmipp3.protocols.protocol_extract_particles_movies.XmippProtExtractMovieParticles": [[247, 3, 1, "", "createOutputStep"], [247, 3, 1, "", "getBoxScale"], [247, 3, 1, "", "getCoordSampling"], [247, 3, 1, "", "getCoords"]], "xmipp3.protocols.protocol_extract_particles_pairs": [[248, 1, 1, "", "XmippProtExtractParticlesPairs"]], "xmipp3.protocols.protocol_extract_particles_pairs.XmippProtExtractParticlesPairs": [[248, 3, 1, "", "createMetadataImageStep"], [248, 3, 1, "", "createOutputStep"], [248, 3, 1, "", "extractParticlesStep"], [248, 3, 1, "", "getBoxScale"], [248, 3, 1, "", "getCoordSampling"], [248, 3, 1, "", "getCoords"], [248, 3, 1, "", "getInputMicrographs"], [248, 3, 1, "", "getMicNameOrId"], [248, 3, 1, "", "getMicSampling"], [248, 3, 1, "", "getOutput"], [248, 3, 1, "", "notOne"], [248, 3, 1, "", "writePosFilesStep"]], "xmipp3.protocols.protocol_flexalign": [[249, 1, 1, "", "XmippProtFlexAlign"]], "xmipp3.protocols.protocol_flexalign.XmippProtFlexAlign": [[249, 2, 1, "", "NO_FLIP"], [249, 2, 1, "", "NO_ROTATION"], [249, 3, 1, "", "getGPUArgs"], [249, 3, 1, "", "getUserAngle"], [249, 3, 1, "", "getUserFlip"], [249, 3, 1, "", "transformGain"], [249, 3, 1, "", "tryProcessMovie"]], "xmipp3.protocols.protocol_generate_reprojections": [[250, 1, 1, "", "XmippProtGenerateReprojections"]], "xmipp3.protocols.protocol_generate_reprojections.XmippProtGenerateReprojections": [[250, 3, 1, "", "convertStep"], [250, 3, 1, "", "createOutputStep"], [250, 3, 1, "", "produceProjections"]], "xmipp3.protocols.protocol_helical_parameters": [[251, 1, 1, "", "XmippProtHelicalParameters"]], "xmipp3.protocols.protocol_helical_parameters.XmippProtHelicalParameters": [[251, 3, 1, "", "coarseSearch"], [251, 3, 1, "", "copyInput"], [251, 3, 1, "", "createOutput"], [251, 3, 1, "", "fineSearch"], [251, 3, 1, "", "symmetrize"]], "xmipp3.protocols.protocol_kerdensom": [[252, 1, 1, "", "KendersomBaseClassify"], [252, 1, 1, "", "XmippProtKerdensom"]], "xmipp3.protocols.protocol_kerdensom.KendersomBaseClassify": [[252, 3, 1, "", "convertInputStep"], [252, 3, 1, "", "createOutputStep"], [252, 3, 1, "", "rewriteClassBlockStep"]], "xmipp3.protocols.protocol_local_ctf": [[254, 1, 1, "", "XmippProtLocalCTF"]], "xmipp3.protocols.protocol_local_ctf.XmippProtLocalCTF": [[254, 3, 1, "", "convertStep"], [254, 3, 1, "", "createOutputStep"], [254, 3, 1, "", "refineDefocus"]], "xmipp3.protocols.protocol_metaprotocol_create_output": [[255, 1, 1, "", "XmippMetaProtCreateOutput"]], "xmipp3.protocols.protocol_metaprotocol_create_output.XmippMetaProtCreateOutput": [[255, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_metaprotocol_create_subset": [[256, 1, 1, "", "XmippMetaProtCreateSubset"]], "xmipp3.protocols.protocol_metaprotocol_create_subset.XmippMetaProtCreateSubset": [[256, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_metaprotocol_discrete_heterogeneity_scheduler": [[257, 1, 1, "", "XmippMetaProtDiscreteHeterogeneityScheduler"]], "xmipp3.protocols.protocol_metaprotocol_discrete_heterogeneity_scheduler.XmippMetaProtDiscreteHeterogeneityScheduler": [[257, 3, 1, "", "checkOutputsStep"], [257, 3, 1, "", "convertInputStep"], [257, 3, 1, "", "createOutputStep"], [257, 3, 1, "", "monitorStep"], [257, 3, 1, "", "setAborted"], [257, 3, 1, "", "setFailed"]], "xmipp3.protocols.protocol_metaprotocol_golden_highres": [[258, 1, 1, "", "XmippMetaProtGoldenHighRes"]], "xmipp3.protocols.protocol_metaprotocol_golden_highres.XmippMetaProtGoldenHighRes": [[258, 2, 1, "", "SPLIT_HT"], [258, 2, 1, "", "SPLIT_OTSU"], [258, 3, 1, "", "checkOutputsStep"], [258, 3, 1, "", "convertInputStep"], [258, 3, 1, "", "createOutputStep"], [258, 3, 1, "", "monitorStep"], [258, 3, 1, "", "otsu"], [258, 3, 1, "", "setAborted"], [258, 3, 1, "", "setFailed"]], "xmipp3.protocols.protocol_ml2d": [[259, 1, 1, "", "XmippProtML2D"]], "xmipp3.protocols.protocol_ml2d.XmippProtML2D": [[259, 3, 1, "", "convertInputStep"], [259, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_movie_average": [[260, 1, 1, "", "XmippProtMovieAverage"]], "xmipp3.protocols.protocol_movie_average.XmippProtMovieAverage": [[260, 2, 1, "", "CONVERT_TO_MRC"], [260, 2, 1, "", "INTERP_CUBIC"], [260, 2, 1, "", "INTERP_LINEAR"], [260, 2, 1, "", "INTERP_MAP"], [260, 2, 1, "", "doSaveAveMic"]], "xmipp3.protocols.protocol_movie_gain": [[261, 1, 1, "", "XmippProtMovieGain"], [261, 5, 1, "", "array_zeros_to_median"], [261, 5, 1, "", "arrays_correlation_FT"], [261, 5, 1, "", "invert_array"], [261, 5, 1, "", "translation_correction"]], "xmipp3.protocols.protocol_movie_gain.XmippProtMovieGain": [[261, 3, 1, "", "createOutputStep"], [261, 3, 1, "", "doGainProcess"], [261, 3, 1, "", "estimateGainFun"], [261, 3, 1, "", "estimateOrientationStep"], [261, 2, 1, "", "estimatedDatabase"], [261, 3, 1, "", "getArgs"], [261, 3, 1, "", "getEstimatedGainPath"], [261, 3, 1, "", "getFinalGainPath"], [261, 3, 1, "", "getFlippedOrientedGainPath"], [261, 3, 1, "", "getInputGain"], [261, 3, 1, "", "getOrientedCorrectionPath"], [261, 3, 1, "", "getOrientedGainPath"], [261, 3, 1, "", "getResidualGainPath"], [261, 3, 1, "", "invertImage"], [261, 3, 1, "", "match_orientation"], [261, 3, 1, "", "normalizeGainStep"], [261, 2, 1, "", "residualDatabase"], [261, 3, 1, "", "searchEstimatedGainPath"], [261, 3, 1, "", "updateGainsOutput"]], "xmipp3.protocols.protocol_movie_max_shift": [[262, 1, 1, "", "XmippProtMovieMaxShift"]], "xmipp3.protocols.protocol_movie_max_shift.XmippProtMovieMaxShift": [[262, 2, 1, "", "REJ_AND"], [262, 2, 1, "", "REJ_FRAME"], [262, 2, 1, "", "REJ_MOVIE"], [262, 2, 1, "", "REJ_OR"], [262, 2, 1, "", "REJ_TYPES"], [262, 3, 1, "", "createOutputStep"], [262, 3, 1, "", "getMicFromMovie"], [262, 3, 1, "", "setInputMics"]], "xmipp3.protocols.protocol_movie_opticalflow": [[263, 2, 1, "", "ProtMovieAlignment"], [263, 1, 1, "", "XmippProtOFAlignment"], [263, 5, 1, "", "showCartesianShiftsPlot"]], "xmipp3.protocols.protocol_movie_opticalflow.XmippProtOFAlignment": [[263, 2, 1, "", "CONVERT_TO_MRC"]], "xmipp3.protocols.protocol_movie_split_frames": [[264, 1, 1, "", "XmippProtSplitFrames"]], "xmipp3.protocols.protocol_movie_split_frames.XmippProtSplitFrames": [[264, 3, 1, "", "convertXmdToStackStep"], [264, 3, 1, "", "createOutputStep"], [264, 3, 1, "", "splittingStep"]], "xmipp3.protocols.protocol_multiple_fscs": [[265, 1, 1, "", "XmippProtMultipleFSCs"]], "xmipp3.protocols.protocol_multiple_fscs.XmippProtMultipleFSCs": [[265, 3, 1, "", "compareVolumeStep"], [265, 3, 1, "", "createOutputStep"], [265, 3, 1, "", "prepareReferenceStep"]], "xmipp3.protocols.protocol_multireference_alignability": [[266, 1, 1, "", "XmippProtMultiRefAlignability"]], "xmipp3.protocols.protocol_multireference_alignability.XmippProtMultiRefAlignability": [[266, 2, 1, "", "INPUTARG"], [266, 2, 1, "", "OUTPUTARG"], [266, 3, 1, "", "alignabilityStep"], [266, 3, 1, "", "angularAccuracyStep"], [266, 3, 1, "", "convertInputStep"], [266, 3, 1, "", "createOutputStep"], [266, 3, 1, "", "createPlot2D"], [266, 3, 1, "", "neighbourhoodDirectionStep"], [266, 3, 1, "", "phantomProject"], [266, 3, 1, "", "projectionLibraryStep"], [266, 3, 1, "", "significantStep"]], "xmipp3.protocols.protocol_normalize_strain": [[267, 1, 1, "", "XmippProtNormalizeStrain"]], "xmipp3.protocols.protocol_normalize_strain.XmippProtNormalizeStrain": [[267, 3, 1, "", "normalize"]], "xmipp3.protocols.protocol_particle_boxsize": [[268, 1, 1, "", "XmippProtParticleBoxsize"]], "xmipp3.protocols.protocol_particle_boxsize.XmippProtParticleBoxsize": [[268, 3, 1, "", "boxsizeStep"], [268, 3, 1, "", "convertInputStep"], [268, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_particle_pick": [[269, 1, 1, "", "XmippProtParticlePicking"]], "xmipp3.protocols.protocol_particle_pick.XmippProtParticlePicking": [[269, 3, 1, "", "createDiscardedStep"], [269, 3, 1, "", "createOutputStep"], [269, 3, 1, "", "getCoordsDir"], [269, 3, 1, "", "launchParticlePickGUIStep"]], "xmipp3.protocols.protocol_particle_pick_automatic": [[270, 1, 1, "", "XmippParticlePickingAutomatic"]], "xmipp3.protocols.protocol_particle_pick_automatic.XmippParticlePickingAutomatic": [[270, 3, 1, "", "copyInputFilesStep"], [270, 2, 1, "", "filesToCopy"], [270, 3, 1, "", "getCoordsDir"], [270, 3, 1, "", "getInputMicrographs"], [270, 3, 1, "", "getInputMicrographsPointer"], [270, 3, 1, "", "getMethods"], [270, 3, 1, "", "getSummary"], [270, 3, 1, "", "readCoordsFromMics"], [270, 3, 1, "", "readSetOfCoordinates"]], "xmipp3.protocols.protocol_particle_pick_consensus": [[271, 1, 1, "", "XmippProtConsensusPicking"], [271, 5, 1, "", "consensusWorker"], [271, 5, 1, "", "getReadyMics"]], "xmipp3.protocols.protocol_particle_pick_consensus.XmippProtConsensusPicking": [[271, 2, 1, "", "FN_PREFIX"], [271, 3, 1, "", "calculateConsensusStep"], [271, 3, 1, "", "createOutputStep"], [271, 3, 1, "", "defineRelations"], [271, 3, 1, "", "getMainInput"], [271, 3, 1, "", "getMicId"], [271, 3, 1, "", "insertNewCoorsSteps"], [271, 2, 1, "", "outputName"]], "xmipp3.protocols.protocol_particle_pick_pairs": [[272, 1, 1, "", "XmippProtParticlePickingPairs"]], "xmipp3.protocols.protocol_particle_pick_pairs.XmippProtParticlePickingPairs": [[272, 3, 1, "", "convertInputStep"], [272, 3, 1, "", "getCoords"], [272, 3, 1, "", "getInputMicrographs"], [272, 3, 1, "", "launchParticlePickGUIStep"], [272, 3, 1, "", "registerCoords"]], "xmipp3.protocols.protocol_particle_pick_remove_duplicates": [[273, 1, 1, "", "XmippProtPickingRemoveDuplicates"]], "xmipp3.protocols.protocol_particle_pick_remove_duplicates.XmippProtPickingRemoveDuplicates": [[273, 2, 1, "", "FN_PREFIX"], [273, 3, 1, "", "defineRelations"], [273, 3, 1, "", "getMainInput"], [273, 3, 1, "", "insertNewCoorsSteps"], [273, 2, 1, "", "outputName"], [273, 3, 1, "", "removeDuplicatesStep"]], "xmipp3.protocols.protocol_phantom_create": [[274, 1, 1, "", "XmippProtPhantom"]], "xmipp3.protocols.protocol_phantom_create.XmippProtPhantom": [[274, 3, 1, "", "createOutputStep"], [274, 3, 1, "", "createPhantomsStep"]], "xmipp3.protocols.protocol_pick_noise": [[275, 1, 1, "", "XmippProtPickNoise"], [275, 5, 1, "", "pickNoise_prepareInput"]], "xmipp3.protocols.protocol_pick_noise.XmippProtPickNoise": [[275, 3, 1, "", "createOutputStep"], [275, 3, 1, "", "getInputMicrographs"], [275, 3, 1, "", "getInputMicrographsPointer"], [275, 3, 1, "", "pickNoiseStep"], [275, 3, 1, "", "prepareInput"]], "xmipp3.protocols.protocol_postProcessing_deepPostProcessing": [[276, 1, 1, "", "XmippProtDeepVolPostProc"]], "xmipp3.protocols.protocol_postProcessing_deepPostProcessing.XmippProtDeepVolPostProc": [[276, 2, 1, "", "HI_RES"], [276, 2, 1, "", "MODEL_TARGET_OPTIONS"], [276, 2, 1, "", "NORMALIZATION_AUTO"], [276, 2, 1, "", "NORMALIZATION_MASK"], [276, 2, 1, "", "NORMALIZATION_OPTIONS"], [276, 2, 1, "", "NORMALIZATION_STATS"], [276, 2, 1, "", "TIGHT_MODEL"], [276, 2, 1, "", "WIDE_MODEL"], [276, 3, 1, "", "convertInputStep"], [276, 3, 1, "", "createOutputStep"], [276, 3, 1, "", "deepVolPostProStep"]], "xmipp3.protocols.protocol_preprocess": [[278, 0, 0, "-", "geometrical_mask"], [279, 0, 0, "-", "protocol_add_noise"], [280, 0, 0, "-", "protocol_create_mask2d"], [281, 0, 0, "-", "protocol_create_mask3d"], [282, 0, 0, "-", "protocol_crop_resize"], [283, 0, 0, "-", "protocol_filter"], [284, 0, 0, "-", "protocol_image_operate"], [285, 0, 0, "-", "protocol_mask"], [286, 0, 0, "-", "protocol_movie_resize"], [287, 0, 0, "-", "protocol_preprocess"], [288, 0, 0, "-", "protocol_process"]], "xmipp3.protocols.protocol_preprocess.geometrical_mask": [[278, 1, 1, "", "XmippGeometricalMask2D"], [278, 1, 1, "", "XmippGeometricalMask3D"]], "xmipp3.protocols.protocol_preprocess.geometrical_mask.XmippGeometricalMask2D": [[278, 3, 1, "", "argsForTransformMask"], [278, 3, 1, "", "defineParams"], [278, 3, 1, "", "methods"], [278, 3, 1, "", "summary"]], "xmipp3.protocols.protocol_preprocess.geometrical_mask.XmippGeometricalMask3D": [[278, 3, 1, "", "argsForTransformMask"], [278, 3, 1, "", "defineParams"], [278, 3, 1, "", "methods"], [278, 3, 1, "", "summary"]], "xmipp3.protocols.protocol_preprocess.protocol_add_noise": [[279, 1, 1, "", "XmippProtAddNoise"], [279, 1, 1, "", "XmippProtAddNoiseParticles"], [279, 1, 1, "", "XmippProtAddNoiseVolumes"]], "xmipp3.protocols.protocol_preprocess.protocol_add_noise.XmippProtAddNoise": [[279, 2, 1, "", "GAUSSIAN_NOISE"], [279, 2, 1, "", "STUDENT_NOISE"], [279, 2, 1, "", "UNIFORM_NOISE"], [279, 3, 1, "", "getSummary"]], "xmipp3.protocols.protocol_preprocess.protocol_add_noise.XmippProtAddNoiseParticles": [[279, 3, 1, "", "addNoiseStep"], [279, 3, 1, "", "convertInputStep"], [279, 3, 1, "", "createOutputStep"], [279, 3, 1, "", "getFileNameNoisyStk"]], "xmipp3.protocols.protocol_preprocess.protocol_add_noise.XmippProtAddNoiseVolumes": [[279, 3, 1, "", "addNoiseStep"], [279, 3, 1, "", "convertInputStep"], [279, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_preprocess.protocol_create_mask2d": [[280, 1, 1, "", "XmippProtCreateMask2D"]], "xmipp3.protocols.protocol_preprocess.protocol_create_mask2d.XmippProtCreateMask2D": [[280, 3, 1, "", "createMaskFromGeometryStep"], [280, 3, 1, "", "createOutputStep"], [280, 3, 1, "", "postProcessMaskStep"]], "xmipp3.protocols.protocol_preprocess.protocol_create_mask3d": [[281, 1, 1, "", "XmippProtCreateMask3D"]], "xmipp3.protocols.protocol_preprocess.protocol_create_mask3d.XmippProtCreateMask3D": [[281, 3, 1, "", "createMaskFromFeatureFile"], [281, 3, 1, "", "createMaskFromGeometryStep"], [281, 3, 1, "", "createMaskFromVolumeStep"], [281, 3, 1, "", "createOutputStep"], [281, 3, 1, "", "postProcessMaskStep"]], "xmipp3.protocols.protocol_preprocess.protocol_crop_resize": [[282, 1, 1, "", "XmippProtCropResizeParticles"], [282, 1, 1, "", "XmippProtCropResizeVolumes"], [282, 1, 1, "", "XmippResizeHelper"]], "xmipp3.protocols.protocol_preprocess.protocol_crop_resize.XmippProtCropResizeParticles": [[282, 3, 1, "", "filterStep"], [282, 3, 1, "", "resizeStep"], [282, 3, 1, "", "windowStep"]], "xmipp3.protocols.protocol_preprocess.protocol_crop_resize.XmippProtCropResizeVolumes": [[282, 3, 1, "", "filterStep"], [282, 3, 1, "", "resizeStep"], [282, 3, 1, "", "windowStep"]], "xmipp3.protocols.protocol_preprocess.protocol_crop_resize.XmippResizeHelper": [[282, 2, 1, "", "RESIZE_DIMENSIONS"], [282, 2, 1, "", "RESIZE_FACTOR"], [282, 2, 1, "", "RESIZE_PYRAMID"], [282, 2, 1, "", "RESIZE_SAMPLINGRATE"], [282, 2, 1, "", "WINDOW_OP_CROP"], [282, 2, 1, "", "WINDOW_OP_WINDOW"], [282, 3, 1, "", "filterStep"], [282, 3, 1, "", "resizeStep"], [282, 3, 1, "", "windowStep"]], "xmipp3.protocols.protocol_preprocess.protocol_filter": [[283, 1, 1, "", "XmippFilterHelper"], [283, 1, 1, "", "XmippProtFilterParticles"], [283, 1, 1, "", "XmippProtFilterVolumes"]], "xmipp3.protocols.protocol_preprocess.protocol_filter.XmippFilterHelper": [[283, 2, 1, "", "FM_ADAPTIVE_SOFT"], [283, 2, 1, "", "FM_BAND_PASS"], [283, 2, 1, "", "FM_BAYESIAN"], [283, 2, 1, "", "FM_CENTRAL"], [283, 2, 1, "", "FM_CTF"], [283, 2, 1, "", "FM_DAUB12"], [283, 2, 1, "", "FM_DAUB20"], [283, 2, 1, "", "FM_DAUB4"], [283, 2, 1, "", "FM_HIGH_PASS"], [283, 2, 1, "", "FM_LOW_PASS"], [283, 2, 1, "", "FM_MEDIAN"], [283, 2, 1, "", "FM_REMOVE_SCALE"], [283, 2, 1, "", "FM_SOFT_THRESHOLDING"], [283, 3, 1, "", "getFreqDecay"], [283, 3, 1, "", "getHighFreq"], [283, 3, 1, "", "getInputSampling"], [283, 3, 1, "", "getLowFreq"], [283, 3, 1, "", "getModesCondition"]], "xmipp3.protocols.protocol_preprocess.protocol_filter.XmippProtFilterParticles": [[283, 3, 1, "", "convertCTFXmippStep"], [283, 3, 1, "", "filterStep"], [283, 3, 1, "", "getFreqDecay"], [283, 3, 1, "", "getHighFreq"], [283, 3, 1, "", "getInputSampling"], [283, 3, 1, "", "getLowFreq"], [283, 2, 1, "", "tmpCTF"]], "xmipp3.protocols.protocol_preprocess.protocol_filter.XmippProtFilterVolumes": [[283, 3, 1, "", "filterStep"], [283, 3, 1, "", "getFreqDecay"], [283, 3, 1, "", "getHighFreq"], [283, 3, 1, "", "getInputSampling"], [283, 3, 1, "", "getLowFreq"]], "xmipp3.protocols.protocol_preprocess.protocol_image_operate": [[284, 1, 1, "", "XmippOperateHelper"], [284, 1, 1, "", "XmippProtImageOperateParticles"], [284, 1, 1, "", "XmippProtImageOperateVolumes"]], "xmipp3.protocols.protocol_preprocess.protocol_image_operate.XmippProtImageOperateParticles": [[284, 3, 1, "", "convertInputStep"], [284, 3, 1, "", "operationStep"]], "xmipp3.protocols.protocol_preprocess.protocol_image_operate.XmippProtImageOperateVolumes": [[284, 3, 1, "", "convertInputStep"], [284, 3, 1, "", "operationStep"]], "xmipp3.protocols.protocol_preprocess.protocol_mask": [[285, 1, 1, "", "XmippProtMask"], [285, 1, 1, "", "XmippProtMaskParticles"], [285, 1, 1, "", "XmippProtMaskVolumes"]], "xmipp3.protocols.protocol_preprocess.protocol_mask.XmippProtMask": [[285, 3, 1, "", "copyMaskFileStep"], [285, 3, 1, "", "maskStep"]], "xmipp3.protocols.protocol_preprocess.protocol_mask.XmippProtMaskParticles": [[285, 2, 1, "", "GEOMETRY_BASECLASS"], [285, 2, 1, "", "MASK_CLASSNAME"], [285, 2, 1, "", "MASK_FILE"]], "xmipp3.protocols.protocol_preprocess.protocol_mask.XmippProtMaskVolumes": [[285, 2, 1, "", "GEOMETRY_BASECLASS"], [285, 2, 1, "", "MASK_CLASSNAME"], [285, 2, 1, "", "MASK_FILE"]], "xmipp3.protocols.protocol_preprocess.protocol_movie_resize": [[286, 1, 1, "", "XmippProtMovieResize"]], "xmipp3.protocols.protocol_preprocess.protocol_movie_resize.XmippProtMovieResize": [[286, 3, 1, "", "createOutputStep"], [286, 3, 1, "", "validate"]], "xmipp3.protocols.protocol_preprocess.protocol_preprocess": [[287, 1, 1, "", "XmippPreprocessHelper"], [287, 1, 1, "", "XmippProtPreprocessParticles"], [287, 1, 1, "", "XmippProtPreprocessVolumes"]], "xmipp3.protocols.protocol_preprocess.protocol_preprocess.XmippProtPreprocessParticles": [[287, 2, 1, "", "NORM_NEW"], [287, 2, 1, "", "NORM_OLD"], [287, 2, 1, "", "NORM_RAMP"], [287, 3, 1, "", "centerStep"], [287, 3, 1, "", "invertStep"], [287, 3, 1, "", "normalizeStep"], [287, 3, 1, "", "phaseFlipStep"], [287, 3, 1, "", "randomizeStep"], [287, 3, 1, "", "removeDustStep"], [287, 3, 1, "", "sortImages"], [287, 3, 1, "", "thresholdStep"]], "xmipp3.protocols.protocol_preprocess.protocol_preprocess.XmippProtPreprocessVolumes": [[287, 2, 1, "", "AGG_AVERAGE"], [287, 2, 1, "", "AGG_SUM"], [287, 2, 1, "", "SEG_AMIN"], [287, 2, 1, "", "SEG_AUTO"], [287, 2, 1, "", "SEG_DALTON"], [287, 2, 1, "", "SEG_VOXEL"], [287, 3, 1, "", "adjustStep"], [287, 3, 1, "", "changeHandStep"], [287, 3, 1, "", "invertStep"], [287, 3, 1, "", "laplacianStep"], [287, 3, 1, "", "normalizeStep"], [287, 3, 1, "", "projectionStep"], [287, 3, 1, "", "randomizeStep"], [287, 3, 1, "", "removeDustStep"], [287, 3, 1, "", "rotateIcoStep"], [287, 3, 1, "", "segmentStep"], [287, 3, 1, "", "symmetrizeStep"], [287, 3, 1, "", "thresholdStep"]], "xmipp3.protocols.protocol_preprocess.protocol_process": [[288, 1, 1, "", "XmippProcessParticles"], [288, 1, 1, "", "XmippProcessVolumes"]], "xmipp3.protocols.protocol_preprocess.protocol_process.XmippProcessParticles": [[288, 3, 1, "", "convertInputStep"], [288, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_preprocess.protocol_process.XmippProcessVolumes": [[288, 3, 1, "", "convertInputStep"], [288, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_preprocess_micrographs": [[289, 1, 1, "", "XmippProtPreprocessMicrographs"]], "xmipp3.protocols.protocol_preprocess_micrographs.XmippProtPreprocessMicrographs": [[289, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_projmatch": [[291, 0, 0, "-", "projmatch_form"], [292, 0, 0, "-", "projmatch_initialize"], [293, 0, 0, "-", "projmatch_steps"], [294, 0, 0, "-", "protocol_projmatch"]], "xmipp3.protocols.protocol_projmatch.projmatch_initialize": [[292, 5, 1, "", "createFilenameTemplates"], [292, 5, 1, "", "initializeLists"]], "xmipp3.protocols.protocol_projmatch.projmatch_steps": [[293, 5, 1, "", "getProjectionMatchingArgs"], [293, 5, 1, "", "insertAngularClassAverageStep"], [293, 5, 1, "", "insertAngularProjectLibraryStep"], [293, 5, 1, "", "insertComputeResolutionStep"], [293, 5, 1, "", "insertFilterVolumeStep"], [293, 5, 1, "", "insertMaskReferenceStep"], [293, 5, 1, "", "insertReconstructionStep"], [293, 5, 1, "", "runAngularProjectLibraryStep"], [293, 5, 1, "", "runAssignImagesToReferences"], [293, 5, 1, "", "runCalculateFscStep"], [293, 5, 1, "", "runCreateOutputStep"], [293, 5, 1, "", "runExecuteCtfGroupsStep"], [293, 5, 1, "", "runFilterVolumeStep"], [293, 5, 1, "", "runInitAngularReferenceFileStep"], [293, 5, 1, "", "runProjectionMatching"], [293, 5, 1, "", "runReconstructionStep"], [293, 5, 1, "", "runStoreResolutionStep"], [293, 5, 1, "", "runTransformMaskStep"], [293, 5, 1, "", "runVolumeConvertStep"]], "xmipp3.protocols.protocol_projmatch.protocol_projmatch": [[294, 1, 1, "", "XmippProtProjMatch"]], "xmipp3.protocols.protocol_projmatch.protocol_projmatch.XmippProtProjMatch": [[294, 2, 1, "", "FILENAMENUMBERLENGTH"], [294, 3, 1, "", "allCtfGroups"], [294, 3, 1, "", "allIters"], [294, 3, 1, "", "allRefs"], [294, 3, 1, "", "angularProjectLibraryStep"], [294, 3, 1, "", "assignImagesToReferencesStep"], [294, 3, 1, "", "calculateDeviationsStep"], [294, 3, 1, "", "calculateFscStep"], [294, 3, 1, "", "cleanVolumeStep"], [294, 3, 1, "", "convertInputStep"], [294, 3, 1, "", "createIterDirsStep"], [294, 3, 1, "", "createOutputStep"], [294, 3, 1, "", "executeCtfGroupsStep"], [294, 3, 1, "", "filterVolumeStep"], [294, 3, 1, "", "getLastIter"], [294, 3, 1, "", "initAngularReferenceFileStep"], [294, 3, 1, "", "itersBoolValues"], [294, 3, 1, "", "itersFloatValues"], [294, 3, 1, "", "itersStringValues"], [294, 3, 1, "", "projectionMatchingStep"], [294, 3, 1, "", "reconstructionStep"], [294, 3, 1, "", "storeResolutionStep"], [294, 3, 1, "", "transformMaskStep"], [294, 3, 1, "", "volumeConvertStep"]], "xmipp3.protocols.protocol_random_conical_tilt": [[295, 1, 1, "", "XmippProtRCT"]], "xmipp3.protocols.protocol_random_conical_tilt.XmippProtRCT": [[295, 3, 1, "", "createOutputStep"], [295, 3, 1, "", "createRctImagesStep"], [295, 3, 1, "", "reconstructClass"]], "xmipp3.protocols.protocol_ransac": [[296, 1, 1, "", "XmippProtRansac"]], "xmipp3.protocols.protocol_ransac.XmippProtRansac": [[296, 3, 1, "", "convertInputStep"], [296, 3, 1, "", "createOutputStep"], [296, 3, 1, "", "evaluateVolumesStep"], [296, 3, 1, "", "getBestVolumesStep"], [296, 3, 1, "", "getCCThreshold"], [296, 3, 1, "", "getCorrThreshStep"], [296, 3, 1, "", "projMatchStep"], [296, 3, 1, "", "projectInitialVolume"], [296, 3, 1, "", "ransacIterationStep"], [296, 3, 1, "", "reconstructStep"], [296, 3, 1, "", "resizeStep"], [296, 3, 1, "", "scoreFinalVolumes"]], "xmipp3.protocols.protocol_reconstruct_fourier": [[297, 1, 1, "", "XmippProtReconstructFourier"]], "xmipp3.protocols.protocol_reconstruct_fourier.XmippProtReconstructFourier": [[297, 3, 1, "", "convertInputStep"], [297, 3, 1, "", "createOutputStep"], [297, 3, 1, "", "reconstructStep"]], "xmipp3.protocols.protocol_reconstruct_heterogeneous": [[298, 1, 1, "", "XmippProtReconstructHeterogeneous"]], "xmipp3.protocols.protocol_reconstruct_heterogeneous.XmippProtReconstructHeterogeneous": [[298, 3, 1, "", "calculateAngStep"], [298, 3, 1, "", "classifyParticles"], [298, 3, 1, "", "cleanDirectory"], [298, 3, 1, "", "convertInputStep"], [298, 3, 1, "", "createOutput"], [298, 3, 1, "", "evaluateConvergence"], [298, 3, 1, "", "getNumberOfReconstructedVolumes"], [298, 3, 1, "", "globalAssignment"], [298, 3, 1, "", "insertIteration"], [298, 3, 1, "", "parseSymList"], [298, 3, 1, "", "postProcessing"], [298, 3, 1, "", "prepareReferences"], [298, 3, 1, "", "readInfoField"], [298, 3, 1, "", "reconstruct"], [298, 3, 1, "", "writeInfoField"]], "xmipp3.protocols.protocol_reconstruct_highres": [[299, 1, 1, "", "XmippProtReconstructHighRes"], [299, 5, 1, "", "getPreviousQuality"]], "xmipp3.protocols.protocol_reconstruct_highres.XmippProtReconstructHighRes": [[299, 2, 1, "", "AUTOMATIC_ALIGNMENT"], [299, 2, 1, "", "GLOBAL_ALIGNMENT"], [299, 2, 1, "", "LOCAL_ALIGNMENT"], [299, 2, 1, "", "NO_ALIGNMENT"], [299, 2, 1, "", "SPLIT_FIXED"], [299, 2, 1, "", "SPLIT_STOCHASTIC"], [299, 2, 1, "", "STOCHASTIC_ALIGNMENT"], [299, 3, 1, "", "adaptShifts"], [299, 3, 1, "", "calculateAngStep"], [299, 3, 1, "", "checkInfoField"], [299, 3, 1, "", "cleanDirectory"], [299, 3, 1, "", "convertInputStep"], [299, 3, 1, "", "copyBasicInformation"], [299, 3, 1, "", "createOutput"], [299, 3, 1, "", "doIteration000"], [299, 3, 1, "", "doWeightSSNR"], [299, 3, 1, "", "evaluateReconstructions"], [299, 3, 1, "", "getLastFinishedIter"], [299, 3, 1, "", "getNumberOfPreviousIterations"], [299, 3, 1, "", "globalAssignment"], [299, 3, 1, "", "insertIteration"], [299, 3, 1, "", "localAssignment"], [299, 3, 1, "", "noAssignment"], [299, 3, 1, "", "postProcessing"], [299, 3, 1, "", "prepareImages"], [299, 3, 1, "", "prepareMask"], [299, 3, 1, "", "prepareReferences"], [299, 3, 1, "", "qualifyParticles"], [299, 3, 1, "", "readInfoField"], [299, 3, 1, "", "reconstruct"], [299, 3, 1, "", "weightParticles"], [299, 3, 1, "", "writeInfoField"]], "xmipp3.protocols.protocol_reconstruct_significant": [[300, 1, 1, "", "XmippProtReconstructSignificant"]], "xmipp3.protocols.protocol_reconstruct_significant.XmippProtReconstructSignificant": [[300, 3, 1, "", "convertInputStep"], [300, 3, 1, "", "createOutputStep"], [300, 3, 1, "", "getIterTmpVolume"], [300, 3, 1, "", "getIterVolume"], [300, 3, 1, "", "getLastIteration"], [300, 3, 1, "", "getSignificantArgs"], [300, 3, 1, "", "significantStep"]], "xmipp3.protocols.protocol_reconstruct_swarm": [[301, 1, 1, "", "XmippProtReconstructSwarm"]], "xmipp3.protocols.protocol_reconstruct_swarm.XmippProtReconstructSwarm": [[301, 3, 1, "", "calculateAverage"], [301, 3, 1, "", "cleanVolume"], [301, 3, 1, "", "convertInputStep"], [301, 3, 1, "", "convertInputVolume"], [301, 3, 1, "", "createOutput"], [301, 3, 1, "", "evaluateIndividuals"], [301, 3, 1, "", "postProcessing"], [301, 3, 1, "", "readInfoField"], [301, 3, 1, "", "reconstructNewVolumes"], [301, 3, 1, "", "updateVolumes"], [301, 3, 1, "", "writeInfoField"]], "xmipp3.protocols.protocol_resolution3d": [[302, 1, 1, "", "XmippProtResolution3D"]], "xmipp3.protocols.protocol_resolution3d.XmippProtResolution3D": [[302, 3, 1, "", "calculateDPRResolution"], [302, 3, 1, "", "calculateFSCResolution"], [302, 3, 1, "", "calculateFscStep"], [302, 3, 1, "", "computeBfactorStep"], [302, 3, 1, "", "createOutputStep"], [302, 3, 1, "", "createSummaryStep"]], "xmipp3.protocols.protocol_resolution_bfactor": [[303, 1, 1, "", "XmippProtbfactorResolution"]], "xmipp3.protocols.protocol_resolution_bfactor.XmippProtbfactorResolution": [[303, 3, 1, "", "convertInputStep"], [303, 3, 1, "", "matchingBfactorLocalResolution"], [303, 3, 1, "", "mrc_convert"]], "xmipp3.protocols.protocol_resolution_deepres": [[304, 1, 1, "", "XmippProtDeepRes"], [304, 5, 1, "", "updateEnviron"]], "xmipp3.protocols.protocol_resolution_deepres.XmippProtDeepRes": [[304, 2, 1, "", "HIGH_RESOL"], [304, 2, 1, "", "LOW_RESOL"], [304, 3, 1, "", "convertInputStep"], [304, 3, 1, "", "createChimeraOutput"], [304, 3, 1, "", "createHistrogram"], [304, 3, 1, "", "createOutputStep"], [304, 3, 1, "", "getMinMax"], [304, 3, 1, "", "resizeInputStep"], [304, 3, 1, "", "resolutionStep"], [304, 3, 1, "", "transformStep"]], "xmipp3.protocols.protocol_resolution_directional": [[305, 1, 1, "", "XmippProtMonoDir"]], "xmipp3.protocols.protocol_resolution_directional.XmippProtMonoDir": [[305, 3, 1, "", "MonoResStep"], [305, 3, 1, "", "convertInputStep"], [305, 3, 1, "", "createEllipsoid"], [305, 3, 1, "", "createHistrogram"], [305, 3, 1, "", "createHistrogramStep"], [305, 3, 1, "", "createOutputStep"], [305, 3, 1, "", "directionalResolutionStep"]], "xmipp3.protocols.protocol_resolution_fso": [[306, 1, 1, "", "XmippProtFSO"]], "xmipp3.protocols.protocol_resolution_fso.XmippProtFSO": [[306, 3, 1, "", "FSOestimationStep"], [306, 3, 1, "", "convertInputStep"], [306, 3, 1, "", "createOutputStep"], [306, 3, 1, "", "mrc_convert"]], "xmipp3.protocols.protocol_resolution_monogenic_signal": [[307, 1, 1, "", "XmippProtMonoRes"]], "xmipp3.protocols.protocol_resolution_monogenic_signal.XmippProtMonoRes": [[307, 3, 1, "", "convertInputStep"], [307, 3, 1, "", "createHistogram"], [307, 3, 1, "", "createOutputStep"], [307, 3, 1, "", "getMinMax"], [307, 3, 1, "", "ifNomask"], [307, 3, 1, "", "readMetaDataOutput"], [307, 3, 1, "", "resolutionMonogenicSignalStep"]], "xmipp3.protocols.protocol_rotate_volume": [[308, 1, 1, "", "XmippProtRotateVolume"]], "xmipp3.protocols.protocol_rotate_volume.XmippProtRotateVolume": [[308, 3, 1, "", "createOutputStep"], [308, 3, 1, "", "rotateStep"]], "xmipp3.protocols.protocol_rotational_spectra": [[309, 1, 1, "", "XmippProtRotSpectra"]], "xmipp3.protocols.protocol_rotational_spectra.XmippProtRotSpectra": [[309, 3, 1, "", "calculateSpectraStep"], [309, 3, 1, "", "centerFirstHarmonicStep"], [309, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_rotational_symmetry": [[310, 1, 1, "", "XmippProtRotationalSymmetry"]], "xmipp3.protocols.protocol_rotational_symmetry.XmippProtRotationalSymmetry": [[310, 2, 1, "", "GLOBAL_LOCAL_SEARCH"], [310, 2, 1, "", "GLOBAL_SEARCH"], [310, 2, 1, "", "LOCAL_SEARCH"], [310, 3, 1, "", "coarseSearch"], [310, 3, 1, "", "copyInput"], [310, 3, 1, "", "createOutput"], [310, 3, 1, "", "fineSearch"], [310, 3, 1, "", "getAngles"], [310, 3, 1, "", "symmetrize"]], "xmipp3.protocols.protocol_screen_deepConsensus": [[311, 1, 1, "", "XmippProtDeepConsSubSet"], [311, 1, 1, "", "XmippProtScreenDeepConsensus"]], "xmipp3.protocols.protocol_screen_deepConsensus.XmippProtScreenDeepConsensus": [[311, 2, 1, "", "ADD_DATA_TRAIN_CUST"], [311, 2, 1, "", "ADD_DATA_TRAIN_CUSTOM_OPT"], [311, 2, 1, "", "ADD_DATA_TRAIN_CUSTOM_OPT_COORS"], [311, 2, 1, "", "ADD_DATA_TRAIN_CUSTOM_OPT_PARTS"], [311, 2, 1, "", "ADD_DATA_TRAIN_NONE"], [311, 2, 1, "", "ADD_DATA_TRAIN_PRECOMP"], [311, 2, 1, "", "ADD_DATA_TRAIN_TYPES"], [311, 2, 1, "", "ADD_MODEL_TRAIN_NEW"], [311, 2, 1, "", "ADD_MODEL_TRAIN_PRETRAIN"], [311, 2, 1, "", "ADD_MODEL_TRAIN_PREVRUN"], [311, 2, 1, "", "ADD_MODEL_TRAIN_TYPES"], [311, 2, 1, "", "CONSENSUS_COOR_PATH_TEMPLATE"], [311, 2, 1, "", "CONSENSUS_PARTS_PATH_TEMPLATE"], [311, 2, 1, "", "ENDED"], [311, 2, 1, "", "EXTRACTING"], [311, 2, 1, "", "LAST_ROUND"], [311, 2, 1, "", "NET_TEMPLATE"], [311, 2, 1, "", "PARTICLES_TEMPLATE"], [311, 2, 1, "", "PREDICTING"], [311, 2, 1, "", "PREDICT_BATCH_MAX"], [311, 2, 1, "", "PREPROCESSING"], [311, 2, 1, "", "PREPROCESS_BATCH_MAX"], [311, 2, 1, "", "PRE_PROC_MICs_PATH"], [311, 2, 1, "", "TO_EXTRACT_MICFNS"], [311, 2, 1, "", "TO_TRAIN_MICFNS"], [311, 2, 1, "", "TRAINED_PARAMS_PATH"], [311, 2, 1, "", "TRAINING"], [311, 2, 1, "", "TRAIN_BATCH_MAX"], [311, 2, 1, "", "USING_INPUT_COORDS"], [311, 2, 1, "", "USING_INPUT_MICS"], [311, 3, 1, "", "allFree"], [311, 3, 1, "", "calculateCoorConsensusStep"], [311, 3, 1, "", "checkIfNewMics"], [311, 3, 1, "", "checkIfParentsFinished"], [311, 3, 1, "", "cnnFree"], [311, 2, 1, "", "counter"], [311, 3, 1, "", "createFinalOutput"], [311, 3, 1, "", "createOutputStep"], [311, 3, 1, "", "createPreliminarOutput"], [311, 3, 1, "", "doTraining"], [311, 3, 1, "", "endPredictingStep"], [311, 3, 1, "", "endProtocolStep"], [311, 3, 1, "", "endTrainingStep"], [311, 3, 1, "", "extractParticles"], [311, 3, 1, "", "getAllCoordsInputMicrographs"], [311, 3, 1, "", "getCoordinatesOutput"], [311, 3, 1, "", "getExtractedMicFns"], [311, 3, 1, "", "getInpCoordsFns"], [311, 3, 1, "", "getInputMicsFns"], [311, 3, 1, "", "getMicrographFnsWithCoordinates"], [311, 3, 1, "", "getMicsIds"], [311, 3, 1, "", "getParticlesOutput"], [311, 3, 1, "", "getPreCoordinatesOutput"], [311, 3, 1, "", "getPreParticlesOutput"], [311, 3, 1, "", "getPreProcParamsFromForm"], [311, 3, 1, "", "getPredictedMicFns"], [311, 3, 1, "", "getPreprocessedMicFns"], [311, 3, 1, "", "getTrainedMicFns"], [311, 3, 1, "", "initializeStep"], [311, 3, 1, "", "insertCaculateConsensusSteps"], [311, 3, 1, "", "insertExtractPartSteps"], [311, 3, 1, "", "joinSetOfParticlesStep"], [311, 3, 1, "", "justPredict"], [311, 3, 1, "", "lastRoundStep"], [311, 3, 1, "", "loadCoords"], [311, 3, 1, "", "loadMeanAccuracy"], [311, 3, 1, "", "loadMicSetFromFns"], [311, 3, 1, "", "loadTrainedParams"], [311, 3, 1, "", "networkReadyToPredict"], [311, 3, 1, "", "pickNoise"], [311, 3, 1, "", "predictCNN"], [311, 3, 1, "", "predictionsOn"], [311, 3, 1, "", "preprocessMicsStep"], [311, 3, 1, "", "prunePaths"], [311, 3, 1, "", "readyPreliminarPrediction"], [311, 3, 1, "", "readyToExtractMicFns"], [311, 3, 1, "", "readyToPredictMicFns"], [311, 3, 1, "", "readyToPreprocessMics"], [311, 3, 1, "", "readyToTrainMicFns"], [311, 3, 1, "", "retrievePreviousPassModel"], [311, 3, 1, "", "retrievePreviousRunModel"], [311, 3, 1, "", "retrieveTrainSets"], [311, 3, 1, "", "saveTrainedParams"], [311, 3, 1, "", "trainCNN"], [311, 3, 1, "", "trainingOn"], [311, 3, 1, "", "updateOutput"], [311, 3, 1, "", "updatePreOutput"], [311, 3, 1, "", "uploadTrainedParam"], [311, 3, 1, "", "waitFreeInputCoords"], [311, 3, 1, "", "waitFreeInputMics"]], "xmipp3.protocols.protocol_screen_deeplearning": [[312, 1, 1, "", "XmippProtScreenDeepLearning"]], "xmipp3.protocols.protocol_screen_deeplearning.XmippProtScreenDeepLearning": [[312, 3, 1, "", "convertInputStep"], [312, 3, 1, "", "createOutputStep"], [312, 3, 1, "", "predict"], [312, 3, 1, "", "train"]], "xmipp3.protocols.protocol_screen_particles": [[313, 1, 1, "", "XmippProtScreenParticles"], [313, 5, 1, "", "histThresholding"], [313, 5, 1, "", "rejectByVariance"]], "xmipp3.protocols.protocol_screen_particles.XmippProtScreenParticles": [[313, 2, 1, "", "REJ_MAXZSCORE"], [313, 2, 1, "", "REJ_NONE"], [313, 2, 1, "", "REJ_PERCENTAGE"], [313, 2, 1, "", "REJ_PERCENTAGE_SSNR"], [313, 2, 1, "", "REJ_VARGINI"], [313, 2, 1, "", "REJ_VARIANCE"], [313, 2, 1, "", "SSNR_CHOICES"], [313, 2, 1, "", "VAR_CHOICES"], [313, 2, 1, "", "ZSCORE_CHOICES"], [313, 3, 1, "", "createOutputStep"], [313, 3, 1, "", "sortImagesStep"]], "xmipp3.protocols.protocol_shift_particles": [[314, 1, 1, "", "XmippProtShiftParticles"]], "xmipp3.protocols.protocol_shift_particles.XmippProtShiftParticles": [[314, 3, 1, "", "convertStep"], [314, 3, 1, "", "createOutputStep"], [314, 3, 1, "", "shiftStep"]], "xmipp3.protocols.protocol_shift_volume": [[315, 1, 1, "", "XmippProtShiftVolume"]], "xmipp3.protocols.protocol_shift_volume.XmippProtShiftVolume": [[315, 3, 1, "", "createOutputStep"], [315, 3, 1, "", "shiftStep"]], "xmipp3.protocols.protocol_simulate_ctf": [[316, 1, 1, "", "XmippProtSimulateCTF"]], "xmipp3.protocols.protocol_simulate_ctf.XmippProtSimulateCTF": [[316, 3, 1, "", "convertInputStep"], [316, 3, 1, "", "simulateStep"]], "xmipp3.protocols.protocol_solid_angles": [[317, 1, 1, "", "XmippProtSolidAngles"]], "xmipp3.protocols.protocol_solid_angles.XmippProtSolidAngles": [[317, 3, 1, "", "classifyGroupsStep"], [317, 3, 1, "", "classifyOneGroup"], [317, 3, 1, "", "constructGroupsStep"], [317, 3, 1, "", "convertInputStep"], [317, 3, 1, "", "createOutputStep"], [317, 3, 1, "", "homogeneizeStep"], [317, 3, 1, "", "refineAnglesStep"], [317, 3, 1, "", "splitVolumeStep"]], "xmipp3.protocols.protocol_split_volume": [[318, 1, 1, "", "XmippProtSplitvolume"]], "xmipp3.protocols.protocol_split_volume.XmippProtSplitvolume": [[318, 3, 1, "", "convertInputStep"], [318, 3, 1, "", "createOutput"], [318, 3, 1, "", "generateSplittedVolumes"]], "xmipp3.protocols.protocol_split_volume_hierarchical_cluster": [[319, 1, 1, "", "XmippProtSplitVolumeHierarchical"]], "xmipp3.protocols.protocol_split_volume_hierarchical_cluster.XmippProtSplitVolumeHierarchical": [[319, 3, 1, "", "classifyGroupsStep"], [319, 3, 1, "", "classifyOneGroup"], [319, 3, 1, "", "cleaningStep"], [319, 3, 1, "", "constructGroupsStep"], [319, 3, 1, "", "convertInputStep"], [319, 3, 1, "", "createOutputStep"], [319, 3, 1, "", "homogeneizeStep"], [319, 3, 1, "", "refineAnglesStep"], [319, 3, 1, "", "runReconstruction"], [319, 3, 1, "", "splitVolumeStep"]], "xmipp3.protocols.protocol_structure_map": [[320, 1, 1, "", "XmippProtStructureMap"]], "xmipp3.protocols.protocol_structure_map.XmippProtStructureMap": [[320, 2, 1, "", "OUTPUT_SUFFIX"], [320, 3, 1, "", "alignStep"], [320, 3, 1, "", "computeCorr"], [320, 3, 1, "", "convertStep"], [320, 3, 1, "", "correlationMatrix"], [320, 3, 1, "", "gatherResultsStepCorr"], [320, 3, 1, "", "saveCorrelation"], [320, 3, 1, "", "split"]], "xmipp3.protocols.protocol_structure_map_zernike3d": [[321, 1, 1, "", "XmippProtStructureMapZernike3D"], [321, 5, 1, "", "mds"], [321, 5, 1, "", "rigidRegistration"]], "xmipp3.protocols.protocol_structure_map_zernike3d.XmippProtStructureMapZernike3D": [[321, 2, 1, "", "ALIGNED_VOL"], [321, 2, 1, "", "OUTPUT_SUFFIX"], [321, 3, 1, "", "alignStep"], [321, 3, 1, "", "computeCorr"], [321, 3, 1, "", "convertStep"], [321, 3, 1, "", "convolution"], [321, 3, 1, "", "correlationMatrix"], [321, 3, 1, "", "deformStep"], [321, 3, 1, "", "deformationMatrix"], [321, 3, 1, "", "entropyConsensus"], [321, 3, 1, "", "gatherResultsStepCorr"], [321, 3, 1, "", "gatherResultsStepDef"], [321, 3, 1, "", "gaussianKernel"], [321, 3, 1, "", "rigidAlignmentMapping"], [321, 3, 1, "", "saveCorrelation"], [321, 3, 1, "", "saveDeformation"], [321, 3, 1, "", "split"], [321, 3, 1, "", "validate"]], "xmipp3.protocols.protocol_subtract_projection": [[322, 1, 1, "", "XmippProtBoostParticles"], [322, 1, 1, "", "XmippProtSubtractProjection"], [322, 1, 1, "", "XmippProtSubtractProjectionBase"]], "xmipp3.protocols.protocol_subtract_projection.XmippProtBoostParticles": [[322, 2, 1, "", "INPUT_PARTICLES"], [322, 3, 1, "", "boostingStep"], [322, 3, 1, "", "convertStep"]], "xmipp3.protocols.protocol_subtract_projection.XmippProtSubtractProjection": [[322, 2, 1, "", "INPUT_PARTICLES"], [322, 3, 1, "", "convertStep"], [322, 3, 1, "", "subtractionStep"]], "xmipp3.protocols.protocol_subtract_projection.XmippProtSubtractProjectionBase": [[322, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_tilt_analysis": [[323, 1, 1, "", "XmippProtTiltAnalysis"], [323, 5, 1, "", "applyTransform"], [323, 5, 1, "", "computeStats"], [323, 5, 1, "", "rotation"], [323, 5, 1, "", "setAttribute"], [323, 5, 1, "", "window_coordinates2D"]], "xmipp3.protocols.protocol_tilt_analysis.XmippProtTiltAnalysis": [[323, 3, 1, "", "calculateTiltCorrelationStep"], [323, 3, 1, "", "createOutputStep"], [323, 3, 1, "", "getInputMicrographs"], [323, 3, 1, "", "getInputMicrographsPointer"], [323, 3, 1, "", "getPSDs"], [323, 3, 1, "", "initializeStep"], [323, 3, 1, "", "processMicrographStep"], [323, 2, 1, "", "stats"]], "xmipp3.protocols.protocol_trigger_data": [[324, 1, 1, "", "XmippProtTriggerData"]], "xmipp3.protocols.protocol_trigger_data.XmippProtTriggerData": [[324, 3, 1, "", "createOutputStep"], [324, 3, 1, "", "delayStep"], [324, 3, 1, "", "getImagesClass"], [324, 3, 1, "", "getImagesType"], [324, 3, 1, "", "getOututName"], [324, 3, 1, "", "setImagesClass"], [324, 3, 1, "", "setImagesType"], [324, 3, 1, "", "stopWait"], [324, 3, 1, "", "waitingHasFinished"]], "xmipp3.protocols.protocol_validate_fscq": [[325, 1, 1, "", "XmippProtValFit"]], "xmipp3.protocols.protocol_validate_fscq.XmippProtValFit": [[325, 3, 1, "", "assignPdbStep"], [325, 3, 1, "", "convertInputStep"], [325, 3, 1, "", "createOutputStep"], [325, 3, 1, "", "getFscqAttrDic"], [325, 3, 1, "", "getInputStruct"], [325, 3, 1, "", "getInputStructFile"], [325, 3, 1, "", "getPDBFile"], [325, 3, 1, "", "runBlocresStep"], [325, 3, 1, "", "substractBlocresStep"]], "xmipp3.protocols.protocol_validate_nontilt": [[326, 1, 1, "", "XmippProtValidateNonTilt"]], "xmipp3.protocols.protocol_validate_nontilt.XmippProtValidateNonTilt": [[326, 2, 1, "", "WEB"], [326, 3, 1, "", "convertInputStep"], [326, 3, 1, "", "createOutputStep"], [326, 3, 1, "", "filterVolumeStep"], [326, 3, 1, "", "projectionLibraryStep"], [326, 3, 1, "", "projectionMatchingStep"], [326, 3, 1, "", "significantStep"], [326, 3, 1, "", "validationStep"]], "xmipp3.protocols.protocol_validate_overfitting": [[327, 1, 1, "", "XmippProtValidateOverfitting"]], "xmipp3.protocols.protocol_validate_overfitting.XmippProtValidateOverfitting": [[327, 3, 1, "", "gatherResultsStep"], [327, 3, 1, "", "reconstructionStep"]], "xmipp3.protocols.protocol_volume_adjust_sub": [[328, 1, 1, "", "XmippProtVolAdjBase"], [328, 1, 1, "", "XmippProtVolAdjust"], [328, 1, 1, "", "XmippProtVolSubtraction"]], "xmipp3.protocols.protocol_volume_adjust_sub.XmippProtVolAdjBase": [[328, 3, 1, "", "createOutputStep"]], "xmipp3.protocols.protocol_volume_adjust_sub.XmippProtVolAdjust": [[328, 2, 1, "", "IMPORT_FROM_FILES"], [328, 2, 1, "", "IMPORT_OBJ"], [328, 3, 1, "", "adjustStep"]], "xmipp3.protocols.protocol_volume_adjust_sub.XmippProtVolSubtraction": [[328, 2, 1, "", "IMPORT_FROM_FILES"], [328, 2, 1, "", "IMPORT_OBJ"], [328, 3, 1, "", "convertPdbStep"], [328, 3, 1, "", "generateMask2Step"], [328, 3, 1, "", "subtractionStep"]], "xmipp3.protocols.protocol_volume_consensus": [[329, 4, 1, "", "NoOutputGenerated"], [329, 1, 1, "", "XmippProtVolConsensus"]], "xmipp3.protocols.protocol_volume_consensus.XmippProtVolConsensus": [[329, 3, 1, "", "createChimeraScript"], [329, 3, 1, "", "createOutputStep"], [329, 3, 1, "", "fusionStep"]], "xmipp3.protocols.protocol_volume_deform_zernike3d": [[330, 1, 1, "", "XmippProtVolumeDeformZernike3D"]], "xmipp3.protocols.protocol_volume_deform_zernike3d.XmippProtVolumeDeformZernike3D": [[330, 3, 1, "", "alignMaps"], [330, 3, 1, "", "convertInputStep"], [330, 3, 1, "", "convertOutputStep"], [330, 3, 1, "", "createOutputStep"], [330, 3, 1, "", "deformStep"], [330, 3, 1, "", "validate"]], "xmipp3.protocols.protocol_volume_local_sharpening": [[331, 1, 1, "", "XmippProtLocSharp"]], "xmipp3.protocols.protocol_volume_local_sharpening.XmippProtLocSharp": [[331, 3, 1, "", "MonoResStep"], [331, 3, 1, "", "checkBackgroundStep"], [331, 3, 1, "", "convertInputStep"], [331, 3, 1, "", "createMaskStep"], [331, 3, 1, "", "createOutputStep"], [331, 3, 1, "", "sharpenStep"], [331, 3, 1, "", "sharpeningAndMonoResStep"]], "xmipp3.protocols.protocol_volume_strain": [[332, 1, 1, "", "XmippProtVolumeStrain"]], "xmipp3.protocols.protocol_volume_strain.XmippProtVolumeStrain": [[332, 3, 1, "", "calculateStrain"], [332, 3, 1, "", "createChimeraScript"], [332, 3, 1, "", "prepareOutput"]], "xmipp3.protocols.protocol_write_testC": [[333, 1, 1, "", "XmippProtWriteTestC"]], "xmipp3.protocols.protocol_write_testC.XmippProtWriteTestC": [[333, 3, 1, "", "testWriteStep"]], "xmipp3.protocols.protocol_write_testP": [[334, 1, 1, "", "XmippProtWriteTestP"]], "xmipp3.protocols.protocol_write_testP.XmippProtWriteTestP": [[334, 3, 1, "", "createReferenceStep"], [334, 3, 1, "", "testWriteStep"], [334, 3, 1, "", "testWriteValidate"]], "xmipp3.utils": [[335, 1, 1, "", "Data"], [335, 1, 1, "", "PathData"], [335, 1, 1, "", "Point"], [335, 5, 1, "", "applyTransform"], [335, 5, 1, "", "copy_image"], [335, 5, 1, "", "flipYImage"], [335, 5, 1, "", "matmul_serie"], [335, 5, 1, "", "normalize_array"], [335, 5, 1, "", "readImage"], [335, 5, 1, "", "rotation"], [335, 5, 1, "", "surrounding_values"], [335, 5, 1, "", "validateXmippGpuBins"], [335, 5, 1, "", "writeImageFromArray"]], "xmipp3.utils.Data": [[335, 3, 1, "", "addPoint"], [335, 3, 1, "", "clear"], [335, 3, 1, "", "getDiscardedSize"], [335, 3, 1, "", "getPoint"], [335, 3, 1, "", "getSelectedSize"], [335, 3, 1, "", "getSize"], [335, 3, 1, "", "getWeights"], [335, 3, 1, "", "getXData"], [335, 3, 1, "", "getYData"], [335, 3, 1, "", "getZData"], [335, 3, 1, "", "iterAll"]], "xmipp3.utils.PathData": [[335, 3, 1, "", "createEmptyPoint"], [335, 3, 1, "", "removeLastPoint"], [335, 3, 1, "", "splitLongestSegment"]], "xmipp3.utils.Point": [[335, 2, 1, "", "DISCARDED"], [335, 2, 1, "", "NORMAL"], [335, 2, 1, "", "SELECTED"], [335, 3, 1, "", "eval"], [335, 3, 1, "", "getData"], [335, 3, 1, "", "getId"], [335, 3, 1, "", "getState"], [335, 3, 1, "", "getWeight"], [335, 3, 1, "", "getX"], [335, 3, 1, "", "getY"], [335, 3, 1, "", "getZ"], [335, 3, 1, "", "isDiscarded"], [335, 3, 1, "", "isSelected"], [335, 3, 1, "", "setDiscarded"], [335, 3, 1, "", "setSelected"], [335, 3, 1, "", "setState"], [335, 3, 1, "", "setX"], [335, 3, 1, "", "setY"], [335, 3, 1, "", "setZ"]], "xmipp3.viewers": [[337, 0, 0, "-", "plotter"], [338, 0, 0, "-", "viewer"], [340, 0, 0, "-", "viewer_cl2d"], [343, 0, 0, "-", "viewer_ctf_consensus"], [346, 0, 0, "-", "viewer_deep_consensus"], [347, 0, 0, "-", "viewer_deep_micrograph_cleaner"], [352, 0, 0, "-", "viewer_ml2d"]], "xmipp3.viewers.plotter": [[337, 1, 1, "", "XmippPlotter"]], "xmipp3.viewers.plotter.XmippPlotter": [[337, 3, 1, "", "plotMd"], [337, 3, 1, "", "plotMdAngularDistribution"], [337, 3, 1, "", "plotMdFile"], [337, 3, 1, "", "plotScatterMd"]], "xmipp3.viewers.viewer": [[338, 1, 1, "", "XmippViewer"]], "xmipp3.viewers.viewer.XmippViewer": [[338, 3, 1, "", "getCTFViews"]], "xmipp3.viewers.viewer_cl2d": [[340, 1, 1, "", "XmippCL2DViewer"]], "xmipp3.viewers.viewer_ctf_consensus": [[343, 1, 1, "", "XmippCTFConsensusViewer"], [343, 5, 1, "", "getStringIfActive"]], "xmipp3.viewers.viewer_deep_consensus": [[346, 1, 1, "", "XmippDeepConsensusViewer"]], "xmipp3.viewers.viewer_deep_micrograph_cleaner": [[347, 1, 1, "", "XmippDeepMicrographViewer"]], "xmipp3.viewers.viewer_ml2d": [[352, 1, 1, "", "XmippML2DViewer"], [352, 5, 1, "", "createPlots"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:exception", "5": "py:function", "6": "py:data", "7": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"], "7": ["py", "property", "Python property"]}, "titleterms": {"welcom": [0, 551], "scipion": [0, 1, 86, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 378, 380, 382, 384, 387, 391, 396, 397, 399, 400, 401, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 429, 434, 436, 439, 441, 442, 449, 453, 455, 461, 464, 470, 476, 477, 479, 481, 547, 548, 549, 550, 551], "": [0, 453, 477, 550, 551], "document": [0, 400, 551], "instal": [0, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 391, 397, 422, 426, 427, 434, 436, 439, 449, 461, 462, 463, 465, 474, 481, 514, 549], "build": [0, 387, 410, 484, 501, 511, 545, 550], "doc": [0, 387], "gener": [0, 387, 396, 398, 400, 430, 481, 486, 547], "api": [0, 377, 378, 379, 387, 452, 453, 551], "resourc": [0, 387, 434, 436, 437, 438, 439, 441, 442, 468, 547, 548], "tip": [0, 387], "em": [1, 197, 383, 391, 410, 419, 426, 427, 434, 436, 439, 441, 442, 452, 489, 501, 549], "pwem": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 410], "packag": [2, 5, 12, 13, 16, 18, 21, 34, 37, 63, 78, 81, 87, 88, 104, 114, 131, 138, 142, 148, 152, 155, 170, 177, 180, 190, 199, 203, 208, 277, 290, 336, 406, 410, 426, 427], "subpackag": [2, 12, 21, 78, 87, 104, 177, 199, 208], "submodul": [2, 5, 12, 13, 16, 18, 21, 34, 37, 63, 78, 81, 87, 88, 104, 114, 131, 138, 142, 152, 155, 170, 177, 180, 190, 199, 203, 208, 277, 290, 336, 391], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "content": [2, 5, 12, 13, 16, 18, 21, 34, 37, 63, 78, 81, 87, 88, 104, 114, 131, 138, 142, 152, 155, 170, 177, 180, 190, 199, 203, 208, 277, 290, 336, 391, 392, 397, 400, 406, 409, 410, 416, 432, 442, 465, 468, 470, 476, 481, 498, 545, 548], "bibtex": [3, 143, 201, 391], "constant": [4, 102, 116, 144, 178, 202, 391], "convert": [5, 6, 7, 8, 9, 10, 11, 203, 204, 205, 206, 391, 392, 434], "atom_struct": 6, "header": 7, "sequenc": [8, 46, 503, 504, 506, 507, 530], "symmetri": [9, 432], "transform": 10, "requir": [10, 383, 391, 483, 500], "util": [11, 17, 62, 122, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 195, 335], "emlib": [12, 13, 14, 15, 16, 17], "imag": [13, 14, 42, 398, 406, 427, 476, 478, 479], "image_handl": 14, "lib": 15, "metadata": [16, 17], "object": [18, 19, 20, 136, 383, 404, 406, 430, 452, 465, 468], "data": [19, 383, 406, 428, 438, 449, 470, 503, 504, 547, 548, 550], "data_tiltpair": 20, "protocol": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 142, 143, 144, 145, 146, 147, 148, 149, 150, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 383, 391, 392, 399, 410, 433, 435, 437, 439, 441, 452, 468, 477, 492, 493, 494, 495, 496, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548], "parallel": [22, 405], "protocol_2d": 24, "protocol_3d": 25, "protocol_align_movi": 26, "protocol_alignment_assign": 27, "protocol_alignment_inverthand": 28, "protocol_batch": 29, "protocol_boxsize_paramet": 30, "protocol_classes_selector": 31, "protocol_create_stream_data": 32, "protocol_ctf_assign": 33, "protocol_export": [34, 35], "protocol_export_db": 35, "protocol_extract_coordin": 36, "protocol_import": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "base": [38, 115, 200], "coordin": [39, 470, 473, 543, 547, 548], "ctf": [40, 410, 465, 470, 476], "dataimport": [41, 205], "mask": [43, 466, 470, 478, 526, 531], "micrograph": [44, 465, 470, 476], "particl": [45, 410, 465, 469, 470, 473, 476, 547, 548, 550], "volum": [47, 415, 428, 465, 469, 470, 478, 479, 504, 532], "protocol_mathematical_oper": 48, "protocol_micrograph": 49, "protocol_movie_eras": 50, "protocol_movi": 51, "protocol_origin_sampling_volum": 52, "protocol_particl": 53, "protocol_particles_pick": 54, "protocol_pdf_report": 55, "protocol_set_editor": 56, "protocol_set_filt": 57, "protocol_set": 58, "protocol_test": 59, "protocol_tiltpair": 60, "protocol_tool": 61, "viewer": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 169, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 391, 392, 393, 433, 478], "filehandl": 64, "plotter": [65, 113, 337], "showj": [66, 478], "viewer_bas": 67, "viewer_chimera": 68, "viewer_fsc": 69, "viewer_localr": 70, "viewer_pdf": 71, "viewer_sequ": 72, "viewer_vmd": 73, "viewer_volum": 74, "viewers_data": 75, "viewers_protocol": 76, "view": 77, "wizard": [78, 79, 80, 81, 82, 83, 84, 174, 376, 391, 394, 410], "wizards_3d": [81, 82, 83, 84], "callback": 82, "mask_structure_wizard": 83, "mask_volume_wizard": 84, "setup": [85, 175, 196, 198, 391, 400, 429], "pyworkflow": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "app": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 176], "pw_manag": 89, "pw_plot": 90, "pw_project": 91, "pw_protocol_list": 92, "pw_protocol_mpirun": 93, "pw_protocol_remot": 94, "pw_protocol_run": 95, "pw_run_test": 96, "pw_schedule_run": 97, "pw_sleep": 98, "pw_sync_data": 99, "pw_viewer": 100, "config": [101, 139, 171, 191, 464], "except": [103, 400], "gui": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 437, 441, 477, 478], "browser": 105, "canva": 106, "dialog": 107, "form": 108, "graph": [109, 158, 468, 471], "graph_layout": 110, "matplotlib_imag": 112, "project": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 138, 139, 140, 141, 397, 406, 412, 416, 417, 424, 438, 439, 441, 449, 452, 468, 470], "label": [117, 471], "searchprotocol": 119, "searchrun": 120, "step": [121, 392, 401, 437, 474, 547, 548], "viewdata": 123, "viewproject": 124, "viewprotocol": 125, "viewprotocols_extra": 126, "text": 127, "tooltip": 128, "tree": [129, 391, 392, 477], "widget": 130, "mapper": [131, 132, 133, 134, 135, 383, 430, 431], "sqlite": [133, 431], "sqlite_db": 134, "xmlmapper": 135, "plugin": [137, 377, 383, 386, 391, 397, 411, 434, 438, 441, 442, 461, 462, 474, 549], "manag": [140, 383, 392, 411, 414, 428, 474], "executor": 145, "host": [146, 460], "launch": [147, 436, 453], "param": 149, "templat": [151, 391, 434, 436, 439, 441, 442, 453, 473, 506, 507, 535, 547], "test": [152, 153, 154, 391, 392, 413, 417, 435, 438, 439, 447, 461, 465], "test_util": 153, "dataset": [156, 391, 395, 438, 467, 468], "echo": 157, "log": 159, "mpi": [160, 460, 464], "path": 161, "process": [162, 406, 407, 417, 430, 439, 451, 454, 465, 468, 479, 488, 491, 493, 550], "profil": [163, 382, 408, 445], "progressbar": 164, "properti": [165, 430], "reflect": 166, "which": [168, 400, 441], "webservic": [170, 171, 172, 173], "notifi": [172, 435], "repositori": [173, 397, 400], "guiplugin": 179, "change_rpath": 181, "clean": [182, 387, 416], "find_dep": 183, "func": 184, "inspect_plugin": 185, "install_plugin": 186, "plugin_func": 187, "plugin_manag": 188, "update_manag": 189, "script": [190, 191, 192, 193, 194, 391, 408], "fontbrows": 192, "kickoff": 193, "tutori": [194, 396, 438, 440, 468, 479, 480, 486, 545, 547, 548, 550], "xmipp": [197, 379, 410, 422, 465, 473, 477, 481], "xmipp3": [199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 476], "io_coordin": 206, "program": [207, 392, 476], "protocol_align_volum": 209, "protocol_align_volume_and_particl": 210, "protocol_analyze_local_ctf": 211, "protocol_angular_graph_consist": 212, "protocol_apply_align": 213, "protocol_apply_deformation_zernike3d": 214, "protocol_apply_transformation_matrix": 215, "protocol_apply_zernike3d": 216, "protocol_assignment_tilt_pair": 217, "protocol_break_symmetri": 218, "protocol_center_particl": 219, "protocol_cl2d": 220, "protocol_cl2d_align": 221, "protocol_classes_2d_map": 222, "protocol_classification_gpucorr": 223, "protocol_classification_gpucorr_ful": 224, "protocol_classification_gpucorr_semi": 225, "protocol_classify_kmeans2d": 226, "protocol_compare_angl": 227, "protocol_compare_reproject": 228, "protocol_consensus_classes3d": 229, "protocol_consensus_local_ctf": 230, "protocol_convert_pdb": 231, "protocol_core_analysi": 232, "protocol_create_galleri": 233, "protocol_ctf_consensu": 234, "protocol_ctf_correct_wiener2d": 235, "protocol_ctf_defocus_group": 236, "protocol_ctf_micrograph": 237, "protocol_deep_align": 238, "protocol_deep_denois": 239, "protocol_deep_hand": 240, "protocol_deep_micrograph_screen": 241, "protocol_denoise_particl": 242, "protocol_eliminate_empty_imag": 243, "protocol_enrich": 244, "protocol_extract_asymmetric_unit": 245, "protocol_extract_particl": 246, "protocol_extract_particles_movi": 247, "protocol_extract_particles_pair": 248, "protocol_flexalign": 249, "protocol_generate_reproject": 250, "protocol_helical_paramet": 251, "protocol_kerdensom": 252, "protocol_kmeans_clust": 253, "protocol_local_ctf": 254, "protocol_metaprotocol_create_output": 255, "protocol_metaprotocol_create_subset": 256, "protocol_metaprotocol_discrete_heterogeneity_schedul": 257, "protocol_metaprotocol_golden_highr": 258, "protocol_ml2d": 259, "protocol_movie_averag": 260, "protocol_movie_gain": 261, "protocol_movie_max_shift": 262, "protocol_movie_opticalflow": 263, "protocol_movie_split_fram": 264, "protocol_multiple_fsc": 265, "protocol_multireference_align": 266, "protocol_normalize_strain": 267, "protocol_particle_boxs": 268, "protocol_particle_pick": 269, "protocol_particle_pick_automat": 270, "protocol_particle_pick_consensu": 271, "protocol_particle_pick_pair": 272, "protocol_particle_pick_remove_dupl": 273, "protocol_phantom_cr": 274, "protocol_pick_nois": 275, "protocol_postprocessing_deeppostprocess": 276, "protocol_preprocess": [277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288], "geometrical_mask": 278, "protocol_add_nois": 279, "protocol_create_mask2d": 280, "protocol_create_mask3d": 281, "protocol_crop_res": 282, "protocol_filt": 283, "protocol_image_oper": 284, "protocol_mask": 285, "protocol_movie_res": 286, "protocol_process": 288, "protocol_preprocess_micrograph": 289, "protocol_projmatch": [290, 291, 292, 293, 294], "projmatch_form": 291, "projmatch_initi": 292, "projmatch_step": 293, "protocol_random_conical_tilt": 295, "protocol_ransac": 296, "protocol_reconstruct_fouri": 297, "protocol_reconstruct_heterogen": 298, "protocol_reconstruct_highr": 299, "protocol_reconstruct_signific": 300, "protocol_reconstruct_swarm": 301, "protocol_resolution3d": 302, "protocol_resolution_bfactor": 303, "protocol_resolution_deepr": 304, "protocol_resolution_direct": 305, "protocol_resolution_fso": 306, "protocol_resolution_monogenic_sign": 307, "protocol_rotate_volum": 308, "protocol_rotational_spectra": 309, "protocol_rotational_symmetri": 310, "protocol_screen_deepconsensu": 311, "protocol_screen_deeplearn": 312, "protocol_screen_particl": 313, "protocol_shift_particl": 314, "protocol_shift_volum": 315, "protocol_simulate_ctf": 316, "protocol_solid_angl": 317, "protocol_split_volum": 318, "protocol_split_volume_hierarchical_clust": 319, "protocol_structure_map": 320, "protocol_structure_map_zernike3d": 321, "protocol_subtract_project": 322, "protocol_tilt_analysi": 323, "protocol_trigger_data": 324, "protocol_validate_fscq": 325, "protocol_validate_nontilt": 326, "protocol_validate_overfit": 327, "protocol_volume_adjust_sub": 328, "protocol_volume_consensu": 329, "protocol_volume_deform_zernike3d": 330, "protocol_volume_local_sharpen": 331, "protocol_volume_strain": 332, "protocol_write_testc": 333, "protocol_write_testp": 334, "viewer_analyze_local_ctf": 339, "viewer_cl2d": 340, "viewer_classes3d": 341, "viewer_consensus_classes3d": 342, "viewer_ctf_consensu": 343, "viewer_deepemhanc": 344, "viewer_deep_align": 345, "viewer_deep_consensu": 346, "viewer_deep_micrograph_clean": 347, "viewer_eliminate_empty_imag": 348, "viewer_extract_asymmetric_unit": 349, "viewer_local_sharpen": 350, "viewer_metaprotocol_golden_highr": 351, "viewer_ml2d": 352, "viewer_movie_align": 353, "viewer_normalize_strain": 354, "viewer_pdb_deform_zernike3d": 355, "viewer_projmatch": 356, "viewer_ransac": 357, "viewer_reconstruct_highr": 358, "viewer_resolution3d": 359, "viewer_resolution_bfactor": 360, "viewer_resolution_deepr": 361, "viewer_resolution_direct": 362, "viewer_resolution_fso": 363, "viewer_resolution_monogenic_sign": 364, "viewer_solid_angl": 365, "viewer_split_volum": 366, "viewer_structure_map": 367, "viewer_swarm": 368, "viewer_validate_fscq": 369, "viewer_validate_nontilt": 370, "viewer_validate_overfit": 371, "viewer_volume_consensu": 372, "viewer_volume_deform_zernike3d": 373, "viewer_volume_strain": 374, "viewer_volume_subtract": 375, "servidor": 380, "remoto": 380, "para": 380, "procesar": 380, "con": 380, "desd": 380, "el": 380, "cnb": 380, "addit": [381, 392, 507, 547, 548], "inform": [381, 388, 396, 398], "advanc": [382, 396], "develop": [382, 392, 396, 397, 401, 410, 422, 424, 435, 440, 446, 481, 549, 551], "topic": [382, 396], "desktop": [382, 426, 427], "from": [382, 384, 391, 397, 400, 434, 450, 453, 462, 469, 476, 481, 483, 500, 507, 535, 547, 548], "command": [382, 400, 416, 453, 460, 462], "line": [382, 409, 453, 462], "debug": [382, 439], "docker": 382, "architectur": 383, "overview": [383, 389, 391, 392, 399, 432, 441, 468, 473, 478], "main": 383, "goal": 383, "other": [383, 400, 410, 426, 427, 441, 461], "featur": [383, 410], "compon": 383, "model": [383, 404, 410, 479, 484, 487, 488, 490, 491, 492, 493, 494, 495, 498, 501, 507, 510, 515, 517, 535, 545, 550], "layer": 383, "execut": [383, 392, 399, 438, 439, 474, 515], "engin": 383, "graphic": [383, 550], "user": [383, 464, 551], "interfac": [383, 550], "artwork": 384, "current": [384, 418], "logo": [384, 391, 398, 450], "2013": [384, 402], "starclust": [385, 415], "instanc": [385, 414, 428], "type": [385, 465], "aw": [385, 414, 415, 420, 428], "buildbot": 386, "ad": [386, 436, 450, 452, 477], "your": [386, 391, 392, 395, 400, 476, 489], "sphinx": 387, "virtualenv": 387, "make": [387, 392, 476], "html": [387, 410, 450], "version": [387, 410], "import": [387, 410, 465, 468, 470, 473, 504, 529, 530, 531, 532, 547, 548, 550], "note": [387, 402, 410, 514], "branch": [387, 400, 439], "push": [387, 400], "collect": 388, "statist": [388, 510, 517], "On": [388, 451], "thi": [388, 486], "page": [388, 396, 446], "enabl": [388, 449], "disabl": 388, "mechan": 388, "us": [388, 400, 409, 415, 424, 425, 428, 435, 443, 453, 476, 481, 492, 520, 535], "send": [388, 400], "usag": 388, "convent": [389, 391, 409], "creat": [390, 391, 392, 393, 394, 397, 400, 414, 428, 434, 435, 436, 437, 438, 439, 449, 452, 453, 456, 466, 469, 471, 526, 550], "new": [390, 400, 403, 410], "webtool": 390, "tabl": [391, 392, 397, 400, 406, 409, 410, 416, 430, 432, 442, 450, 465, 468, 470, 476, 478, 548, 551], "where": [391, 438, 441, 449, 474, 547, 548], "start": [391, 400, 407, 442, 445, 450], "name": [391, 392, 400, 409], "file": [391, 400, 435, 463, 464, 476], "standard": [391, 397, 399], "__init__": 391, "py": 391, "option": [391, 392, 507], "If": 391, "necessari": 391, "conf": 391, "png": 391, "gitignor": 391, "pypi": 391, "relat": [391, 424], "defin": [391, 392, 437, 547, 548], "class": [391, 392, 419, 430, 437, 442, 447, 476], "_homevar": 391, "_supportedvers": 391, "_definevari": 391, "getenviron": 391, "implement": [391, 392, 448], "validateinstal": 391, "binari": [391, 462], "publish": 391, "add": [391, 395, 400, 435], "chang": [391, 400, 410, 450], "txt": [391, 435], "manifest": 391, "via": 391, "pip": 391, "local": [391, 400, 479, 480, 533, 534], "remov": [391, 435, 450, 468, 477, 488], "previou": 391, "work": [391, 397, 434, 469], "devel": [391, 400, 462, 549], "mode": [391, 462, 471, 478, 549], "get": [391, 407, 445, 487, 551], "json": 391, "download": [391, 437, 507], "scipion_plugin_json": 391, "variabl": [391, 464], "run": [391, 408, 411, 413, 447, 464, 476], "own": [391, 395, 400], "upload": 391, "distribut": [391, 476], "definit": [392, 406, 501], "inherit": 392, "help": [392, 473], "icon": [392, 398], "messag": [392, 398], "custom": [392, 449, 450, 453], "statu": 392, "structur": [392, 406, 486, 506, 507, 508, 510, 518, 529], "paramet": [392, 399, 460, 476], "input": [392, 452, 503, 504], "output": [392, 435, 473], "function": [392, 409], "valid": [392, 479, 510, 517, 538], "warn": [392, 398], "citat": 392, "summari": [392, 410, 442, 445, 448, 513], "method": [392, 437], "extra": [392, 547], "action": 392, "avail": 392, "locat": [392, 438, 441, 477], "write": [392, 433, 438, 447], "todo": [392, 393, 394, 443, 516], "extend": 396, "tool": [396, 417, 444], "git": [396, 397, 400], "environ": [396, 429, 464], "intern": [396, 455], "hint": 396, "id": [397, 407], "eclips": 397, "how": [397, 400, 424, 425, 447, 449, 466, 469, 476, 506, 515, 550, 551], "python": [397, 409], "copi": [397, 477], "style": [398, 409], "brand": 398, "guidelin": 398, "media": 398, "typographi": 398, "color": 398, "palett": 398, "error": [398, 481], "confirm": 398, "button": [398, 439], "gpu": [399, 464], "multipl": 399, "thread": 399, "basic": [400, 434, 465], "specif": [400, 462], "configur": [400, 408, 416, 439, 460, 461, 463, 464], "email": [400, 435, 456], "some": [400, 452, 515], "alias": 400, "list": [400, 416, 456, 462, 549], "all": [400, 430, 474], "move": [400, 410, 507], "delet": [400, 416], "remot": [400, 426, 427], "submit": 400, "bugfix": 400, "creation": [400, 430, 475], "compar": 400, "differ": [400, 465, 469, 476], "ar": [400, 410, 438, 441, 476], "between": 400, "offici": 400, "two": 400, "appli": 400, "one": [400, 430, 491], "anoth": 400, "tag": 400, "stash": 400, "merg": [400, 508], "undo": 400, "middl": 400, "avoid": [400, 409], "commit": 400, "checkout": 400, "date": 400, "check": [400, 434, 439, 462, 474, 547, 548], "have": [400, 410, 418, 476], "been": [400, 410], "yet": 400, "revert": 400, "introduc": 400, "flow": 400, "fork": 400, "i2pc": [400, 414], "clone": [400, 429, 434, 436, 439, 549], "master": 400, "repo": 400, "back": 400, "introduct": [401, 406, 422, 441, 444, 468, 470, 479, 484, 501], "becom": 401, "8": [401, 402], "legaci": 402, "releas": [402, 410], "v": 402, "0": [402, 410, 450, 479, 547, 548], "2": [402, 410, 422, 442, 450, 468, 474, 547, 548, 549], "titanium": 402, "6": [402, 547, 548], "feb": 402, "2014": 402, "1": [402, 410, 422, 442, 450, 468, 474, 547, 548, 549], "4": [402, 442, 547, 549], "sillicon": 402, "jun": 402, "3": [402, 410, 422, 442, 450, 468, 479, 547, 548, 549], "aluminium": 402, "9": 402, "mai": 402, "magnesium": 402, "10": [402, 410], "apr": 402, "sodium": 402, "mar": 402, "neon": 402, "fluor": 402, "jan": 402, "oxygen": 402, "18": [402, 410], "dic": 402, "7": 402, "nitrogen": 402, "11": [402, 410], "nov": 402, "carbon": 402, "oct": 402, "5": [402, 442, 547, 548], "boron": 402, "sept": 402, "beryllium": 402, "aug": 402, "lithium": 402, "jul": 402, "linear": 403, "pick": [403, 410, 468, 480, 547, 548], "helic": 403, "cursor": 403, "biologi": 406, "state": 406, "art": 406, "3d": [406, 465, 476, 505, 508, 526, 548], "electron": [406, 476], "microscopi": 406, "workflow": [406, 411, 436, 452, 453, 465, 470, 477, 486, 501, 509, 515], "integr": 406, "motiv": 406, "refer": [406, 546], "pycharm": [407, 439], "set": [407, 416, 430, 437, 443, 445, 449, 452, 469, 551], "up": [407, 445, 449, 551], "attach": 407, "scipion3": [407, 439, 464, 481], "out": [408, 439], "box": [408, 410], "guid": 409, "blank": 409, "space": [409, 435, 509, 517, 539], "librari": 409, "v3": 410, "2021": 410, "12": 410, "20": 410, "core": [410, 481], "pworkflow": 410, "14": 410, "2020": 410, "eugeniu": 410, "kei": 410, "spa": 410, "atom": [410, 507, 508, 518, 529], "refin": [410, 476, 509, 517, 524, 539], "tomographi": [410, 547, 548, 549, 550], "beta": [410, 517], "unstabl": 410, "v2": 410, "2019": [410, 457], "05": 410, "16": 410, "diocletian": 410, "stream": [410, 411, 437, 451, 453, 454], "updat": [410, 462, 474, 481, 549], "improv": [410, 471], "bug": 410, "fix": [410, 481], "v1": 410, "2018": [410, 411, 457], "01": 410, "claudio": 410, "04": 410, "03": 410, "caligula": 410, "extract": [410, 468, 505, 528], "report": [410, 448, 449, 450], "redesign": 410, "2017": [410, 457], "06": 410, "balbino": 410, "movi": [410, 437, 470, 476], "align": [410, 465], "estim": [410, 476, 479], "monitor": [410, 435], "consolid": 410, "2016": [410, 457], "30": 410, "02": 410, "augusto": 410, "roadmap": 411, "facil": [411, 451, 551], "happi": 411, "more": [411, 476], "agil": 411, "rotat": 412, "shift": 412, "cloud": [414, 417, 418, 424, 551], "train": [414, 417], "onli": 414, "group": [414, 417, 476], "access": [414, 428], "price": 414, "egi": [414, 418], "feder": [414, 417, 418], "fedcloud": 414, "hpc": [415, 420], "cluster": [415, 417, 420, 461], "extern": [415, 428], "eb": [415, 428], "elast": 415, "cfncluster": 415, "outdat": 416, "deal": 416, "lifetim": 416, "readonli": 416, "both": [416, 481], "deploy": [417, 418], "cryoem": [417, 510, 538], "instruct": [417, 424], "weizmann": 417, "fat": 417, "node": 417, "surfsara": 417, "utrecht": 417, "web": [417, 428, 429, 446], "westlif": [417, 424], "what": [418, 435, 441, 476], "we": [418, 450, 483, 500], "deploi": 420, "an": [420, 428, 435, 476], "infrastructur": 421, "eosc": [421, 424, 425], "system": [422, 460], "scenario": [422, 507], "solut": [422, 438], "exercis": [422, 442, 507], "histori": [422, 482, 499], "java": [423, 464, 481], "scipioncloud": [424, 426, 427, 428], "synergi": 424, "life": 424, "mobrain": 424, "research": 424, "pilot": 424, "present": 424, "public": [424, 513], "helpdesk": 424, "tech": 424, "support": 424, "acknowledg": 425, "ami": 426, "manual": [426, 427, 468, 480, 547, 550], "novnc": [426, 427], "softwar": [426, 427, 463, 514], "amazon": 428, "servic": 428, "ec2": 428, "virtual": 428, "machin": 428, "cost": 428, "comput": 428, "storag": 428, "transfer": 428, "product": 429, "sqliteflatmapp": 430, "store": 430, "exampl": [430, 460, 476], "persist": [430, 435], "schema": 430, "flat": 430, "retriev": 430, "cyclic": 432, "order": [432, 476], "n": 432, "cn": 432, "dihedr": 432, "dn": 432, "tetrahedr": 432, "t": [432, 435], "octahedr": 432, "o": 432, "icosahedr": 432, "i": [432, 435, 441, 449, 469, 474, 476, 480], "practic": [433, 437, 439], "calcul": [434, 438], "associ": [434, 436, 437, 438, 439, 441, 442, 468], "correctli": 434, "anatomi": 435, "disk": 435, "first": 435, "iter": 435, "2nd": 435, "valu": 435, "second": 435, "tweak": 435, "human": [435, 485, 507, 517], "friendli": 435, "inputprotocol": 435, "don": 435, "forget": 435, "export": [436, 470], "descript": [436, 503], "dynam": [436, 437, 453], "field": 436, "regist": 437, "The": [437, 441, 468, 477, 509, 512], "part": [437, 480, 490], "_stepscheck": 437, "displai": 438, "empiar_download": 439, "skip": 439, "launcher": [439, 481], "direct": [439, 468, 476, 480, 547, 548], "click": 439, "delai": 439, "temporarili": 439, "doe": 441, "contain": 441, "my": [441, 449, 476], "do": [441, 476], "frontend": 441, "backend": 441, "element": 441, "understand": 442, "easi": 442, "intermedi": 442, "hard": 442, "valgrind": 444, "suit": 444, "intel": [445, 481], "vtune": 445, "analys": 445, "result": [445, 477, 513, 517], "basetest": 447, "pass": 447, "assert": 447, "our": 447, "intro": [448, 449], "grafana": 449, "influxdb": 449, "secur": 449, "transmiss": 449, "sourc": 449, "dashboard": 449, "connect": 449, "befor": 450, "column": 450, "defocu": 450, "fly": 451, "For": 451, "static": 453, "simul": 454, "acquisit": 454, "demo": 455, "cours": 455, "school": 455, "crystallographi": 455, "contact": [456, 519], "u": 456, "mail": 456, "issu": 456, "github": [456, 549], "join": [456, 549], "slack": [456, 549], "event": 457, "depend": [459, 481], "queue": 460, "slurm": 460, "torqu": 460, "pb": 460, "sge": 460, "prerequisit": 461, "regular": 462, "without": 462, "link": 463, "exist": 463, "folder": 463, "edit": 463, "show": 464, "opencv": 464, "flag": 464, "multi": 464, "verifi": 465, "small": 465, "spider": [465, 477], "mda": 465, "emx": 465, "discrep": 465, "medium": 465, "mix": [465, 479], "reconstruct": [465, 479, 480], "initi": [465, 479, 487, 488, 492, 498, 508], "larg": 465, "relion": [465, 476, 479, 550], "2d": [465, 466, 468], "classif": [465, 468, 476], "random": 465, "conic": 465, "tilt": [465, 470], "procotol": 465, "preprocess": [465, 476, 505], "classifi": 465, "denois": [468, 480, 548], "membran": [468, 480, 547, 548], "segment": [468, 480], "annot": [468, 480], "prepar": 468, "tomogram": [468, 480], "normal": 468, "target": [468, 506], "vesicl": 468, "densiti": [468, 490, 491], "threshold": 468, "save": 468, "finish": 468, "interact": 468, "analyz": [468, 477], "resiz": 468, "tomomask": 468, "pyseg": 468, "preseg": 468, "fil": 468, "post": 468, "duplic": 468, "filter": [468, 473, 478], "subtomogram": [468, 480, 547, 548], "frequent": 469, "ask": 469, "question": [469, 517], "can": [469, 476, 515], "switch": 469, "coars": 469, "bin": [469, 547], "level": 469, "sever": 469, "pair": 470, "averag": [470, 476, 480], "etc": 470, "visual": 471, "assign": [471, 543], "licens": 472, "picker": 473, "toolbar": 473, "menu": 473, "window": [473, 474, 478], "autopick": 473, "select": [474, 476], "oper": [474, 518, 521], "uninstal": 474, "uncheck": 474, "glossari": 474, "subset": [475, 478, 550], "per": 476, "anywai": 476, "need": 476, "downsiz": 476, "also": 476, "you": [476, 483, 500, 515], "detector": 476, "should": 476, "reach": 476, "higher": 476, "resolut": [476, 480, 501], "star": 476, "plot": 476, "orient": [476, 547, 548], "panel": 477, "schedul": 477, "galleri": 478, "match": [479, 547], "full": 479, "video": 479, "mous": 479, "apoferritin": 479, "sax": 479, "etomo": 480, "analysi": 480, "monotomo": 480, "ribosom": 480, "hiv": 480, "ii": 480, "troubleshoot": 481, "found": 481, "font": 481, "conda": 481, "while": 481, "compil": 481, "non": [481, 547], "precompil": 481, "bundl": 481, "amd": 481, "cannot": 481, "revis": [482, 499], "prelud": [483, 500], "d": [483, 500], "like": [483, 500], "hear": [483, 500], "alphafold": [484, 487, 497, 498], "problem": [485, 502, 515], "solv": [485, 502, 515], "ion": 485, "channel": [485, 549], "tacan": 485, "isoform": 485, "induc": 485, "tumor": 485, "necrosi": 485, "factor": 485, "alpha": [485, 517], "follow": 486, "predict": [486, 490, 492, 493, 494, 495, 498, 506], "fit": [486, 508, 509, 523, 542], "alphafold2": [486, 487, 492], "monom": [487, 488], "multim": 487, "low": 488, "confid": 488, "residu": 488, "break": 488, "compact": 488, "domain": [488, 489], "homodim": 488, "dock": [489, 490, 491, 494, 496, 508, 541], "obtain": 489, "cryo": [489, 501], "map": [489, 490, 491, 501, 503, 505, 508, 520, 541, 543], "unit": [489, 505, 511, 517, 528], "cell": [489, 517], "morph": 490, "onto": 490, "fragment": 490, "rebuild": [490, 491, 495, 496], "miss": 490, "three": 491, "case": [492, 520, 535], "phenix": [493, 494, 495, 496, 508, 509, 536, 537, 538, 539, 540, 541, 542], "chimera": 497, "appendic": [498, 545], "intend": 500, "audienc": 500, "relev": 501, "haemoglobin": 502, "sharpen": [505, 527, 533], "localdeblur": 505, "deepemhanc": [505, 527], "comparison": [505, 510], "asymmetr": [505, 511, 528], "homologi": 506, "search": [506, 509, 542], "homologu": 506, "identifi": 506, "methgb": [507, 517], "subunit": [507, 517], "practis": 507, "recov": 507, "chimerax": [507, 508, 519, 520, 521, 522, 523], "session": [507, 522], "rigid": [508, 523], "complet": 508, "flexibl": 509, "ccp4": [509, 524, 525], "coot": [509, 517, 524], "real": [509, 517, 539], "refmac": [509, 517, 525], "best": 509, "emring": [510, 536], "molprob": [510, 537], "whole": [512, 517], "macromolecul": 512, "submiss": [513, 544], "databas": 513, "A": 514, "find": [515, 547, 548], "dure": 515, "answer": 517, "rsrac": 517, "stand": 517, "after": 517, "rama": 517, "ramachandran": 517, "math": 517, "rsr": 517, "chain": 518, "subtract": 520, "restor": 522, "deblur": 533, "monor": 534, "superpos": 540, "pdb": 540, "sampl": 543, "rate": 543, "origin": 543, "wwpdb": 544, "strategi": [547, 548], "preliminari": [547, 548], "dynamo": [547, 548], "geometri": [547, 548], "crop": [547, 548], "point": [547, 548], "setofcoordinates3d": 547, "prealig": [547, 548], "neural": 547, "network": 547, "eman": 547, "convnet": 547, "consensu": 547, "tomo": 549, "pre": 549, "requisit": 549, "singl": 550, "To": 550, "faq": 550, "touch": 551, "licenc": 551, "contribut": 551, "indic": 551}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 56}})